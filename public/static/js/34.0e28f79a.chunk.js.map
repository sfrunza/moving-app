{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","hooks/useIsMountedRef.js","../node_modules/@material-ui/icons/NavigateNext.js","utils/wait.js","views/pages/AccountView/Header.js","views/pages/AccountView/General/ProfileDetails.js","views/pages/AccountView/General/GeneralSettings.js","views/pages/AccountView/General/index.js","views/pages/AccountView/Subscription.js","views/pages/AccountView/Notifications.js","views/pages/AccountView/Security.js","views/pages/AccountView/index.js"],"names":["createSvgIcon","React","d","withStyles","theme","root","display","marginLeft","spacing","marginRight","backgroundColor","palette","grey","color","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","name","props","classes","other","_objectWithoutProperties","ButtonBase","_extends","component","className","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect","CardHeader","action","avatar","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","type","variant","content","flex","alignSelf","marginTop","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","SwitchBase","capitalize","checked","disabled","fontSize","text","secondary","colorPrimary","primary","main","fade","hoverOpacity","colorSecondary","CardActions","_props$disableSpacing","disableSpacing","useIsMountedRef","isMounted","useRef","useEffect","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","wait","time","Promise","res","setTimeout","useStyles","makeStyles","Header","rest","aria-label","Link","to","RouterLink","ProfileDetails","user","Card","CardContent","Box","flexDirection","textAlign","Avatar","src","gutterBottom","firstName","lastName","state","country","timezone","Button","fullWidth","stateOptions","GeneralSettings","enqueueSnackbar","useDispatch","useSnackbar","enableReinitialize","initialValues","canHire","email","isPublic","phone","validationSchema","Yup","shape","max","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","success","error","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Divider","Grid","container","item","md","xs","TextField","Boolean","helperText","label","onBlur","onChange","select","SelectProps","native","Switch","edge","mt","FormHelperText","p","justifyContent","General","useSelector","account","lg","xl","overview","breakpoints","down","productImage","details","Subscription","isMountedRef","useState","subscription","setSubscription","getSubscription","useCallback","axios","get","then","response","data","Paper","currency","price","alt","proposalsLeft","templatesLeft","invitesLeft","adsLeft","hasAnalytics","hasEmailAlerts","Notifications","preventDefault","wrap","sm","FormControlLabel","control","defaultChecked","Security","password","passwordConfirm","min","oneOf","background","dark","minHeight","paddingTop","paddingBottom","AccountView","currentTab","setCurrentTab","Page","Container","maxWidth","Tabs","scrollButtons","textColor","tabs","tab","Tab"],"mappings":"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","file":"static/js/34.0e28f79a.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","export const wait = (time) => new Promise((res) => setTimeout(res, time));\n\nexport default wait;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Typography,\n  Breadcrumbs,\n  Link,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link color=\"inherit\" to=\"/app\" component={RouterLink}>\n          Dashboard\n        </Link>\n        <Typography color=\"textPrimary\">\n          Account\n        </Typography>\n      </Breadcrumbs>\n      <Typography\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Settings\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nfunction ProfileDetails({ user, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n          textAlign=\"center\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Typography\n            className={classes.name}\n            gutterBottom\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {`${user.firstName} ${user.lastName}`}\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body1\"\n          >\n            {`${user.state}, ${user.country}`}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            {user.timezone}\n          </Typography>\n        </Box>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"text\"\n        >\n          Remove picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nProfileDetails.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n// import { updateProfile } from 'src/actions/accountActions';\n\nconst stateOptions = ['Alabama', 'New York', 'San Francisco'];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction GeneralSettings({ user, className, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{\n        canHire: user.canHire,\n        country: user.country,\n        email: user.email,\n        firstName: user.firstName,\n        isPublic: user.isPublic,\n        lastName: user.lastName,\n        phone: user.phone,\n        state: user.state,\n      }}\n      validationSchema={Yup.object().shape({\n        country: Yup.string().max(255).required('Country is required'),\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        firstName: Yup.string().max(255).required('First name is required'),\n        lastName: Yup.string().max(255).required('Last name is required')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // await dispatch(updateProfile(values));\n          resetForm();\n          setStatus({ success: true });\n          enqueueSnackbar('Profile updated', {\n            variant: 'success'\n          });\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n        } finally {\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <CardHeader title=\"Profile\" />\n            <Divider />\n            <CardContent>\n              <Grid\n                container\n                spacing={4}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.firstName && errors.firstName)}\n                    fullWidth\n                    helperText={touched.firstName && errors.firstName}\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"firstName\"\n                    value={values.firstName}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.lastName && errors.lastName)}\n                    fullWidth\n                    helperText={touched.lastName && errors.lastName}\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"lastName\"\n                    value={values.lastName}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email ? errors.email : 'We will use this email to contact you'}\n                    label=\"Email Address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.phone && errors.phone)}\n                    fullWidth\n                    helperText={touched.phone && errors.phone}\n                    label=\"Phone Number\"\n                    name=\"phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    fullWidth\n                    label=\"Select State\"\n                    name=\"state\"\n                    onChange={handleChange}\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.state}\n                    variant=\"outlined\"\n                  >\n                    {stateOptions.map((state) => (\n                      <option\n                        key={state}\n                        value={state}\n                      >\n                        {state}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.country && errors.country)}\n                    fullWidth\n                    helperText={touched.country && errors.country}\n                    label=\"Country\"\n                    name=\"country\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"country\"\n                    value={values.country}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                  >\n                    Make Contact Info Public\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    Means that anyone viewing your profile will be able to see your\n                    contacts details\n                  </Typography>\n                  <Switch\n                    checked={values.isPublic}\n                    edge=\"start\"\n                    name=\"isPublic\"\n                    onChange={handleChange}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                  >\n                    Available to hire\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    Toggling this will let your teammates know that you are available\n                    for acquiring new projects\n                  </Typography>\n                  <Switch\n                    checked={values.canHire}\n                    edge=\"start\"\n                    name=\"canHire\"\n                    onChange={handleChange}\n                  />\n                </Grid>\n              </Grid>\n              {errors.submit && (\n                <Box mt={3}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n            </CardContent>\n            <Divider />\n            <Box\n              p={2}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n            >\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Save Changes\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nGeneralSettings.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default GeneralSettings;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport ProfileDetails from './ProfileDetails';\nimport GeneralSettings from './GeneralSettings';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction General({ className, ...rest }) {\n  const classes = useStyles();\n  const { user } = useSelector((state) => state.account);\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <ProfileDetails user={user} />\n      </Grid>\n      <Grid\n        item\n        lg={8}\n        md={6}\n        xl={9}\n        xs={12}\n      >\n        <GeneralSettings user={user} />\n      </Grid>\n    </Grid>\n  );\n}\n\nGeneral.propTypes = {\n  className: PropTypes.string\n};\n\nexport default General;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Link,\n  Paper,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  overview: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column-reverse',\n      alignItems: 'flex-start'\n    }\n  },\n  productImage: {\n    marginRight: theme.spacing(1),\n    height: 48,\n    width: 48\n  },\n  details: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    }\n  }\n}));\n\nfunction Subscription({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [subscription, setSubscription] = useState(null);\n\n  const getSubscription = useCallback(() => {\n    axios\n      .get('/api/account/subscription')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setSubscription(response.data.subscription);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getSubscription();\n  }, [getSubscription]);\n\n  if (!subscription) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Manage your subscription\" />\n      <Divider />\n      <CardContent>\n        <Paper variant=\"outlined\">\n          <Box className={classes.overview}>\n            <div>\n              <Typography\n                display=\"inline\"\n                variant=\"h4\"\n                color=\"textPrimary\"\n              >\n                {subscription.currency}\n                {subscription.price}\n              </Typography>\n              <Typography\n                display=\"inline\"\n                variant=\"subtitle1\"\n              >\n                /mo\n              </Typography>\n            </div>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <img\n                alt=\"Product\"\n                className={classes.productImage}\n                src=\"/static/images/products/product_freelancer.svg\"\n              />\n              <Typography\n                variant=\"overline\"\n                color=\"textSecondary\"\n              >\n                {subscription.name}\n              </Typography>\n            </Box>\n          </Box>\n          <Divider />\n          <Box className={classes.details}>\n            <div>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.proposalsLeft} proposals left`}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.templatesLeft} templates`}\n              </Typography>\n            </div>\n            <div>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.invitesLeft} invites left`}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.adsLeft} ads left`}\n              </Typography>\n            </div>\n            <div>\n              {subscription.hasAnalytics && (\n                <Typography\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  Analytics dashboard\n                </Typography>\n              )}\n              {subscription.hasEmailAlerts && (\n                <Typography\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  Email alerts\n                </Typography>\n              )}\n            </div>\n          </Box>\n        </Paper>\n        <Box\n          mt={2}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n        >\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            Upgrade plan\n          </Button>\n        </Box>\n        <Box mt={2}>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            The refunds don&apos;t work once you have the subscription, but you can\n            always\n            {' '}\n            <Link\n              color=\"secondary\"\n              component={RouterLink}\n              to=\"#\"\n            >\n              Cancel your subscription\n            </Link>\n            .\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nSubscription.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Subscription;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport wait from 'src/utils/wait';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Notifications({ className, ...rest }) {\n  const classes = useStyles();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // Make API request\n    await wait(500);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Card\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <CardHeader title=\"Notifications\" />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                System\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Email alerts\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Push Notifications\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Text message\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label={(\n                    <>\n                      <Typography\n                        variant=\"body1\"\n                        color=\"textPrimary\"\n                      >\n                        Phone calls\n                      </Typography>\n                      <Typography variant=\"caption\">\n                        Short voice phone updating you\n                      </Typography>\n                    </>\n                  )}\n                />\n              </div>\n            </Grid>\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                Chat App\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Email\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Push notifications\"\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          p={2}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n        >\n          <Button\n            color=\"secondary\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Save Settings\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n}\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport wait from 'src/utils/wait';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Security({ className, ...rest }) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        password: '',\n        passwordConfirm: ''\n      }}\n      validationSchema={Yup.object().shape({\n        password: Yup.string()\n          .min(7, 'Must be at least 7 characters')\n          .max(255)\n          .required('Required'),\n        passwordConfirm: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Required')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // Make API request\n          await wait(500);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Password updated', {\n            variant: 'success'\n          });\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <CardHeader title=\"Change Password\" />\n            <Divider />\n            <CardContent>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={4}\n                  sm={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={4}\n                  sm={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\n                    fullWidth\n                    helperText={touched.passwordConfirm && errors.passwordConfirm}\n                    label=\"Password Confirmation\"\n                    name=\"passwordConfirm\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.passwordConfirm}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n              {errors.submit && (\n                <Box mt={3}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n            </CardContent>\n            <Divider />\n            <Box\n              p={2}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n            >\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Change Password\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nSecurity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Security;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tab,\n  Tabs,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport General from './General';\nimport Subscription from './Subscription';\nimport Notifications from './Notifications';\nimport Security from './Security';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction AccountView() {\n  const classes = useStyles();\n  const [currentTab, setCurrentTab] = useState('general');\n  const tabs = [\n    { value: 'general', label: 'General' },\n    { value: 'subscription', label: 'Subscription' },\n    { value: 'notifications', label: 'Notifications' },\n    { value: 'security', label: 'Security' }\n  ];\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            variant=\"scrollable\"\n            textColor=\"secondary\"\n            className={classes.tabs}\n          >\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.value}\n                label={tab.label}\n                value={tab.value}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box mt={3}>\n          {currentTab === 'general' && <General />}\n          {currentTab === 'subscription' && <Subscription />}\n          {currentTab === 'notifications' && <Notifications />}\n          {currentTab === 'security' && <Security />}\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default AccountView;\n"],"sourceRoot":""}