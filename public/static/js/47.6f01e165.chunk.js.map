{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","views/projects/ProjectDetailsView/Header/Application.js","views/projects/ProjectDetailsView/Header/index.js","views/projects/ProjectDetailsView/Overview/Brief.js","views/projects/ProjectDetailsView/Overview/Holder.js","views/projects/ProjectDetailsView/Overview/Members.js","views/projects/ProjectDetailsView/Overview/index.js","utils/bytesToSize.js","components/FilesDropzone.js","views/projects/ProjectDetailsView/Files/FileCard.js","views/projects/ProjectDetailsView/Files/index.js","views/projects/ProjectDetailsView/Activities/Activity.js","views/projects/ProjectDetailsView/Activities/index.js","views/projects/ProjectDetailsView/Subscribers/SubscriberCard.js","views/projects/ProjectDetailsView/Subscribers/index.js","views/projects/ProjectDetailsView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","padding","spacing","helperText","textAlign","marginRight","Application","author","open","onClose","onApply","className","rest","useState","value","setValue","classes","enqueueSnackbar","useSnackbar","Dialog","maxWidth","clsx","Typography","align","title","gutterBottom","variant","color","Box","mt","TextField","autoFocus","FormHelperTextProps","fullWidth","length","label","multiline","onChange","event","persist","target","placeholder","rows","display","alignItems","Avatar","alt","src","avatar","getInitials","ml","bio","p","Button","onClick","defaultProps","badge","margin","badgeIcon","action","marginBottom","marginLeft","actionIcon","Header","project","openApplication","setOpenApplication","handleApplicationClose","Grid","container","justify","item","mx","flexWrap","SvgIcon","fontSize","active","component","moment","endDate","fromNow","price","markdown","fontFamily","typography","Brief","Card","CardContent","xs","md","tags","tag","Chip","key","source","brief","header","paddingBottom","content","paddingTop","listItem","justifyContent","Holder","CardHeader","RouterLink","to","disableTypography","subheader","Link","underline","List","ListItem","disableGutters","divider","deadline","format","currency","updatedAt","Members","members","titleTypographyProps","member","id","ListItemAvatar","ListItemText","primary","primaryTypographyProps","secondary","Divider","CardActions","Overview","lg","xl","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","dropZone","border","palette","outline","backgroundColor","hover","opacity","cursor","dragActive","image","width","info","marginTop","list","maxHeight","actions","FilesDropzone","files","setFiles","handleDrop","useCallback","acceptedFiles","prevFiles","concat","useDropzone","onDrop","getRootProps","getInputProps","isDragActive","options","suppressScrollX","file","ListItemIcon","bytesToSize","size","Tooltip","IconButton","edge","media","height","colors","blueGrey","insertDriveFileIcon","getAppIcon","marignRight","menu","FileCard","moreRef","openMenu","setOpenMenu","mimeType","includes","CardMedia","url","ref","Menu","anchorEl","anchorOrigin","vertical","horizontal","paper","elevation","transformOrigin","MenuItem","Files","sm","card","flexGrow","date","flexShrink","common","white","avatarBlue","blue","avatarGreen","green","avatarOrange","orange","avatarIndigo","indigo","avatarsMap","upload_file","icon","GetAppIcon","join_team","PersonAddIcon","price_change","AttachMoneyIcon","contest_created","DashboardIcon","Activity","activity","type","subject","description","createdAt","group","position","top","left","Activities","activities","todayItems","lastWeekItems","isSame","push","chip","SubscriberCard","subscriber","cover","mb","commonContacts","my","labels","Subscribers","subscribers","background","dark","minHeight","ProjectDetailsView","isMountedRef","currentTab","setCurrentTab","setProject","getProject","axios","get","then","response","data","Page","Container","Tabs","scrollButtons","textColor","tab","Tab"],"mappings":"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","file":"static/js/47.6f01e165.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Dialog,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  }\n}));\n\nfunction Application({\n  author,\n  open,\n  onClose,\n  onApply,\n  className,\n  ...rest\n}) {\n  const [value, setValue] = useState('');\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (event) => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleApply = () => {\n    enqueueSnackbar('Request sent', {\n      variant: 'success'\n    });\n    onApply();\n  };\n\n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <Typography\n          align=\"center\"\n          className={classes.title}\n          gutterBottom\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          The project owner requires an introduction\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          Write down a short note with your application regarding why you\n          think you&apos;d be a good fit for this position.\n        </Typography>\n        <Box mt={3}>\n          <TextField\n            autoFocus\n            FormHelperTextProps={{ classes: { root: classes.helperText } }}\n            fullWidth\n            helperText={`${200 - value.length} characters left`}\n            label=\"Short Note\"\n            multiline\n            onChange={handleChange}\n            placeholder=\"What excites you about this project?\"\n            rows={5}\n            value={value}\n            variant=\"outlined\"\n          />\n          <Box\n            mt={6}\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            <Avatar\n              alt=\"Author\"\n              src={author.avatar}\n            >\n              {getInitials(author.name)}\n            </Avatar>\n            <Box ml={2}>\n              <Typography\n                variant=\"h3\"\n                color=\"textPrimary\"\n              >\n                {author.name}\n              </Typography>\n              <Typography\n                variant=\"subtitle2\"\n                color=\"textPrimary\"\n              >\n                {author.bio}\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n        <Box\n          mt={3}\n          p={3}\n        >\n          <Button\n            onClick={handleApply}\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n          >\n            Apply for a role\n          </Button>\n        </Box>\n      </div>\n    </Dialog>\n  );\n}\n\nApplication.propTypes = {\n  author: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nApplication.defaultProps = {\n  onApply: () => {},\n  onClose: () => {}\n};\n\nexport default Application;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Grid,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Share2 as ShareIcon,\n  Check as CheckIcon,\n  Calendar as CalendarIcon,\n  AlertTriangle as AlertIcon,\n  DollarSign as DollarSignIcon,\n  Send as SendIcon\n} from 'react-feather';\nimport Application from './Application';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  badge: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: theme.spacing(2)\n  },\n  badgeIcon: {\n    marginRight: theme.spacing(1)\n  },\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ project, className, ...rest }) {\n  const classes = useStyles();\n  const [openApplication, setOpenApplication] = useState(false);\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          {project.title}\n        </Typography>\n        <Box\n          mx={-2}\n          display=\"flex\"\n          color=\"text.secondary\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <div className={classes.badge}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.badgeIcon}\n            >\n              {project.active ? <CheckIcon /> : <AlertIcon /> }\n            </SvgIcon>\n            <Typography\n              variant=\"body2\"\n              color=\"inherit\"\n              component=\"span\"\n            >\n              {project.active ? 'Active' : 'Inactive'}\n            </Typography>\n          </div>\n          <div className={classes.badge}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.badgeIcon}\n            >\n              <CalendarIcon />\n            </SvgIcon>\n            <Typography\n              variant=\"body2\"\n              color=\"inherit\"\n              component=\"span\"\n            >\n              {`Ending ${moment(project.endDate).fromNow()}`}\n            </Typography>\n          </div>\n          <div className={classes.badge}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.badgeIcon}\n            >\n              <DollarSignIcon />\n            </SvgIcon>\n            <Typography\n              variant=\"body2\"\n              color=\"inherit\"\n              component=\"span\"\n            >\n              {`Budget: ${project.price}`}\n            </Typography>\n          </div>\n        </Box>\n      </Grid>\n      <Grid item>\n        <Button className={classes.action}>\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <ShareIcon />\n          </SvgIcon>\n          Share\n        </Button>\n        <Button\n          className={classes.action}\n          onClick={handleApplicationOpen}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <SendIcon />\n          </SvgIcon>\n          Apply for a role\n        </Button>\n        <Application\n          author={project.author}\n          onApply={handleApplicationClose}\n          onClose={handleApplicationClose}\n          open={openApplication}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Chip,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Markdown from 'react-markdown/with-html';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  markdown: {\n    fontFamily: theme.typography.fontFamily,\n    '& p': {\n      marginBottom: theme.spacing(2)\n    }\n  }\n}));\n\nfunction Brief({ project, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            xs={12}\n            md={6}\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textSecondary\"\n            >\n              Project Name\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textPrimary\"\n            >\n              {project.title}\n            </Typography>\n            <Box mt={3}>\n              <Typography\n                variant=\"subtitle2\"\n                color=\"textSecondary\"\n              >\n                Technology Stack\n              </Typography>\n              <Box mt={1}>\n                {project.tags.map((tag) => (\n                  <Chip\n                    key={tag}\n                    variant=\"outlined\"\n                    label={tag}\n                  />\n                ))}\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n        <Box mt={3}>\n          <Typography\n            variant=\"subtitle2\"\n            color=\"textSecondary\"\n          >\n            Description\n          </Typography>\n          <Markdown\n            source={project.brief}\n            className={classes.markdown}\n          />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nBrief.propTypes = {\n  project: PropTypes.object.isRequired,\n  className: PropTypes.string\n};\n\nexport default Brief;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  Link,\n  List,\n  ListItem,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  header: {\n    paddingBottom: 0\n  },\n  content: {\n    paddingTop: 0\n  },\n  listItem: {\n    padding: theme.spacing(2, 0),\n    justifyContent: 'space-between'\n  }\n}));\n\nfunction Holder({ project, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        avatar={(\n          <Avatar\n            alt=\"Author\"\n            className={classes.avatar}\n            component={RouterLink}\n            src={project.author.avatar}\n            to=\"#\"\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n        )}\n        className={classes.header}\n        disableTypography\n        subheader={(\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            underline=\"none\"\n            variant=\"h6\"\n          >\n            {project.author.name}\n          </Link>\n        )}\n        title={(\n          <Typography\n            display=\"block\"\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Contest holder\n          </Typography>\n        )}\n      />\n      <CardContent className={classes.content}>\n        <List>\n          <ListItem\n            className={classes.listItem}\n            disableGutters\n            divider\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textPrimary\"\n            >\n              Deadline\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n            >\n              {moment(project.deadline).format('DD MMM YYYY')}\n            </Typography>\n          </ListItem>\n          <ListItem\n            className={classes.listItem}\n            disableGutters\n            divider\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textPrimary\"\n            >\n              Per Project\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n            >\n              {project.price}\n              {' '}\n              {project.currency}\n            </Typography>\n          </ListItem>\n          <ListItem\n            className={classes.listItem}\n            disableGutters\n            divider\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textPrimary\"\n            >\n              Last Update\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n            >\n              {moment(project.updatedAt).format('DD MMM YYYY')}\n            </Typography>\n          </ListItem>\n        </List>\n      </CardContent>\n    </Card>\n  );\n}\n\nHolder.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default Holder;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  header: {\n    paddingBottom: 0\n  },\n  content: {\n    paddingTop: 0\n  }\n}));\n\nfunction Members({ members, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        className={classes.header}\n        title=\"Project members\"\n        titleTypographyProps={{\n          variant: 'overline'\n        }}\n      />\n      <CardContent className={classes.content}>\n        <List>\n          {members.map((member) => (\n            <ListItem\n              disableGutters\n              key={member.id}\n            >\n              <ListItemAvatar>\n                <Avatar\n                  alt=\"Author\"\n                  className={classes.avatar}\n                  src={member.avatar}\n                >\n                  {getInitials(member.name)}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={member.name}\n                primaryTypographyProps={{ variant: 'h6' }}\n                secondary={member.bio}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button fullWidth>\n          Manage users\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nMembers.propTypes = {\n  className: PropTypes.string,\n  members: PropTypes.array.isRequired\n};\n\nexport default Members;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Brief from './Brief';\nimport Holder from './Holder';\nimport Members from './Members';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Overview({ project, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      <Grid\n        item\n        lg={8}\n        xl={9}\n        xs={12}\n      >\n        <Brief project={project} />\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        xl={3}\n        xs={12}\n      >\n        <Members members={project.members} />\n        <Box mt={3}>\n          <Holder project={project} />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nOverview.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default Overview;\n","/* eslint-disable no-restricted-properties */\nexport default (bytes, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n};\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDropzone } from 'react-dropzone';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport bytesToSize from 'src/utils/bytesToSize';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  dropZone: {\n    border: `1px dashed ${theme.palette.divider}`,\n    padding: theme.spacing(6),\n    outline: 'none',\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n      opacity: 0.5,\n      cursor: 'pointer'\n    }\n  },\n  dragActive: {\n    backgroundColor: theme.palette.action.active,\n    opacity: 0.5\n  },\n  image: {\n    width: 130\n  },\n  info: {\n    marginTop: theme.spacing(1)\n  },\n  list: {\n    maxHeight: 320\n  },\n  actions: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'flex-end',\n    '& > * + *': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nfunction FilesDropzone({ className, ...rest }) {\n  const classes = useStyles();\n  const [files, setFiles] = useState([]);\n\n  const handleDrop = useCallback((acceptedFiles) => {\n    setFiles((prevFiles) => [...prevFiles].concat(acceptedFiles));\n  }, []);\n\n  const handleRemoveAll = () => {\n    setFiles([]);\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleDrop\n  });\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <div\n        className={clsx({\n          [classes.dropZone]: true,\n          [classes.dragActive]: isDragActive\n        })}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <div>\n          <img\n            alt=\"Select file\"\n            className={classes.image}\n            src=\"/static/images/undraw_add_file2_gvbb.svg\"\n          />\n        </div>\n        <div>\n          <Typography\n            gutterBottom\n            variant=\"h3\"\n          >\n            Select files\n          </Typography>\n          <Box mt={2}>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body1\"\n            >\n              Drop files here or click\n              {' '}\n              <Link underline=\"always\">browse</Link>\n              {' '}\n              thorough your machine\n            </Typography>\n          </Box>\n        </div>\n      </div>\n      {files.length > 0 && (\n        <>\n          <PerfectScrollbar options={{ suppressScrollX: true }}>\n            <List className={classes.list}>\n              {files.map((file, i) => (\n                <ListItem\n                  divider={i < files.length - 1}\n                  key={i}\n                >\n                  <ListItemIcon>\n                    <FileCopyIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={file.name}\n                    primaryTypographyProps={{ variant: 'h5' }}\n                    secondary={bytesToSize(file.size)}\n                  />\n                  <Tooltip title=\"More options\">\n                    <IconButton edge=\"end\">\n                      <MoreIcon />\n                    </IconButton>\n                  </Tooltip>\n                </ListItem>\n              ))}\n            </List>\n          </PerfectScrollbar>\n          <div className={classes.actions}>\n            <Button\n              onClick={handleRemoveAll}\n              size=\"small\"\n            >\n              Remove all\n            </Button>\n            <Button\n              color=\"secondary\"\n              size=\"small\"\n              variant=\"contained\"\n            >\n              Upload files\n            </Button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nFilesDropzone.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FilesDropzone;\n","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Divider,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFileOutlined';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport bytesToSize from 'src/utils/bytesToSize';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 240\n  },\n  placeholder: {\n    height: 240,\n    backgroundColor: colors.blueGrey[50],\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  insertDriveFileIcon: {\n    height: theme.spacing(6),\n    width: theme.spacing(6),\n    fontSize: theme.spacing(6)\n  },\n  content: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  getAppIcon: {\n    marignRight: theme.spacing(1)\n  },\n  menu: {\n    width: 250,\n    maxWidth: '100%'\n  }\n}));\n\nfunction FileCard({ file, className, ...rest }) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {file.mimeType.includes('image/') ? (\n        <CardMedia\n          className={classes.media}\n          image={file.url}\n        />\n      ) : (\n        <div className={classes.placeholder}>\n          <InsertDriveFileIcon className={classes.insertDriveFileIcon} />\n        </div>\n      )}\n      <CardContent className={classes.content}>\n        <div>\n          <Typography\n            variant=\"h5\"\n            color=\"textPrimary\"\n          >\n            {file.name}\n          </Typography>\n          <Typography\n            variant=\"subtitle2\"\n            color=\"textPrimary\"\n          >\n            {bytesToSize(file.size)}\n          </Typography>\n        </div>\n        <div>\n          <Tooltip title=\"More options\">\n            <IconButton\n              edge=\"end\"\n              onClick={handleMenuOpen}\n              ref={moreRef}\n              size=\"small\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button fullWidth>\n          <GetAppIcon className={classes.getAppIcon} />\n          Download\n        </Button>\n      </CardActions>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        classes={{ paper: classes.menu }}\n        onClose={handleMenuClose}\n        elevation={1}\n        open={openMenu}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem divider>\n          <ListItemIcon>\n            <EditIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Rename\" />\n        </MenuItem>\n        <MenuItem divider>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </Card>\n  );\n}\n\nFileCard.propTypes = {\n  className: PropTypes.string,\n  file: PropTypes.object.isRequired\n};\n\nexport default FileCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport FilesDropzone from 'src/components/FilesDropzone';\nimport FileCard from './FileCard';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Files({ files, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardContent>\n          <FilesDropzone />\n        </CardContent>\n      </Card>\n      <Grid\n        container\n        spacing={3}\n      >\n        {files.map((file) => (\n          <Grid\n            item\n            key={file.id}\n            lg={4}\n            md={4}\n            sm={6}\n            xs={12}\n          >\n            <FileCard file={file} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nFiles.propTypes = {\n  className: PropTypes.string,\n  files: PropTypes.array.isRequired\n};\n\nexport default Files;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Card,\n  Typography,\n  Link,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PersonAddIcon from '@material-ui/icons/PersonAddOutlined';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport DashboardIcon from '@material-ui/icons/DashboardOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  card: {\n    marginLeft: theme.spacing(2),\n    flexGrow: 1,\n    display: 'flex',\n    padding: theme.spacing(2),\n    alignItems: 'center'\n  },\n  date: {\n    marginLeft: 'auto',\n    flexShrink: 0\n  },\n  avatar: {\n    color: colors.common.white\n  },\n  avatarBlue: {\n    backgroundColor: colors.blue[500]\n  },\n  avatarGreen: {\n    backgroundColor: colors.green[500]\n  },\n  avatarOrange: {\n    backgroundColor: colors.orange[500]\n  },\n  avatarIndigo: {\n    backgroundColor: colors.indigo[500]\n  }\n}));\n\nconst avatarsMap = {\n  upload_file: {\n    icon: GetAppIcon,\n    className: 'avatarBlue'\n  },\n  join_team: {\n    icon: PersonAddIcon,\n    className: 'avatarOrange'\n  },\n  price_change: {\n    icon: AttachMoneyIcon,\n    className: 'avatarGreen'\n  },\n  contest_created: {\n    icon: DashboardIcon,\n    className: 'avatarIndigo'\n  }\n};\n\nfunction Activity({ activity, className, ...rest }) {\n  const classes = useStyles();\n  const avatar = avatarsMap[activity.type];\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar className={clsx(classes.avatar, classes[avatar.className])}>\n        <avatar.icon />\n      </Avatar>\n      <Card className={classes.card}>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n        >\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            variant=\"h6\"\n          >\n            {activity.subject}\n          </Link>\n          {' '}\n          {activity.description}\n        </Typography>\n        <Typography\n          className={classes.date}\n          variant=\"caption\"\n        >\n          {moment(activity.createdAt).fromNow()}\n        </Typography>\n      </Card>\n    </div>\n  );\n}\n\nActivity.propTypes = {\n  activity: PropTypes.object.isRequired,\n  className: PropTypes.string\n};\n\nexport default Activity;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport clsx from 'clsx';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport Activity from './Activity';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  title: {\n    marginBottom: theme.spacing(3)\n  },\n  group: {\n    '& + &': {\n      marginTop: theme.spacing(4)\n    }\n  },\n  activity: {\n    position: 'relative',\n    '& + &': {\n      marginTop: theme.spacing(3),\n      '&:before': {\n        position: 'absolute',\n        content: '\" \"',\n        height: 20,\n        width: 1,\n        top: -20,\n        left: 20,\n        backgroundColor: theme.palette.divider\n      }\n    }\n  }\n}));\n\nfunction Activities({ activities, className, ...rest }) {\n  const classes = useStyles();\n  const todayItems = [];\n  const lastWeekItems = [];\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const activity of activities) {\n    if (moment(activity.createdAt).isSame(moment(), 'day')) {\n      todayItems.push(activity);\n    } else {\n      lastWeekItems.push(activity);\n    }\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography\n        className={classes.title}\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Today\n      </Typography>\n      <div className={classes.group}>\n        {todayItems.map((activity) => (\n          <Activity\n            activity={activity}\n            className={classes.activity}\n            key={activity.id}\n          />\n        ))}\n      </div>\n      <div className={classes.group}>\n        <Typography\n          className={classes.title}\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Last week\n        </Typography>\n        {lastWeekItems.map((activity) => (\n          <Activity\n            activity={activity}\n            className={classes.activity}\n            key={activity.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nActivities.propTypes = {\n  activities: PropTypes.array.isRequired,\n  className: PropTypes.string\n};\n\nexport default Activities;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Chip,\n  Divider,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 125\n  },\n  content: {\n    paddingTop: 0\n  },\n  avatar: {\n    height: 64,\n    width: 64\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  }\n}));\n\nfunction SubscriberCard({ subscriber, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardMedia\n        className={classes.media}\n        image={subscriber.cover}\n      />\n      <CardContent className={classes.content}>\n        <Box\n          mt={-4}\n          mb={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Avatar\n            alt=\"Subscriber\"\n            className={classes.avatar}\n            component={RouterLink}\n            src={subscriber.avatar}\n            to=\"#\"\n          />\n        </Box>\n        <Link\n          align=\"center\"\n          color=\"textPrimary\"\n          component={RouterLink}\n          display=\"block\"\n          to=\"#\"\n          underline=\"none\"\n          variant=\"h6\"\n        >\n          {subscriber.name}\n        </Link>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {subscriber.commonContacts}\n          {' '}\n          contacts in common\n        </Typography>\n        <Box my={2}>\n          <Divider />\n        </Box>\n        {subscriber.labels.map((label) => (\n          <Chip\n            key={label}\n            className={classes.chip}\n            label={label}\n            variant=\"outlined\"\n          />\n        ))}\n      </CardContent>\n    </Card>\n  );\n}\n\nSubscriberCard.propTypes = {\n  className: PropTypes.string,\n  subscriber: PropTypes.object.isRequired\n};\n\nexport default SubscriberCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport SubscriberCard from './SubscriberCard';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Subscribers({ subscribers, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      {subscribers.map((subscriber) => (\n        <Grid\n          item\n          key={subscriber.id}\n          lg={4}\n          xs={12}\n        >\n          <SubscriberCard subscriber={subscriber} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nSubscribers.propTypes = {\n  className: PropTypes.string,\n  subscribers: PropTypes.array.isRequired\n};\n\nexport default Subscribers;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tabs,\n  Tab,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Overview from './Overview';\nimport Files from './Files';\nimport Activities from './Activities';\nimport Subscribers from './Subscribers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction ProjectDetailsView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [currentTab, setCurrentTab] = useState('overview');\n  const [project, setProject] = useState(null);\n  const tabs = [\n    { value: 'overview', label: 'Overview' },\n    { value: 'files', label: 'Files' },\n    { value: 'activity', label: 'Activity' },\n    { value: 'subscribers', label: 'Subscribers' }\n  ];\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  const getProject = useCallback(() => {\n    axios\n      .get('/api/projects/projects/1')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setProject(response.data.project);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProject();\n  }, [getProject]);\n\n  if (!project) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Project Details\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header project={project} />\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            textColor=\"secondary\"\n            value={currentTab}\n            variant=\"scrollable\"\n          >\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.value}\n                label={tab.label}\n                value={tab.value}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box mt={3}>\n          {currentTab === 'overview' && <Overview project={project} />}\n          {currentTab === 'files' && <Files files={project.files} />}\n          {currentTab === 'activity' && <Activities activities={project.activities} />}\n          {currentTab === 'subscribers' && <Subscribers subscribers={project.subscribers} />}\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProjectDetailsView;\n"],"sourceRoot":""}