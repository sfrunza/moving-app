{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","managementPages/UserView/Header.js","managementPages/UserView/General/ProfileDetails.js","managementPages/UserView/General/GeneralSettings.js","managementPages/UserView/General/index.js","managementPages/UserView/Security.js","managementPages/UserView/index.js"],"names":["createSvgIcon","React","d","withStyles","theme","root","display","marginLeft","spacing","marginRight","backgroundColor","palette","grey","color","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","name","props","classes","other","_objectWithoutProperties","ButtonBase","_extends","component","className","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect","Header","user","variant","ChevronRight","fontSize","style","marginTop","Link","RouterLink","to","first_name","last_name","useStyles","makeStyles","avatar","ProfileDetails","Card","CardContent","Box","flexDirection","pt","Avatar","src","gutterBottom","email","label","fontWeight","marginBottom","text","secondary","top","position","inputWidth","schema","presence","allowEmpty","message","phone","format","pattern","GeneralSettings","handleUpdate","isUpdating","currentUser","add_phone","enqueueSnackbar","useSnackbar","useState","isValid","values","touched","errors","formState","setFormState","useEffect","validate","handleChange","persist","target","value","phoneFormatter","phoneFilter","type","checked","hasError","field","method","onSubmit","preventDefault","id","anchorOrigin","horizontal","vertical","CardHeader","title","Divider","Grid","container","item","xs","md","htmlFor","User","TextField","error","size","onChange","helperText","Mail","Phone","p","justifyContent","Button","disabled","object1","object2","keys1","Object","keys","keys2","shallowEqual","disableElevation","General","dispatch","useDispatch","useSelector","state","auth","lg","xl","updatedUser","updateUser","Security","handlePasswordChange","rest","initialValues","password","password_confirmation","current_password","validationSchema","Yup","shape","min","max","required","oneOf","a","resetForm","setErrors","setStatus","setSubmitting","success","submit","handleBlur","handleSubmit","isSubmitting","sm","Lock","Boolean","onBlur","mt","FormHelperText","background","level2","minHeight","UserView","currentTab","setCurrentTab","Page","sx","paddingY","Container","maxWidth","Tabs","scrollButtons","textColor","indicatorColor","tab","i","Tab","wrapped","fetch","body","JSON","stringify","headers"],"mappings":"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","file":"static/js/12.e819d02c.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Typography, Breadcrumbs, Link } from \"@material-ui/core\";\nimport ChevronRightIcon from \"src/icons/ChevronRight\";\n\nfunction Header({ user }) {\n  return (\n    <div>\n      <Typography color=\"textPrimary\" variant=\"h5\">\n        Settings\n      </Typography>\n      <Breadcrumbs\n        aria-label=\"breadcrumb\"\n        separator={<ChevronRightIcon fontSize=\"small\" />}\n        style={{ marginTop: 8 }}\n      >\n        <Link\n          color=\"textPrimary\"\n          component={RouterLink}\n          to=\"/dashboard\"\n          variant=\"subtitle2\"\n        >\n          Dashboard\n        </Link>\n        <Typography color=\"textSecondary\" variant=\"subtitle2\">\n          {user.first_name + \" \" + user.last_name}\n        </Typography>\n      </Breadcrumbs>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    boxShadow: theme.shadows[1],\n  },\n  name: {\n    marginTop: theme.spacing(1),\n  },\n  avatar: {\n    height: 70,\n    width: 70,\n  },\n  // action: {\n  //   display: \"flex\",\n  //   justifyContent: \"center\",\n  // },\n  // input: {\n  //   display: \"none\",\n  // },\n}));\n\nfunction ProfileDetails({ user }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\" pt={2}>\n          <Avatar className={classes.avatar} src={\"\"} />\n          <Typography\n            className={classes.name}\n            gutterBottom\n            variant=\"h6\"\n            color=\"textPrimary\"\n          >\n            {user.first_name + \" \" + user.last_name}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body1\">\n            {user.email}\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default ProfileDetails;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  Button,\n  Box,\n  CardHeader,\n  Divider,\n  TextField,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\nimport validate from \"validate.js\";\nimport User from \"src/icons/User\";\nimport Mail from \"src/icons/Mail\";\nimport Phone from \"src/icons/Phone\";\nimport { phoneFilter, phoneFormatter } from \"src/components/PhoneFormatter\";\n\nconst useStyles = makeStyles((theme) => ({\n  label: {\n    fontWeight: 500,\n    marginBottom: theme.spacing(1),\n    display: \"inline-block\",\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n    top: 6,\n    width: 20,\n    position: \"relative\",\n  },\n  inputWidth: {\n    width: \"calc(100% - 33px)\",\n    marginLeft: 33,\n  },\n}));\n\nconst phoneRegex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: \"is required\" },\n    email: {\n      message: \"is not valid\",\n    },\n  },\n  phone: {\n    presence: { allowEmpty: false, message: \"is required\" },\n    format: {\n      pattern: phoneRegex,\n      message: \"is not valid\",\n    },\n  },\n  first_name: {\n    presence: { allowEmpty: false, message: \"is required\" },\n  },\n  last_name: {\n    presence: { allowEmpty: false, message: \"is required\" },\n  },\n};\n\nconst GeneralSettings = ({ user, handleUpdate, isUpdating }) => {\n  const currentUser = {\n    first_name: user.first_name,\n    last_name: user.last_name,\n    email: user.email,\n    phone: user.phone,\n    add_phone: user.add_phone,\n  };\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: currentUser,\n    touched: {},\n    errors: {},\n  });\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState((formState) => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {},\n    }));\n  }, [formState.values, user]);\n\n  const handleChange = (event) => {\n    event.persist();\n    if (event.target.name === \"phone\") {\n      setFormState((formState) => ({\n        ...formState,\n        values: {\n          ...formState.values,\n          phone:\n            event.target.value === \"1\"\n              ? \"\"\n              : phoneFormatter(phoneFilter(event.target.value)),\n        },\n        touched: {\n          ...formState.touched,\n          phone: true,\n        },\n      }));\n    } else if (event.target.name === \"add_phone\") {\n      setFormState((formState) => ({\n        ...formState,\n        values: {\n          ...formState.values,\n          add_phone:\n            event.target.value === \"1\"\n              ? \"\"\n              : phoneFormatter(phoneFilter(event.target.value)),\n        },\n        touched: {\n          ...formState.touched,\n          add_phone: true,\n        },\n      }));\n    } else {\n      setFormState((formState) => ({\n        ...formState,\n        values: {\n          ...formState.values,\n          [event.target.name]:\n            event.target.type === \"checkbox\"\n              ? event.target.checked\n              : event.target.value,\n        },\n        touched: {\n          ...formState.touched,\n          [event.target.name]: true,\n        },\n      }));\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (formState.isValid) {\n      handleUpdate(user.id, formState.values);\n      enqueueSnackbar(\"Customer updated\", {\n        anchorOrigin: {\n          horizontal: \"right\",\n          vertical: \"top\",\n        },\n        variant: \"success\",\n      });\n    }\n    setFormState((formState) => ({\n      ...formState,\n      touched: {\n        ...formState.touched,\n        ...formState.errors,\n      },\n    }));\n  };\n\n  const shallowEqual = (object1, object2) => {\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (let key of keys1) {\n      if (object1[key] !== object2[key]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const hasError = (field) =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n  return (\n    <form name=\"password-reset-form\" method=\"post\" onSubmit={handleSubmit}>\n      <Card>\n        <CardHeader title=\"Profile\" />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <label htmlFor=\"first_name\" className={classes.label}>\n                <User className={classes.icon} />\n                First name\n              </label>\n              <TextField\n                error={hasError(\"first_name\")}\n                className={classes.inputWidth}\n                name=\"first_name\"\n                id=\"first_name\"\n                size=\"small\"\n                value={formState.values.first_name || \"\"}\n                onChange={handleChange}\n                variant=\"outlined\"\n                helperText={\n                  hasError(\"first_name\") ? formState.errors.first_name : null\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <label htmlFor=\"last_name\" className={classes.label}>\n                <User className={classes.icon} />\n                Last name\n              </label>\n              <TextField\n                error={hasError(\"last_name\")}\n                className={classes.inputWidth}\n                name=\"last_name\"\n                id=\"last_name\"\n                size=\"small\"\n                onChange={handleChange}\n                value={formState.values.last_name}\n                variant=\"outlined\"\n                helperText={\n                  hasError(\"last_name\") ? formState.errors.last_name : null\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <label htmlFor=\"email\" className={classes.label}>\n                <Mail className={classes.icon} />\n                Email address\n              </label>\n              <TextField\n                error={hasError(\"email\")}\n                className={classes.inputWidth}\n                name=\"email\"\n                id=\"email\"\n                size=\"small\"\n                onChange={handleChange}\n                value={formState.values.email || \"\"}\n                variant=\"outlined\"\n                helperText={\n                  hasError(\"email\") ? formState.errors.email[0] : null\n                }\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <label htmlFor=\"phone\" className={classes.label}>\n                <Phone className={classes.icon} />\n                Phone\n              </label>\n              <TextField\n                error={hasError(\"phone\")}\n                className={classes.inputWidth}\n                name=\"phone\"\n                id=\"phone\"\n                size=\"small\"\n                onChange={handleChange}\n                value={formState.values.phone || \"\"}\n                variant=\"outlined\"\n                helperText={\n                  hasError(\"phone\") ? formState.errors.phone[0] : null\n                }\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n          <Button\n            color=\"primary\"\n            disabled={shallowEqual(formState.values, currentUser) || isUpdating}\n            type=\"submit\"\n            variant=\"contained\"\n            disableElevation\n          >\n            {isUpdating ? \"Loading...\" : \"Save Changes\"}\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nexport default GeneralSettings;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport ProfileDetails from \"./ProfileDetails\";\nimport GeneralSettings from \"./GeneralSettings\";\nimport { useSelector, useDispatch } from \"src/store\";\nimport { updateUser } from \"src/slices/auth\";\n\nfunction General() {\n  const dispatch = useDispatch();\n  const { user, isUpdating } = useSelector((state) => state.auth);\n\n  const handleUpdate = (id, updatedUser) => {\n    dispatch(updateUser(id, updatedUser));\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <ProfileDetails user={user} />\n      </Grid>\n      <Grid item lg={8} md={6} xl={9} xs={12}>\n        <GeneralSettings\n          user={user}\n          handleUpdate={handleUpdate}\n          isUpdating={isUpdating}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default General;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  TextField,\n  makeStyles,\n} from \"@material-ui/core\";\n// import wait from 'src/utils/wait';\nimport Lock from \"src/icons/Lock\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  label: {\n    fontWeight: 600,\n    marginBottom: theme.spacing(1),\n    display: \"flex\",\n    color: theme.palette.text.secondary,\n    alignItems: \"baseline\",\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n    top: 6,\n    width: 20,\n    position: \"relative\",\n  },\n  inputWidth: {\n    width: \"calc(100% - 33px)\",\n    marginLeft: 33,\n  },\n}));\n\nfunction Security({ className, user, handlePasswordChange, ...rest }) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        password: \"\",\n        password_confirmation: \"\",\n        current_password: \"\",\n      }}\n      validationSchema={Yup.object().shape({\n        current_password: Yup.string()\n          .min(6, \"Must be at least 6 characters\")\n          .max(255)\n          .required(\"Current password is required\"),\n        password: Yup.string()\n          .min(6, \"Must be at least 6 characters\")\n          .max(255)\n          .required(\"New password is required\"),\n        password_confirmation: Yup.string()\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n          .required(\"Required\"),\n      })}\n      onSubmit={async (\n        values,\n        { resetForm, setErrors, setStatus, setSubmitting }\n      ) => {\n        try {\n          // Make API request\n          await handlePasswordChange(values, user.id);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar(\"Password updated\", {\n            variant: \"success\",\n          });\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values,\n      }) => {\n        return (\n          <form onSubmit={handleSubmit}>\n            <Card className={clsx(classes.root, className)} {...rest}>\n              <CardHeader title=\"Change Password\" />\n              <Divider />\n              <CardContent>\n                <Grid container spacing={3}>\n                  <Grid item md={4} sm={6} xs={12}>\n                    <label htmlFor=\"current_password\" className={classes.label}>\n                      <Lock className={classes.icon} />\n                      Current password\n                    </label>\n                    <TextField\n                      error={Boolean(\n                        touched.current_password && errors.current_password\n                      )}\n                      className={classes.inputWidth}\n                      helperText={\n                        touched.current_password && errors.current_password\n                      }\n                      name=\"current_password\"\n                      id=\"current_password\"\n                      size=\"small\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      type=\"password\"\n                      value={values.current_password}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item md={4} sm={6} xs={12}>\n                    <label htmlFor=\"password\" className={classes.label}>\n                      <Lock className={classes.icon} />\n                      New password\n                    </label>\n                    <TextField\n                      error={Boolean(touched.password && errors.password)}\n                      className={classes.inputWidth}\n                      helperText={touched.password && errors.password}\n                      name=\"password\"\n                      id=\"password\"\n                      size=\"small\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      type=\"password\"\n                      value={values.password}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item md={4} sm={6} xs={12}>\n                    <label\n                      htmlFor=\"password_confirmation\"\n                      className={classes.label}\n                    >\n                      <Lock className={classes.icon} />\n                      Password confirmation\n                    </label>\n                    <TextField\n                      error={Boolean(\n                        touched.password_confirmation &&\n                          errors.password_confirmation\n                      )}\n                      className={classes.inputWidth}\n                      helperText={\n                        touched.password_confirmation &&\n                        errors.password_confirmation\n                      }\n                      name=\"password_confirmation\"\n                      id=\"password_confirmation\"\n                      size=\"small\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      type=\"password\"\n                      value={values.password_confirmation}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                </Grid>\n                {errors.submit && (\n                  <Box mt={3}>\n                    <FormHelperText error>{errors.submit}</FormHelperText>\n                  </Box>\n                )}\n              </CardContent>\n              <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n                <Button\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  type=\"submit\"\n                  variant=\"contained\"\n                  disableElevation\n                >\n                  Change Password\n                </Button>\n              </Box>\n            </Card>\n          </form>\n        );\n      }}\n    </Formik>\n  );\n}\n\nSecurity.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Security;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Divider,\n  Tab,\n  Tabs,\n  makeStyles,\n} from \"@material-ui/core\";\nimport Page from \"src/components/Page\";\nimport Header from \"./Header\";\nimport General from \"./General\";\nimport Security from \"./Security\";\nimport { useSelector } from \"src/store\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.level2,\n    minHeight: \"100%\",\n  },\n}));\n\nfunction UserView() {\n  const classes = useStyles();\n  const [currentTab, setCurrentTab] = useState(\"general\");\n  const { user } = useSelector((state) => state.auth);\n  const tabs = [\n    { value: \"general\", label: \"General\" },\n    { value: \"security\", label: \"Security\" },\n  ];\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  const handlePasswordChange = (user, id) => {\n    fetch(`/api/v1/users/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({ user: user }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n  return (\n    <Page className={classes.root} title=\"Settings\">\n      <Box\n        sx={{\n          backgroundColor: \"background.default\",\n          minHeight: \"100%\",\n          paddingY: 8,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Header user={user} />\n          <Box mt={3}>\n            <Tabs\n              onChange={handleTabsChange}\n              scrollButtons=\"auto\"\n              value={currentTab}\n              variant=\"scrollable\"\n              textColor=\"primary\"\n              indicatorColor=\"primary\"\n            >\n              {tabs.map((tab, i) => (\n                <Tab key={i} label={tab.label} value={tab.value} wrapped />\n              ))}\n            </Tabs>\n          </Box>\n          <Divider />\n          <Box mt={3}>\n            {currentTab === \"general\" && <General />}\n            {currentTab === \"security\" && (\n              <Security\n                user={user}\n                handlePasswordChange={handlePasswordChange}\n              />\n            )}\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n}\n\nexport default UserView;\n"],"sourceRoot":""}