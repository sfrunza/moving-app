{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","utils/bytesToSize.js","components/FilesDropzone.js","views/projects/ProjectDetailsView/Header/Application.js","views/projects/ProjectDetailsView/Header/index.js","views/projects/ProjectDetailsView/Overview/Brief.js","views/projects/ProjectDetailsView/Overview/Holder.js","views/projects/ProjectDetailsView/Overview/Members.js","views/projects/ProjectDetailsView/Overview/index.js","views/projects/ProjectDetailsView/Files/FileCard.js","views/projects/ProjectDetailsView/Files/index.js","views/projects/ProjectDetailsView/Activities/Activity.js","views/projects/ProjectDetailsView/Activities/index.js","views/projects/ProjectDetailsView/Subscribers/SubscriberCard.js","views/projects/ProjectDetailsView/Subscribers/index.js","views/projects/ProjectDetailsView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","name","replace","split","slice","map","v","toUpperCase","join","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","useStyles","makeStyles","theme","root","dropZone","border","palette","divider","padding","spacing","outline","display","justifyContent","flexWrap","alignItems","backgroundColor","action","hover","opacity","cursor","dragActive","active","image","width","info","marginTop","list","maxHeight","actions","marginLeft","FilesDropzone","className","setFieldValue","handleSubmit","rest","classes","useState","files","setFiles","handleDrop","useCallback","acceptedFiles","handleRemoveAll","useDropzone","onDrop","getRootProps","getInputProps","isDragActive","clsx","button","variant","color","length","options","suppressScrollX","file","key","primary","primaryTypographyProps","secondary","bytesToSize","size","onClick","helperText","textAlign","marginRight","Application","author","open","onClose","onApply","value","setValue","enqueueSnackbar","useSnackbar","Dialog","maxWidth","Typography","align","title","gutterBottom","Box","mt","TextField","autoFocus","FormHelperTextProps","fullWidth","label","multiline","onChange","event","persist","target","placeholder","rows","Avatar","alt","src","avatar","getInitials","ml","bio","p","Button","defaultProps","badge","margin","badgeIcon","marginBottom","actionIcon","Header","project","openApplication","setOpenApplication","handleApplicationClose","Grid","container","justify","item","mx","SvgIcon","fontSize","component","moment","endDate","fromNow","price","markdown","fontFamily","typography","Brief","Card","CardContent","xs","md","tags","tag","Chip","source","brief","header","paddingBottom","content","paddingTop","listItem","Holder","CardHeader","RouterLink","to","disableTypography","subheader","Link","underline","List","ListItem","disableGutters","deadline","format","currency","updatedAt","Members","members","titleTypographyProps","member","id","ListItemAvatar","ListItemText","Divider","CardActions","Overview","lg","xl","media","height","colors","blueGrey","insertDriveFileIcon","getAppIcon","marignRight","menu","FileCard","moreRef","openMenu","setOpenMenu","mimeType","includes","CardMedia","url","Tooltip","IconButton","edge","ref","Menu","anchorEl","anchorOrigin","vertical","horizontal","paper","elevation","transformOrigin","MenuItem","ListItemIcon","Files","sm","card","flexGrow","date","flexShrink","common","white","avatarBlue","blue","avatarGreen","green","avatarOrange","orange","avatarIndigo","indigo","avatarsMap","upload_file","icon","GetAppIcon","join_team","PersonAddIcon","price_change","AttachMoneyIcon","contest_created","DashboardIcon","Activity","activity","type","subject","description","createdAt","group","position","top","left","Activities","activities","todayItems","lastWeekItems","isSame","push","chip","SubscriberCard","subscriber","cover","mb","commonContacts","my","labels","Subscribers","subscribers","background","dark","minHeight","ProjectDetailsView","isMountedRef","currentTab","setCurrentTab","setProject","getProject","axios","get","then","response","data","Page","Container","Tabs","scrollButtons","textColor","tab","Tab"],"mappings":"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","file":"static/js/39.e727fddf.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","/* eslint-disable no-restricted-properties */\nexport default (bytes, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n};\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDropzone } from 'react-dropzone';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport bytesToSize from 'src/utils/bytesToSize';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  dropZone: {\n    border: `1px dashed ${theme.palette.divider}`,\n    padding: theme.spacing(6),\n    outline: 'none',\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n      opacity: 0.5,\n      cursor: 'pointer'\n    }\n  },\n  dragActive: {\n    backgroundColor: theme.palette.action.active,\n    opacity: 0.5\n  },\n  image: {\n    width: 130\n  },\n  info: {\n    marginTop: theme.spacing(1)\n  },\n  list: {\n    maxHeight: 320\n  },\n  actions: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'flex-end',\n    '& > * + *': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nfunction FilesDropzone({ className, setFieldValue, handleSubmit, ...rest }) {\n  const classes = useStyles();\n  const [files, setFiles] = useState([]);\n\n\n\n  const handleDrop = useCallback((acceptedFiles) => {\n\n    setFiles(acceptedFiles);\n    setFieldValue(\"photo\", acceptedFiles)\n    setFieldValue(\"image\", acceptedFiles[0].name)\n\n  }, []);\n\n\n  const handleRemoveAll = () => {\n    setFiles([]);\n  };\n  const handleFunction = () => {\n    handleSubmit();\n    handleRemoveAll();\n  }\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleDrop,\n  });\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        Upload Image\n      </Button>\n      {files.length > 0 && (\n        <>\n          <PerfectScrollbar options={{ suppressScrollX: true }}>\n            <List className={classes.list}>\n              {files.map((file, i) => (\n                <ListItem\n                  divider={i < files.length - 1}\n                  key={i}\n                >\n                  <ListItemIcon>\n                    <FileCopyIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={file.name}\n                    primaryTypographyProps={{ variant: 'h5' }}\n                    secondary={bytesToSize(file.size)}\n                  />\n\n                </ListItem>\n              ))}\n              <ListItem>\n                <div className={classes.actions}>\n                  <Button\n                    onClick={handleRemoveAll}\n                    size=\"small\"\n                  >\n                    Remove\n                  </Button>\n                  <Button\n                    color=\"secondary\"\n                    size=\"small\"\n                    variant=\"contained\"\n                    onClick={handleFunction}\n                  >\n                    Upload\n                  </Button>\n                </div>\n              </ListItem>\n            </List>\n          </PerfectScrollbar>\n        </>\n      )}\n    </div>\n  );\n}\n\nFilesDropzone.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FilesDropzone;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Dialog,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  }\n}));\n\nfunction Application({\n  author,\n  open,\n  onClose,\n  onApply,\n  className,\n  ...rest\n}) {\n  const [value, setValue] = useState('');\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (event) => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleApply = () => {\n    enqueueSnackbar('Request sent', {\n      variant: 'success'\n    });\n    onApply();\n  };\n\n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <Typography\n          align=\"center\"\n          className={classes.title}\n          gutterBottom\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          The project owner requires an introduction\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          Write down a short note with your application regarding why you\n          think you&apos;d be a good fit for this position.\n        </Typography>\n        <Box mt={3}>\n          <TextField\n            autoFocus\n            FormHelperTextProps={{ classes: { root: classes.helperText } }}\n            fullWidth\n            helperText={`${200 - value.length} characters left`}\n            label=\"Short Note\"\n            multiline\n            onChange={handleChange}\n            placeholder=\"What excites you about this project?\"\n            rows={5}\n            value={value}\n            variant=\"outlined\"\n          />\n          <Box\n            mt={6}\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            <Avatar\n              alt=\"Author\"\n              src={author.avatar}\n            >\n              {getInitials(author.name)}\n            </Avatar>\n            <Box ml={2}>\n              <Typography\n                variant=\"h3\"\n                color=\"textPrimary\"\n              >\n                {author.name}\n              </Typography>\n              <Typography\n                variant=\"subtitle2\"\n                color=\"textPrimary\"\n              >\n                {author.bio}\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n        <Box\n          mt={3}\n          p={3}\n        >\n          <Button\n            onClick={handleApply}\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n          >\n            Apply for a role\n          </Button>\n        </Box>\n      </div>\n    </Dialog>\n  );\n}\n\nApplication.propTypes = {\n  author: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nApplication.defaultProps = {\n  onApply: () => {},\n  onClose: () => {}\n};\n\nexport default Application;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Grid,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Share2 as ShareIcon,\n  Check as CheckIcon,\n  Calendar as CalendarIcon,\n  AlertTriangle as AlertIcon,\n  DollarSign as DollarSignIcon,\n  Send as SendIcon\n} from 'react-feather';\nimport Application from './Application';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  badge: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: theme.spacing(2)\n  },\n  badgeIcon: {\n    marginRight: theme.spacing(1)\n  },\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ project, className, ...rest }) {\n  const classes = useStyles();\n  const [openApplication, setOpenApplication] = useState(false);\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          {project.title}\n        </Typography>\n        <Box\n          mx={-2}\n          display=\"flex\"\n          color=\"text.secondary\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <div className={classes.badge}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.badgeIcon}\n            >\n              {project.active ? <CheckIcon /> : <AlertIcon /> }\n            </SvgIcon>\n            <Typography\n              variant=\"body2\"\n              color=\"inherit\"\n              component=\"span\"\n            >\n              {project.active ? 'Active' : 'Inactive'}\n            </Typography>\n          </div>\n          <div className={classes.badge}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.badgeIcon}\n            >\n              <CalendarIcon />\n            </SvgIcon>\n            <Typography\n              variant=\"body2\"\n              color=\"inherit\"\n              component=\"span\"\n            >\n              {`Ending ${moment(project.endDate).fromNow()}`}\n            </Typography>\n          </div>\n          <div className={classes.badge}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.badgeIcon}\n            >\n              <DollarSignIcon />\n            </SvgIcon>\n            <Typography\n              variant=\"body2\"\n              color=\"inherit\"\n              component=\"span\"\n            >\n              {`Budget: ${project.price}`}\n            </Typography>\n          </div>\n        </Box>\n      </Grid>\n      <Grid item>\n        <Button className={classes.action}>\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <ShareIcon />\n          </SvgIcon>\n          Share\n        </Button>\n        <Button\n          className={classes.action}\n          onClick={handleApplicationOpen}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <SendIcon />\n          </SvgIcon>\n          Apply for a role\n        </Button>\n        <Application\n          author={project.author}\n          onApply={handleApplicationClose}\n          onClose={handleApplicationClose}\n          open={openApplication}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Chip,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Markdown from 'react-markdown/with-html';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  markdown: {\n    fontFamily: theme.typography.fontFamily,\n    '& p': {\n      marginBottom: theme.spacing(2)\n    }\n  }\n}));\n\nfunction Brief({ project, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            xs={12}\n            md={6}\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textSecondary\"\n            >\n              Project Name\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textPrimary\"\n            >\n              {project.title}\n            </Typography>\n            <Box mt={3}>\n              <Typography\n                variant=\"subtitle2\"\n                color=\"textSecondary\"\n              >\n                Technology Stack\n              </Typography>\n              <Box mt={1}>\n                {project.tags.map((tag) => (\n                  <Chip\n                    key={tag}\n                    variant=\"outlined\"\n                    label={tag}\n                  />\n                ))}\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n        <Box mt={3}>\n          <Typography\n            variant=\"subtitle2\"\n            color=\"textSecondary\"\n          >\n            Description\n          </Typography>\n          <Markdown\n            source={project.brief}\n            className={classes.markdown}\n          />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nBrief.propTypes = {\n  project: PropTypes.object.isRequired,\n  className: PropTypes.string\n};\n\nexport default Brief;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  Link,\n  List,\n  ListItem,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  header: {\n    paddingBottom: 0\n  },\n  content: {\n    paddingTop: 0\n  },\n  listItem: {\n    padding: theme.spacing(2, 0),\n    justifyContent: 'space-between'\n  }\n}));\n\nfunction Holder({ project, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        avatar={(\n          <Avatar\n            alt=\"Author\"\n            className={classes.avatar}\n            component={RouterLink}\n            src={project.author.avatar}\n            to=\"#\"\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n        )}\n        className={classes.header}\n        disableTypography\n        subheader={(\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            underline=\"none\"\n            variant=\"h6\"\n          >\n            {project.author.name}\n          </Link>\n        )}\n        title={(\n          <Typography\n            display=\"block\"\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Contest holder\n          </Typography>\n        )}\n      />\n      <CardContent className={classes.content}>\n        <List>\n          <ListItem\n            className={classes.listItem}\n            disableGutters\n            divider\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textPrimary\"\n            >\n              Deadline\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n            >\n              {moment(project.deadline).format('DD MMM YYYY')}\n            </Typography>\n          </ListItem>\n          <ListItem\n            className={classes.listItem}\n            disableGutters\n            divider\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textPrimary\"\n            >\n              Per Project\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n            >\n              {project.price}\n              {' '}\n              {project.currency}\n            </Typography>\n          </ListItem>\n          <ListItem\n            className={classes.listItem}\n            disableGutters\n            divider\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textPrimary\"\n            >\n              Last Update\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n            >\n              {moment(project.updatedAt).format('DD MMM YYYY')}\n            </Typography>\n          </ListItem>\n        </List>\n      </CardContent>\n    </Card>\n  );\n}\n\nHolder.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default Holder;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  header: {\n    paddingBottom: 0\n  },\n  content: {\n    paddingTop: 0\n  }\n}));\n\nfunction Members({ members, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        className={classes.header}\n        title=\"Project members\"\n        titleTypographyProps={{\n          variant: 'overline'\n        }}\n      />\n      <CardContent className={classes.content}>\n        <List>\n          {members.map((member) => (\n            <ListItem\n              disableGutters\n              key={member.id}\n            >\n              <ListItemAvatar>\n                <Avatar\n                  alt=\"Author\"\n                  className={classes.avatar}\n                  src={member.avatar}\n                >\n                  {getInitials(member.name)}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={member.name}\n                primaryTypographyProps={{ variant: 'h6' }}\n                secondary={member.bio}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button fullWidth>\n          Manage users\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nMembers.propTypes = {\n  className: PropTypes.string,\n  members: PropTypes.array.isRequired\n};\n\nexport default Members;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Brief from './Brief';\nimport Holder from './Holder';\nimport Members from './Members';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Overview({ project, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      <Grid\n        item\n        lg={8}\n        xl={9}\n        xs={12}\n      >\n        <Brief project={project} />\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        xl={3}\n        xs={12}\n      >\n        <Members members={project.members} />\n        <Box mt={3}>\n          <Holder project={project} />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nOverview.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default Overview;\n","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Divider,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFileOutlined';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport bytesToSize from 'src/utils/bytesToSize';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 240\n  },\n  placeholder: {\n    height: 240,\n    backgroundColor: colors.blueGrey[50],\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  insertDriveFileIcon: {\n    height: theme.spacing(6),\n    width: theme.spacing(6),\n    fontSize: theme.spacing(6)\n  },\n  content: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  getAppIcon: {\n    marignRight: theme.spacing(1)\n  },\n  menu: {\n    width: 250,\n    maxWidth: '100%'\n  }\n}));\n\nfunction FileCard({ file, className, ...rest }) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {file.mimeType.includes('image/') ? (\n        <CardMedia\n          className={classes.media}\n          image={file.url}\n        />\n      ) : (\n        <div className={classes.placeholder}>\n          <InsertDriveFileIcon className={classes.insertDriveFileIcon} />\n        </div>\n      )}\n      <CardContent className={classes.content}>\n        <div>\n          <Typography\n            variant=\"h5\"\n            color=\"textPrimary\"\n          >\n            {file.name}\n          </Typography>\n          <Typography\n            variant=\"subtitle2\"\n            color=\"textPrimary\"\n          >\n            {bytesToSize(file.size)}\n          </Typography>\n        </div>\n        <div>\n          <Tooltip title=\"More options\">\n            <IconButton\n              edge=\"end\"\n              onClick={handleMenuOpen}\n              ref={moreRef}\n              size=\"small\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button fullWidth>\n          <GetAppIcon className={classes.getAppIcon} />\n          Download\n        </Button>\n      </CardActions>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        classes={{ paper: classes.menu }}\n        onClose={handleMenuClose}\n        elevation={1}\n        open={openMenu}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem divider>\n          <ListItemIcon>\n            <EditIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Rename\" />\n        </MenuItem>\n        <MenuItem divider>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </Card>\n  );\n}\n\nFileCard.propTypes = {\n  className: PropTypes.string,\n  file: PropTypes.object.isRequired\n};\n\nexport default FileCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport FilesDropzone from 'src/components/FilesDropzone';\nimport FileCard from './FileCard';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Files({ files, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardContent>\n          <FilesDropzone />\n        </CardContent>\n      </Card>\n      <Grid\n        container\n        spacing={3}\n      >\n        {files.map((file) => (\n          <Grid\n            item\n            key={file.id}\n            lg={4}\n            md={4}\n            sm={6}\n            xs={12}\n          >\n            <FileCard file={file} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nFiles.propTypes = {\n  className: PropTypes.string,\n  files: PropTypes.array.isRequired\n};\n\nexport default Files;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Card,\n  Typography,\n  Link,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PersonAddIcon from '@material-ui/icons/PersonAddOutlined';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport DashboardIcon from '@material-ui/icons/DashboardOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  card: {\n    marginLeft: theme.spacing(2),\n    flexGrow: 1,\n    display: 'flex',\n    padding: theme.spacing(2),\n    alignItems: 'center'\n  },\n  date: {\n    marginLeft: 'auto',\n    flexShrink: 0\n  },\n  avatar: {\n    color: colors.common.white\n  },\n  avatarBlue: {\n    backgroundColor: colors.blue[500]\n  },\n  avatarGreen: {\n    backgroundColor: colors.green[500]\n  },\n  avatarOrange: {\n    backgroundColor: colors.orange[500]\n  },\n  avatarIndigo: {\n    backgroundColor: colors.indigo[500]\n  }\n}));\n\nconst avatarsMap = {\n  upload_file: {\n    icon: GetAppIcon,\n    className: 'avatarBlue'\n  },\n  join_team: {\n    icon: PersonAddIcon,\n    className: 'avatarOrange'\n  },\n  price_change: {\n    icon: AttachMoneyIcon,\n    className: 'avatarGreen'\n  },\n  contest_created: {\n    icon: DashboardIcon,\n    className: 'avatarIndigo'\n  }\n};\n\nfunction Activity({ activity, className, ...rest }) {\n  const classes = useStyles();\n  const avatar = avatarsMap[activity.type];\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar className={clsx(classes.avatar, classes[avatar.className])}>\n        <avatar.icon />\n      </Avatar>\n      <Card className={classes.card}>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n        >\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            variant=\"h6\"\n          >\n            {activity.subject}\n          </Link>\n          {' '}\n          {activity.description}\n        </Typography>\n        <Typography\n          className={classes.date}\n          variant=\"caption\"\n        >\n          {moment(activity.createdAt).fromNow()}\n        </Typography>\n      </Card>\n    </div>\n  );\n}\n\nActivity.propTypes = {\n  activity: PropTypes.object.isRequired,\n  className: PropTypes.string\n};\n\nexport default Activity;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport clsx from 'clsx';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport Activity from './Activity';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  title: {\n    marginBottom: theme.spacing(3)\n  },\n  group: {\n    '& + &': {\n      marginTop: theme.spacing(4)\n    }\n  },\n  activity: {\n    position: 'relative',\n    '& + &': {\n      marginTop: theme.spacing(3),\n      '&:before': {\n        position: 'absolute',\n        content: '\" \"',\n        height: 20,\n        width: 1,\n        top: -20,\n        left: 20,\n        backgroundColor: theme.palette.divider\n      }\n    }\n  }\n}));\n\nfunction Activities({ activities, className, ...rest }) {\n  const classes = useStyles();\n  const todayItems = [];\n  const lastWeekItems = [];\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const activity of activities) {\n    if (moment(activity.createdAt).isSame(moment(), 'day')) {\n      todayItems.push(activity);\n    } else {\n      lastWeekItems.push(activity);\n    }\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography\n        className={classes.title}\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Today\n      </Typography>\n      <div className={classes.group}>\n        {todayItems.map((activity) => (\n          <Activity\n            activity={activity}\n            className={classes.activity}\n            key={activity.id}\n          />\n        ))}\n      </div>\n      <div className={classes.group}>\n        <Typography\n          className={classes.title}\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Last week\n        </Typography>\n        {lastWeekItems.map((activity) => (\n          <Activity\n            activity={activity}\n            className={classes.activity}\n            key={activity.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nActivities.propTypes = {\n  activities: PropTypes.array.isRequired,\n  className: PropTypes.string\n};\n\nexport default Activities;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Chip,\n  Divider,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 125\n  },\n  content: {\n    paddingTop: 0\n  },\n  avatar: {\n    height: 64,\n    width: 64\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  }\n}));\n\nfunction SubscriberCard({ subscriber, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardMedia\n        className={classes.media}\n        image={subscriber.cover}\n      />\n      <CardContent className={classes.content}>\n        <Box\n          mt={-4}\n          mb={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Avatar\n            alt=\"Subscriber\"\n            className={classes.avatar}\n            component={RouterLink}\n            src={subscriber.avatar}\n            to=\"#\"\n          />\n        </Box>\n        <Link\n          align=\"center\"\n          color=\"textPrimary\"\n          component={RouterLink}\n          display=\"block\"\n          to=\"#\"\n          underline=\"none\"\n          variant=\"h6\"\n        >\n          {subscriber.name}\n        </Link>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {subscriber.commonContacts}\n          {' '}\n          contacts in common\n        </Typography>\n        <Box my={2}>\n          <Divider />\n        </Box>\n        {subscriber.labels.map((label) => (\n          <Chip\n            key={label}\n            className={classes.chip}\n            label={label}\n            variant=\"outlined\"\n          />\n        ))}\n      </CardContent>\n    </Card>\n  );\n}\n\nSubscriberCard.propTypes = {\n  className: PropTypes.string,\n  subscriber: PropTypes.object.isRequired\n};\n\nexport default SubscriberCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport SubscriberCard from './SubscriberCard';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Subscribers({ subscribers, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      {subscribers.map((subscriber) => (\n        <Grid\n          item\n          key={subscriber.id}\n          lg={4}\n          xs={12}\n        >\n          <SubscriberCard subscriber={subscriber} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nSubscribers.propTypes = {\n  className: PropTypes.string,\n  subscribers: PropTypes.array.isRequired\n};\n\nexport default Subscribers;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tabs,\n  Tab,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Overview from './Overview';\nimport Files from './Files';\nimport Activities from './Activities';\nimport Subscribers from './Subscribers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction ProjectDetailsView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [currentTab, setCurrentTab] = useState('overview');\n  const [project, setProject] = useState(null);\n  const tabs = [\n    { value: 'overview', label: 'Overview' },\n    { value: 'files', label: 'Files' },\n    { value: 'activity', label: 'Activity' },\n    { value: 'subscribers', label: 'Subscribers' }\n  ];\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  const getProject = useCallback(() => {\n    axios\n      .get('/api/projects/projects/1')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setProject(response.data.project);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProject();\n  }, [getProject]);\n\n  if (!project) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Project Details\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header project={project} />\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            textColor=\"secondary\"\n            value={currentTab}\n            variant=\"scrollable\"\n          >\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.value}\n                label={tab.label}\n                value={tab.value}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box mt={3}>\n          {currentTab === 'overview' && <Overview project={project} />}\n          {currentTab === 'files' && <Files files={project.files} />}\n          {currentTab === 'activity' && <Activities activities={project.activities} />}\n          {currentTab === 'subscribers' && <Subscribers subscribers={project.subscribers} />}\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProjectDetailsView;\n"],"sourceRoot":""}