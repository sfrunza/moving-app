{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","components/Label.js","components/ProjectCard.js","views/projects/OverviewView/Header.js","views/projects/OverviewView/Statistics.js","views/projects/OverviewView/Notifications.js","views/projects/OverviewView/Projects.js","views/projects/OverviewView/Todos.js","views/projects/OverviewView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","defaultProps","media","background","dark","likedButton","colors","red","subscribersIcon","marginLeft","marginRight","ProjectCard","project","useState","isLiked","setLiked","likes","setLikes","p","image","mt","alt","src","author","avatar","getInitials","ml","component","RouterLink","to","variant","title","moment","updatedAt","fromNow","pb","px","description","py","container","justify","item","location","type","technology","pl","pr","onClick","prevLikes","subscribers","value","rating","size","readOnly","action","common","white","actionIcon","width","maxHeight","Header","user","useSelector","state","account","Grid","md","xs","Typography","firstName","Box","Button","Hidden","smDown","textAlign","breakpoints","up","borderRight","divider","down","borderBottom","label","overline","marginTop","Statistics","isMountedRef","statistics","setStatistics","getStatistics","useCallback","axios","get","then","response","data","Card","sm","payout","projects","visitors","watching","iconsMap","invite","message","notifications","id","Notifications","List","notification","i","ListItem","length","key","ListItemIcon","ListItemText","ListItemSecondaryAction","Tooltip","IconButton","edge","position","bottom","left","content","arrowIcon","Projects","setProjects","getProjects","mb","done","textDecoration","text","Todos","todos","setTodos","getTodos","CardHeader","Divider","todo","Radio","checked","event","persist","prevTodos","prevTodo","handleChange","deadline","isBefore","isSame","getLabel","paddingTop","paddingBottom","OverviewView","Page","Container","maxWidth"],"mappings":"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","file":"static/js/41.1f39d621.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  fade,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase',\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nfunction Label({\n  className,\n  color,\n  children,\n  style,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nLabel.defaultProps = {\n  className: '',\n  color: 'secondary'\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardMedia,\n  Divider,\n  Grid,\n  IconButton,\n  Link,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { Users as UsersIcon } from 'react-feather';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 200,\n    backgroundColor: theme.palette.background.dark\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  subscribersIcon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction ProjectCard({ project, className, ...rest }) {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState(project.isLiked);\n  const [likes, setLikes] = useState(project.likes);\n\n  const handleLike = () => {\n    setLiked(true);\n    setLikes((prevLikes) => prevLikes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikes((prevLikes) => prevLikes - 1);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={3}>\n        <CardMedia\n          className={classes.media}\n          image={project.media}\n        />\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <Avatar\n            alt=\"Author\"\n            src={project.author.avatar}\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n          <Box ml={2}>\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h5\"\n            >\n              {project.title}\n            </Link>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              by\n              {' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"#\"\n                variant=\"h6\"\n              >\n                {project.author.name}\n              </Link>\n              {' '}\n              | Updated\n              {' '}\n              {moment(project.updatedAt).fromNow()}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        pb={2}\n        px={3}\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {project.description}\n        </Typography>\n      </Box>\n      <Box\n        py={2}\n        px={3}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.location}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Location\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.type}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Type\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {project.technology}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Technology\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        pl={2}\n        pr={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        {isLiked ? (\n          <Tooltip title=\"Unlike\">\n            <IconButton\n              className={classes.likedButton}\n              onClick={handleUnlike}\n            >\n              <FavoriteIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Like\">\n            <IconButton onClick={handleLike}>\n              <FavoriteBorderIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        )}\n        <Typography\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          {likes}\n        </Typography>\n        <SvgIcon\n          fontSize=\"small\"\n          color=\"action\"\n          className={classes.subscribersIcon}\n        >\n          <UsersIcon />\n        </SvgIcon>\n        <Typography\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          {project.subscribers}\n        </Typography>\n        <Box flexGrow={1} />\n        <Rating\n          value={project.rating}\n          size=\"small\"\n          readOnly\n        />\n      </Box>\n    </Card>\n  );\n}\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default ProjectCard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Grid,\n  Hidden,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    backgroundColor: theme.palette.common.white\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  },\n  image: {\n    width: '100%',\n    maxHeight: 400\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const { user } = useSelector((state) => state.account);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid\n          item\n          md={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Home\n          </Typography>\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            Good Morning,\n            {' '}\n            {user.firstName}\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n          >\n            Here’s what’s happening with your projects today\n          </Typography>\n          <Box mt={2}>\n            <Button\n              className={classes.action}\n              variant=\"contained\"\n            >\n              <BarChartIcon className={classes.actionIcon} />\n              View summary\n            </Button>\n          </Box>\n        </Grid>\n        <Hidden smDown>\n          <Grid\n            item\n            md={6}\n          >\n            <img\n              alt=\"Cover\"\n              className={classes.image}\n              src=\"/static/images/undraw_growth_analytics_8btt.svg\"\n            />\n          </Grid>\n        </Hidden>\n      </Grid>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  overline: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nfunction Statistics({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [statistics, setStatistics] = useState(null);\n\n  const getStatistics = useCallback(() => {\n    axios\n      .get('/api/projects/account/statistics')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setStatistics(response.data.statistics);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getStatistics();\n  }, [getStatistics]);\n\n  if (!statistics) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n      >\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"h2\"\n            color=\"textPrimary\"\n          >\n            $\n            {statistics.payout}\n          </Typography>\n          <Typography\n            className={classes.overline}\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Next payout\n          </Typography>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"h2\"\n            color=\"textPrimary\"\n          >\n            $\n            {statistics.projects}\n          </Typography>\n          <Typography\n            className={classes.overline}\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total products\n          </Typography>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            variant=\"h2\"\n            color=\"textPrimary\"\n          >\n            {statistics.visitors}\n          </Typography>\n          <Typography\n            className={classes.overline}\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Today&apos;s Visitors\n          </Typography>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography\n              component=\"span\"\n              variant=\"h2\"\n              color=\"textPrimary\"\n            >\n              {statistics.watching}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"primary\"\n            >\n              Live\n            </Label>\n          </Box>\n          <Typography\n            className={classes.overline}\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Watching now\n          </Typography>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\nStatistics.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Card,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNextOutlined';\nimport PaymentIcon from '@material-ui/icons/PaymentOutlined';\nimport MailIcon from '@material-ui/icons/MailOutlineOutlined';\n\nconst iconsMap = {\n  invite: <SendIcon />,\n  message: <MailIcon />,\n  payout: <PaymentIcon />\n};\n\n// TODO: Get notifications from API\nconst notifications = [\n  {\n    id: '5e8883a4f7877f898c408c27',\n    value: 6,\n    type: 'invite',\n    message: 'to send service quotes'\n  },\n  {\n    id: '5e8883aa34190e0457a6e2b9',\n    value: 2,\n    type: 'message',\n    message: 'from clients'\n  },\n  {\n    id: '5e8883af168cad3e1f4fe0ae',\n    value: 1,\n    type: 'payout',\n    message: 'that needs your confirmation'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  fontWeightMedium: {\n    fontWeight: theme.typography.fontWeightMedium\n  }\n}));\n\nfunction Notifications({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <List>\n        {notifications.map((notification, i) => (\n          <ListItem\n            divider={i < notifications.length - 1}\n            key={notification.id}\n          >\n            <ListItemIcon>\n              {iconsMap[notification.type]}\n            </ListItemIcon>\n            <ListItemText>\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                <span className={classes.fontWeightMedium}>\n                  {notification.value}\n                </span>\n                {' '}\n                <span className={classes.fontWeightMedium}>\n                  {notification.type}\n                  s\n                </span>\n                {' '}\n                {notification.message}\n              </Typography>\n            </ListItemText>\n            <ListItemSecondaryAction>\n              <Tooltip title=\"View\">\n                <IconButton\n                  edge=\"end\"\n                  size=\"small\"\n                >\n                  <NavigateNextIcon />\n                </IconButton>\n              </Tooltip>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport ProjectCard from 'src/components/ProjectCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  title: {\n    position: 'relative',\n    '&:before': {\n      position: 'absolute',\n      bottom: -8,\n      left: 0,\n      content: '\" \"',\n      height: 3,\n      width: 48,\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  arrowIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction Projects({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState(null);\n\n  const getProjects = useCallback(() => {\n    axios\n      .get('/api/projects/account/projects')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setProjects(response.data.projects);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  if (!projects) {\n    return null;\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        mb={2}\n      >\n        <Typography\n          className={classes.title}\n          variant=\"h5\"\n          color=\"textPrimary\"\n        >\n          Active Projects\n        </Typography>\n        <Button\n          component={RouterLink}\n          to=\"/app/projects/browse\"\n        >\n          See all\n          <KeyboardArrowRightIcon className={classes.arrowIcon} />\n        </Button>\n      </Box>\n      {projects.map((project) => (\n        <Box\n          mb={2}\n          key={project.id}\n        >\n          <ProjectCard\n            project={project}\n          />\n        </Box>\n      ))}\n    </div>\n  );\n}\n\nProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Projects;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Radio,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Label from 'src/components/Label';\n\nconst getLabel = (todo) => {\n  if (todo.done) {\n    return null;\n  }\n\n  if (moment(todo.deadline).isBefore(moment(), 'day')) {\n    return (\n      <Label color=\"error\">\n        {`Due ${moment(todo.deadline).fromNow()}`}\n      </Label>\n    );\n  }\n\n  if (moment(todo.deadline).isSame(moment(), 'day')) {\n    return (\n      <Label color=\"warning\">\n        Due today\n      </Label>\n    );\n  }\n\n  return (\n    <Label>\n      {`Due ${moment(todo.deadline).fromNow()}`}\n    </Label>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  done: {\n    textDecoration: 'line-through',\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction Todos({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [todos, setTodos] = useState();\n\n  const handleChange = (event, todo) => {\n    event.persist();\n\n    setTodos((prevTodos) => prevTodos.map((prevTodo) => {\n      if (prevTodo.id === todo.id) {\n        return {\n          ...todo,\n          done: !todo.done\n        };\n      }\n\n      return prevTodo;\n    }));\n  };\n\n  const getTodos = useCallback(() => {\n    axios\n      .get('/api/projects/account/todos')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setTodos(response.data.todos);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getTodos();\n  }, [getTodos]);\n\n  if (!todos) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={(\n          <Button\n            color=\"secondary\"\n            size=\"small\"\n          >\n            Add Todo\n          </Button>\n        )}\n        title=\"Todos\"\n      />\n      <Divider />\n      <List>\n        {todos.map((todo, i) => (\n          <ListItem\n            divider={i < todos.length - 1}\n            key={todo.id}\n          >\n            <ListItemIcon>\n              <Radio\n                checked={todo.done}\n                onClick={(event) => handleChange(event, todo)}\n              />\n            </ListItemIcon>\n            <ListItemText>\n              <Typography\n                className={clsx({\n                  [classes.done]: todo.done\n                })}\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {todo.title}\n              </Typography>\n            </ListItemText>\n            {getLabel(todo)}\n            <Tooltip title=\"Archive\">\n              <IconButton>\n                <ArchiveIcon />\n              </IconButton>\n            </Tooltip>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nTodos.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Todos;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Statistics from './Statistics';\nimport Notifications from './Notifications';\nimport Projects from './Projects';\nimport Todos from './Todos';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction OverviewView() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Overview\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <Statistics />\n        </Box>\n        <Box mt={6}>\n          <Notifications />\n        </Box>\n        <Box mt={6}>\n          <Projects />\n        </Box>\n        <Box mt={6}>\n          <Todos />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default OverviewView;\n"],"sourceRoot":""}