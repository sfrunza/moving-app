{"version":3,"sources":["hooks/useIsMountedRef.js","utils/wait.js","views/userCalendar/CalendarView/Header.js","views/userCalendar/CalendarView/Toolbar.js","views/userCalendar/CalendarView/AddEditEventModal/AddEditEventForm.js","views/userCalendar/CalendarView/AddEditEventModal/index.js","views/userCalendar/CalendarView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","wait","time","Promise","res","setTimeout","useStyles","makeStyles","theme","root","action","marginBottom","spacing","marginLeft","actionIcon","marginRight","Header","className","onEventAdd","rest","classes","Grid","clsx","container","justify","item","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","Button","onClick","SvgIcon","defaultProps","paddingTop","Toolbar","date","onDatePrev","view","onDateNext","onDateToday","onViewChange","alignItems","ButtonGroup","size","style","flex","moment","format","confirmButton","AddEditEventForm","event","mode","onAdd","onCancel","onDelete","onEdit","enqueueSnackbar","useSnackbar","initialValues","allDay","description","end","start","title","validationSchema","Yup","shape","max","when","schema","min","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","data","id","uuidv4","success","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldTouched","setFieldValue","touched","Box","p","align","gutterBottom","TextField","error","Boolean","fullWidth","helperText","label","name","onBlur","onChange","value","mt","FormControlLabel","control","Switch","checked","DateTimePicker","inputVariant","FormHelperText","Divider","display","IconButton","flexGrow","type","disabled","AddEditEventModal","open","Dialog","maxWidth","onClose","backgroundColor","palette","background","dark","minHeight","minWidth","paddingBottom","calendar","borderColor","divider","deepOrange","default","typography","body2","body1","h6","subtitle2","fontWeight","fontWeightMedium","text","secondary","padding","textDecoration","cursor","contrastText","border","margin","opacity","green","justifyContent","subtitle1","height","float","CalendarView","history","user","loggedInStatus","handleLogout","calendarRef","isMountedRef","useTheme","mobileDevice","useMediaQuery","breakpoints","down","useState","toDate","setDate","events","setEvents","getEvents","useCallback","axios","get","then","response","arr","map","info","status","customer","first_name","last_name","pick_up_date","push","move_type","Page","Container","calendarEl","calendarApi","getApi","next","getDate","prev","today","Paper","allDayMaintainDuration","defaultDate","droppable","eventClick","arg","extendedProps","tomorrow","add","endOf","window","eventResizableFromStart","eventRender","el","moveType","symbol","completedColor","content","src","width","ReactDOM","render","header","ref","rerenderDelay","selectable","weekends","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","timelinePlugin","fixedWeekCount","contentHeight"],"mappings":"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","file":"static/js/12.af15fea5.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export const wait = (time) => new Promise((res) => setTimeout(res, time));\n\nexport default wait;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Breadcrumbs,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { PlusCircle as PlusCircleIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({\n  className,\n  onEventAdd,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Calendar\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Here&apos;s what you planned\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={onEventAdd}\n          className={classes.action}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <PlusCircleIcon />\n          </SvgIcon>\n          New Event\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  onEventAdd: PropTypes.func\n};\n\nHeader.defaultProps = {\n  onEventAdd: () => {}\n};\n\nexport default Header;\n","import React from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ButtonGroup,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {paddingTop: '60px'}\n}));\n\nfunction Toolbar({\n  date,\n  view,\n  onDatePrev,\n  onDateNext,\n  onEventAdd,\n  onViewChange,\n  onDateToday,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      {...rest}\n      alignItems=\"center\"\n      container\n      justify=\"space-between\"\n      spacing={3}\n    >\n      <Grid item>\n        <ButtonGroup size=\"small\">\n          <Button onClick={onDatePrev}>Prev</Button>\n          <Button onClick={onDateToday}>Today</Button>\n          <Button onClick={onDateNext}>Next</Button>\n        </ButtonGroup>\n      </Grid>\n        <Grid item style={{flex: '0 0 55%'}}>\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {moment(date).format('MMMM YYYY')}\n          </Typography>\n        </Grid>\n    </Grid>\n  );\n}\n\nToolbar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  date: PropTypes.any.isRequired,\n  onDateNext: PropTypes.func,\n  onDatePrev: PropTypes.func,\n  onDateToday: PropTypes.func,\n  onEventAdd: PropTypes.func,\n  onViewChange: PropTypes.func,\n  view: PropTypes.string.isRequired\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  IconButton,\n  Divider,\n  FormControlLabel,\n  FormHelperText,\n  Switch,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { DateTimePicker } from '@material-ui/pickers';\nimport { Trash as TrashIcon } from 'react-feather';\nimport wait from 'src/utils/wait';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  confirmButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction AddEditEventForm({\n  event,\n  mode,\n  onAdd,\n  onCancel,\n  onDelete,\n  onEdit\n}) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        allDay: event.allDay || false,\n        color: event.color || '',\n        description: event.description || '',\n        end: event.end || moment(),\n        start: event.start || moment(),\n        title: event.title || ''\n      }}\n      validationSchema={Yup.object().shape({\n        allDay: Yup.bool(),\n        description: Yup.string().max(5000),\n        end: Yup.date()\n          .when(\n            'start',\n            (start, schema) => (start && schema.min(start, 'End date must be later than start date')),\n          ),\n        start: Yup.date(),\n        title: Yup.string().max(255).required('Title is required')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          const data = {\n            ...values\n          };\n\n          // Make API request depending on mode type\n          // If editting an event, here should make a patch request\n          // else a post request\n          await wait(200);\n\n          // On post request server should return an ID\n          if (mode === 'add') {\n            data.id = uuidv4();\n          } else {\n            data.id = event.id;\n          }\n\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Saved changes', {\n            variant: 'success'\n          });\n\n          if (mode === 'add') {\n            onAdd(data);\n          } else {\n            onEdit(data);\n          }\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldTouched,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Box p={3}>\n            <Typography\n              align=\"center\"\n              gutterBottom\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              {mode === 'add' ? 'Add Event' : 'Edit Event'}\n            </Typography>\n          </Box>\n          <Box p={3}>\n            <TextField\n              error={Boolean(touched.title && errors.title)}\n              fullWidth\n              helperText={touched.title && errors.title}\n              label=\"Title\"\n              name=\"title\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.title}\n              variant=\"outlined\"\n            />\n            <Box mt={2}>\n              <TextField\n                error={Boolean(touched.description && errors.description)}\n                fullWidth\n                helperText={touched.description && errors.description}\n                label=\"Description\"\n                name=\"description\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.description}\n                variant=\"outlined\"\n              />\n            </Box>\n            <Box mt={2}>\n              <FormControlLabel\n                control={(\n                  <Switch\n                    checked={values.allDay}\n                    name=\"allDay\"\n                    onChange={handleChange}\n                  />\n                )}\n                label=\"All day\"\n              />\n            </Box>\n            <Box mt={2}>\n              <DateTimePicker\n                fullWidth\n                inputVariant=\"outlined\"\n                label=\"Start date\"\n                name=\"start\"\n                onClick={() => setFieldTouched('end')}\n                onChange={(date) => setFieldValue('start', date)}\n                value={values.start}\n              />\n            </Box>\n            <Box mt={2}>\n              <DateTimePicker\n                fullWidth\n                inputVariant=\"outlined\"\n                label=\"End date\"\n                name=\"end\"\n                onClick={() => setFieldTouched('end')}\n                onChange={(date) => setFieldValue('end', date)}\n                value={values.end}\n              />\n            </Box>\n            {Boolean(touched.end && errors.end) && (\n              <Box mt={2}>\n                <FormHelperText error>\n                  {errors.end}\n                </FormHelperText>\n              </Box>\n            )}\n          </Box>\n          <Divider />\n          <Box\n            p={2}\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            {mode === 'edit' && (\n              <IconButton onClick={() => onDelete(event.id)}>\n                <SvgIcon>\n                  <TrashIcon />\n                </SvgIcon>\n              </IconButton>\n            )}\n            <Box flexGrow={1} />\n            <Button onClick={onCancel}>\n              Cancel\n            </Button>\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={isSubmitting}\n              color=\"secondary\"\n              className={classes.confirmButton}\n            >\n              Confirm\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nAddEditEventForm.propTypes = {\n  event: PropTypes.object,\n  mode: PropTypes.oneOf(['add', 'edit']).isRequired,\n  onAdd: PropTypes.func,\n  onCancel: PropTypes.func,\n  onDelete: PropTypes.func,\n  onEdit: PropTypes.func\n};\n\nAddEditEventForm.defaultProps = {\n  event: {},\n  onAdd: () => {},\n  onCancel: () => {},\n  onDelete: () => {},\n  onEdit: () => {}\n};\n\nexport default AddEditEventForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog } from '@material-ui/core';\nimport AddEditEventForm from './AddEditEventForm';\n\nfunction AddEditEventModal({\n  event,\n  mode,\n  onAdd,\n  onCancel,\n  onDelete,\n  onEdit,\n  open,\n  ...rest\n}) {\n  return (\n    <Dialog\n      maxWidth=\"sm\"\n      fullWidth\n      onClose={onCancel}\n      open={open}\n      {...rest}\n    >\n      {/* Dialog renders its body even if not open */}\n      {open && (\n        <AddEditEventForm\n          event={event}\n          mode={mode}\n          onAdd={onAdd}\n          onCancel={onCancel}\n          onDelete={onDelete}\n          onEdit={onEdit}\n        />\n      )}\n    </Dialog>\n  );\n}\n\nAddEditEventModal.propTypes = {\n  event: PropTypes.object,\n  mode: PropTypes.oneOf(['add', 'edit']),\n  onAdd: PropTypes.func,\n  onCancel: PropTypes.func,\n  onDelete: PropTypes.func,\n  onEdit: PropTypes.func,\n  open: PropTypes.bool\n};\n\nAddEditEventModal.defaultProps = {\n  event: {},\n  onAdd: () => {},\n  onCancel: () => {},\n  onDelete: () => {},\n  onEdit: () => {},\n  open: false\n};\n\nexport default AddEditEventModal;\n","import React, {\n  useCallback,\n  useState,\n  useRef,\n  useEffect\n} from 'react';\nimport ReactDOM from \"react-dom\";\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport timelinePlugin from '@fullcalendar/timeline';\nimport {\n  Box,\n  Container,\n  Paper,\n  useTheme,\n  useMediaQuery,\n  makeStyles\n} from '@material-ui/core';\nimport '@fullcalendar/core/main.css';\nimport '@fullcalendar/daygrid/main.css';\nimport '@fullcalendar/timegrid/main.css';\nimport '@fullcalendar/list/main.css';\nimport axios from 'axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Toolbar from './Toolbar';\nimport AddEditEventModal from './AddEditEventModal';\nimport green from '@material-ui/core/colors/green';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    minWidth :'1600px',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  calendar: {\n    '& .fc-unthemed th': {\n      borderColor: theme.palette.divider\n    },\n    '& .fc-unthemed td': {\n      borderColor: theme.palette.divider\n    },\n    '& .fc-unthemed td.fc-today': {\n      backgroundColor: deepOrange[50]\n    },\n    '& .fc-head': {\n      backgroundColor: theme.palette.background.dark\n    },\n    '& .fc-body': {\n      backgroundColor: theme.palette.background.default\n    },\n    '& .fc-axis': {\n      ...theme.typography.body2\n    },\n    '& .fc-list-item-time': {\n      ...theme.typography.body2\n    },\n    '& .fc-list-item-title': {\n      ...theme.typography.body1\n    },\n    '& .fc-list-heading-main': {\n      ...theme.typography.h6\n    },\n    '& .fc-list-heading-alt': {\n      ...theme.typography.h6\n    },\n    '& .fc th': {\n      borderColor: theme.palette.divider\n    },\n    '& .fc-day-header': {\n      ...theme.typography.subtitle2,\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.secondary,\n      padding: theme.spacing(1),\n      backgroundColor: theme.palette.background.dark,\n    },\n    '& .fc-day-top': {\n      ...theme.typography.body2\n    },\n    '& .fc-highlight': {\n      backgroundColor: theme.palette.background.dark\n    },\n    '& .fc-event:hover': {\n      color: '#275827',\n      textDecoration: 'none',\n      cursor: 'pointer'\n    },\n    '& .fc-event': {\n      backgroundColor: 'transparent',\n      color: theme.palette.secondary.contrastText,\n      border: 'none',\n      margin: '2px',\n      opacity: 0.9,\n      '& .fc-time': {\n        ...theme.typography.h6,\n        color: 'inherit'\n      },\n      '& .fc-title': {\n        ...theme.typography.body1,\n        color: green[700],\n        display: 'flex',\n        justifyContent: 'space-between',\n        fontSize: '12px'\n      }\n    },\n    '& .fc-list-empty': {\n      ...theme.typography.subtitle1\n    },\n    '& .fc-day-grid.fc-row.fc-week.fc-widget-content': {\n      height: '300px !important'\n    },\n    '& .fc-day-number': {\n      float: 'left !important'\n    },\n    '& tbody .fc-row': {\n      height: 'auto !important',\n      minHeight: '128px !important'\n    }\n  }\n}));\n\n\nfunction CalendarView({history, user, loggedInStatus, handleLogout}) {\n  const classes = useStyles();\n  const calendarRef = useRef(null);\n  const isMountedRef = useIsMountedRef();\n  const theme = useTheme();\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\n  const [view, setView] = useState(mobileDevice ? 'listWeek' : 'dayGridMonth');\n  const [date, setDate] = useState(moment().toDate());\n  const [events, setEvents] = useState(null);\n  const [jobSelect, setJobSelect] = useState(true)\n  const [modal, setModal] = useState({\n    event: null,\n    mode: null,\n    open: false\n  });\n\n  function zoomOutMobile() {\n      var viewport = document.querySelector('meta[name=\"viewport\"]');\n\n      if ( viewport ) {\n        viewport.content = \"initial-scale=1\";\n        viewport.content = \"width=800\";\n      }\n    }\n\n\n\n  const EventDetail = ({ event, el }) => {\n    let moveType = event.extendedProps.description\n    let status = event.extendedProps.status\n    let symbol = \"\";\n    let completedColor = '';\n    if (status === \"Completed\") {\n      completedColor = \"#5800ff\"\n    }\n    function image(){\n      return (\n        <img  src=\"https://freeiconshop.com/wp-content/uploads/edd/box-outline-filled.png\" style={{width: '13px'}}/>\n      )\n    }\n    if (moveType === \"Unloading Help\") {\n      symbol = \"U\"\n    } else if (moveType === \"Loading Help\") {\n      symbol = \"L\"\n    } else if (moveType === \"Inside Move\") {\n      symbol = \"I\"\n    } else if (moveType === \"Moving with Storage\") {\n      symbol = '\\u2192 ]'\n    } else if (moveType === \"Packing Only\") {\n      symbol = \"P\"\n    }\n      // extendedProps is used to access additional event properties.\n      const content = (\n        <div className=\"fc-title\" style={{ color: `${completedColor}` }}>\n          <div>{event.title}</div>\n          <div style={{display: 'flex', alignItems: 'center'}}>{(symbol === \"P\") ? image() : symbol}</div>\n          <div>4/2</div>\n        </div>\n      );\n      ReactDOM.render(content, el);\n      return el;\n    };\n\n  const resetModal = () => {\n    setModal({\n      event: null,\n      mode: null,\n      open: false\n    });\n  };\n  const handleDateToday = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.today();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleDatePrev = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.prev();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleDateNext = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.next();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleEventSelect = (arg) => {\n    let status = arg.event.extendedProps.status;\n    let date = arg.event.start\n    let tomorrow = moment().add(1, 'day').endOf('day')\n\n    if (status === \"Completed\" || date > tomorrow ) {\n      return null\n    } else {\n      window.open(`/calendar/${arg.event.id}`, '_blank');\n    }\n  };\n\n  const getEvents = useCallback(() => {\n    axios\n      .get('/api/v1/jobs.json')\n      .then((response) => {\n        let data = response.data;\n        let arr = []\n        let title = \"\";\n        let description = \"\";\n        let date = [];\n        data.map((info) => {\n          if (info.status === \"Confirmed\" || info.status === \"Completed\") {\n            title = info.customer.first_name + \" \" + info.customer.last_name\n            description = info.status\n            date = moment(info.pick_up_date).format('YYYY-MM-DD')\n            return arr.push({ \"id\":info.id, \"title\": title, \"date\": date, \"description\": info.move_type, \"status\": info.status, 'customRender': true})\n          }\n        })\n\n        if (isMountedRef.current) {\n          setEvents(arr);\n        }\n\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEvents();\n  }, [getEvents]);\n\n  if (!events) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Calendar\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar\n          date={date}\n          onDateNext={handleDateNext}\n          onDatePrev={handleDatePrev}\n          onDateToday={handleDateToday}\n          view=\"\"\n        />\n        <Paper\n          className={classes.calendar}\n          component={Box}\n          mt={3}\n          p={2}\n        >\n\n          <FullCalendar\n            allDayMaintainDuration\n            defaultDate={date}\n            droppable\n            eventClick={handleEventSelect}\n            // eventLimit={6}\n            eventResizableFromStart\n            events={events}\n            eventRender={EventDetail}\n            header={false}\n            height={700}\n            ref={calendarRef}\n            rerenderDelay={10}\n            selectable\n            weekends\n            plugins={[\n              dayGridPlugin,\n              timeGridPlugin,\n              interactionPlugin,\n              listPlugin,\n              timelinePlugin\n            ]}\n            fixedWeekCount={false}\n            contentHeight='auto'\n          />\n        </Paper>\n      </Container>\n\n    </Page>\n  );\n}\n\nexport default CalendarView;\n"],"sourceRoot":""}