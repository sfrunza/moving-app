{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","views/auth/RegisterView/RegisterForm.js","views/auth/RegisterView/index.js"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","checkedIcon","_props$color","color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","SwitchBase","type","concat","capitalize","checked","disabled","fontSize","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","useStyles","makeStyles","RegisterForm","onSubmitSuccess","rest","dispatch","useDispatch","initialValues","firstName","lastName","email","password","policy","validationSchema","Yup","shape","max","required","min","oneOf","onSubmit","values","a","setErrors","setStatus","setSubmitting","register","success","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","TextField","error","Boolean","fullWidth","helperText","label","margin","onBlur","onChange","value","variant","Box","alignItems","display","mt","ml","Typography","Link","href","FormHelperText","Button","default","justifyContent","background","dark","height","minHeight","flexDirection","paddingTop","RegisterView","history","useHistory","Page","title","Container","maxWidth","mb","to","Logo","RouterLink","backButton","gutterBottom","push","my","Divider"],"mappings":"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","file":"static/js/14.66b857d5.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormHelperText,\n  TextField,\n  Typography,\n  Link,\n  makeStyles\n} from '@material-ui/core';\nimport { register } from 'src/actions/accountActions';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction RegisterForm({ className, onSubmitSuccess, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        policy: false\n      }}\n      validationSchema={Yup.object().shape({\n        firstName: Yup.string().max(255).required('First name is required'),\n        lastName: Yup.string().max(255).required('Last name is required'),\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        password: Yup.string().min(7).max(255).required('Password is required'),\n        policy: Yup.boolean().oneOf([true], 'This field must be checked')\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          await dispatch(register(values));\n          onSubmitSuccess();\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <TextField\n            error={Boolean(touched.firstName && errors.firstName)}\n            fullWidth\n            helperText={touched.firstName && errors.firstName}\n            label=\"First Name\"\n            margin=\"normal\"\n            name=\"firstName\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"firstName\"\n            value={values.firstName}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.lastName && errors.lastName)}\n            fullWidth\n            helperText={touched.lastName && errors.lastName}\n            label=\"Last Name\"\n            margin=\"normal\"\n            name=\"lastName\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"lastName\"\n            value={values.lastName}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <Box\n            alignItems=\"center\"\n            display=\"flex\"\n            mt={2}\n            ml={-1}\n          >\n            <Checkbox\n              checked={values.policy}\n              name=\"policy\"\n              onChange={handleChange}\n            />\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              I have read the\n              {' '}\n              <Link\n                component=\"a\"\n                href=\"#\"\n                color=\"secondary\"\n              >\n                Terms and Conditions\n              </Link>\n            </Typography>\n          </Box>\n          {Boolean(touched.policy && errors.policy) && (\n            <FormHelperText error>\n              {errors.policy}\n            </FormHelperText>\n          )}\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Create account\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nRegisterForm.propTypes = {\n  className: PropTypes.string,\n  onSubmitSuccess: PropTypes.func\n};\n\nRegisterForm.default = {\n  onSubmitSuccess: () => {}\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Container,\n  Divider,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Logo from 'src/components/Logo';\nimport RegisterForm from './RegisterForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'center',\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    minHeight: '100%',\n    flexDirection: 'column',\n    paddingBottom: 80,\n    paddingTop: 80\n  }\n}));\n\nfunction RegisterView() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleSubmitSuccess = () => {\n    history.push('/app/login');\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n      <Container maxWidth=\"sm\">\n        <Box\n          mb={5}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <RouterLink to=\"/\">\n            <Logo />\n          </RouterLink>\n          <Button\n            component={RouterLink}\n            to=\"/\"\n            className={classes.backButton}\n          >\n            Back to home\n          </Button>\n        </Box>\n        <Card>\n          <CardContent>\n            <Typography\n              gutterBottom\n              variant=\"h2\"\n              color=\"textPrimary\"\n            >\n              Sign up\n            </Typography>\n            <Typography variant=\"subtitle1\">\n              Sign up on the internal platform\n            </Typography>\n            <Box mt={3}>\n              <RegisterForm onSubmitSuccess={handleSubmitSuccess} />\n            </Box>\n            <Box my={2}>\n              <Divider />\n            </Box>\n            <Link\n              component={RouterLink}\n              to=\"/login\"\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Have an account?\n            </Link>\n          </CardContent>\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n\nexport default RegisterView;\n"],"sourceRoot":""}