{"version":3,"sources":["hooks/useIsMountedRef.js","views/pages/ClientLogin/ServicesNew.js","views/pages/ClientLogin/Header.js","views/pages/ClientLogin/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","paddingTop","paddingBottom","galleryContainer","imageStyle","borderRadius","padding","width","transition","transform","ServicesNew","images","className","rest","classes","useState","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","autoSize","gg","openLightbox","useCallback","event","photo","index","newImages","map","image","push","url","console","log","clsx","Container","maxWidth","Typography","variant","align","color","style","fontFamily","Box","mt","photos","onClick","direction","onClose","currentIndex","styles","views","x","srcset","src","ref","sizes","backgroundImage","backgroundSize","textAlign","breakpoints","down","header","textShadow","zIndex","subHeader","Header","Grid","container","justifyContent","item","display","flexDirection","height","overflow","ClientLogin","isMountedRef","setImages","getImages","axios","get","then","response","data","Page","title"],"mappings":"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","file":"static/js/57.81710c5f.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport Gallery from \"react-photo-gallery\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport {\n  Box,\n  Button,\n  Container,\n  Typography,\n  makeStyles,\n  Link\n} from '@material-ui/core';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    paddingTop: 100,\n    paddingBottom: 100,\n  },\n  galleryContainer: {\n    // '& > div': {\n    //   display: 'flex',\n    //   flexWrap: 'wrap',\n    //   justifyContent: 'space-around',\n    // },\n  },\n  imageStyle: {\n    borderRadius: '16px',\n    padding: '2px',\n    width: '40%',\n    transition: 'transform .2s',\n    '&:hover': {\n      transform: 'scale(1.05)',\n    }\n  }\n\n}));\n\nfunction ServicesNew({images, className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const [photo, setPhoto] = useState([])\n  const [gg, setGg] = useState({autoSize: true})\n\n  const textInput = useRef()\n\n  const openLightbox = useCallback((event, { photo, index }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  const getRandomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min) + min)\n  }\n\n  const onButtonClick = () => {\n    // `current` points to the mounted text input element\n    setGg(textInput.current);\n  };\n\n  const newImages = []\n  images.map(image => {\n      newImages.push({ \"src\" : image.photo.url, 'caption': image.image, 'width': 4,\n    'height': 4})\n    })\n    console.log(gg);\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Container maxWidth=\"lg\">\n        <Typography\n          variant=\"h1\"\n          align=\"center\"\n          color=\"textPrimary\"\n          style={{fontFamily: \"Maison Neue Bold\" }}\n        >\n          We make moving easy.\n        </Typography>\n        <Box mt={7}>\n        <Gallery photos={newImages} onClick={openLightbox} className={classes.imageStyle} direction={\"row\"}/>\n        <ModalGateway>\n          {viewerIsOpen ? (\n            <Modal onClose={closeLightbox}>\n              <Carousel\n                currentIndex={currentImage}\n                styles={classes.imageStyle}\n                views={newImages.map(x => ({\n                  ...x,\n                  srcset: x.src,\n                  ref: x.ref,\n                  sizes: x.sizes\n                }))}\n              />\n            </Modal>\n          ) : null}\n        </ModalGateway>\n        </Box>\n      </Container>\n    </div>\n  );\n}\n\nexport default ServicesNew\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Container,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundImage: 'linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url(https://meelheimsmoving.com/wp-content/uploads/2017/04/bigstock-Packed-household-goods-for-mov-131525006.jpg)',\n    backgroundSize: '100% 110%',\n    paddingTop: 200,\n    paddingBottom: 200,\n    textAlign: 'center',\n    [theme.breakpoints.down('sm')]: {\n      paddingTop: 80,\n      paddingBottom: 80,\n    }\n  },\n  header: {\n    color: '#fff',\n    textShadow: '2px 2px 5px #000',\n    zIndex: 1,\n  },\n  subHeader: {\n    color: '#fff',\n    textShadow: '2px 2px 5px #000',\n    zIndex: 1,\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          // spacing={3}\n          style={{justifyContent: 'center'}}\n        >\n          <Grid\n            item\n          >\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              height=\"100%\"\n            >\n              <Typography\n                variant=\"h1\"\n                className={classes.header}\n              >\n                Moving Services\n              </Typography>\n              <Box mt={3} className={classes.subHeader}>\n                <Typography\n                  variant=\"body1\"\n                >\n                  We treat your belongings with the utmost care\n                </Typography>\n              </Box>\n            </Box>\n          </Grid>\n\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport axios from 'axios';\nimport Page from 'src/components/Page';\nimport ServicesNew from './ServicesNew'\nimport Header from './Header'\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    overflow: 'hidden'\n  }\n}));\n\nfunction ClientLogin() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [images, setImages] = useState(null);\n\n  const getImages = useCallback(() => {\n    axios\n      .get('/api/v1/images.json')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setImages(response.data);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getImages();\n  }, [getImages]);\n\n  if (!images) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Our Work\"\n    >\n      <Header />\n      <ServicesNew images={images}/>\n\n    </Page>\n  );\n}\n\nexport default ClientLogin;\n"],"sourceRoot":""}