{"version":3,"sources":["hooks/useIsMountedRef.js","components/Label.js","components/GenericMoreButton.js","views/management/OrderListView/Header.js","views/management/OrderListView/BulkOperations.js","views/management/OrderListView/Results.js","views/management/OrderListView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","defaultProps","menu","width","maxWidth","memo","props","moreRef","useState","openMenu","setOpenMenu","title","onClick","ref","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","action","marginBottom","marginLeft","actionIcon","marginRight","Header","Grid","container","justify","item","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","Box","mt","Button","SvgIcon","actions","flexWrap","BulkOperations","onDelete","onMarkPaid","onMarkUnpaid","selected","Drawer","anchor","elevation","Hidden","smDown","md","length","xs","paymentStatusColors","canceled","pending","completed","rejected","Results","orders","selectedOrders","setSelectedOrders","page","setPage","limit","setLimit","paginatedOrders","slice","applyPagination","enableBulkOperations","selectedSomeOrders","selectedAllOrders","gutterBottom","Math","ceil","Card","CardHeader","GenericMoreButton","Divider","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","onChange","event","target","map","order","id","align","TableBody","isOrderSelected","includes","key","indexOf","orderId","prevSelected","filter","value","payment","moment","createdAt","format","customer","name","method","currency","total","status","IconButton","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","background","dark","minHeight","paddingTop","paddingBottom","OrderListView","isMountedRef","setOrders","getOrders","useCallback","axios","get","then","response","data","Page","Container"],"mappings":"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","file":"static/js/43.89c690e0.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  fade,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase',\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nfunction Label({\n  className,\n  color,\n  children,\n  style,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nLabel.defaultProps = {\n  className: '',\n  color: 'secondary'\n};\n\nexport default Label;\n","import React, {\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport AchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nfunction GenericMoreButton(props) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          {...props}\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <AchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Achive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nGenericMoreButton.propTypes = {\n  className: PropTypes.string\n};\n\nexport default memo(GenericMoreButton);\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  PlusCircle as PlusCircleIcon,\n  Download as DownloadIcon,\n  Upload as UploadIcon\n} from 'react-feather';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app/management\"\n            component={RouterLink}\n          >\n            Management\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Orders\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          All Orders\n        </Typography>\n        <Box mt={2}>\n          <Button className={classes.action}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.actionIcon}\n            >\n              <UploadIcon />\n            </SvgIcon>\n            Import\n          </Button>\n          <Button className={classes.action}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.actionIcon}\n            >\n              <DownloadIcon />\n            </SvgIcon>\n            Export\n          </Button>\n        </Box>\n      </Grid>\n      <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          className={classes.action}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <PlusCircleIcon />\n          </SvgIcon>\n          New order\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Button,\n  Drawer,\n  Grid,\n  Hidden,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Check as CheckIcon,\n  X as XIcon,\n  Trash as TrashIcon\n} from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  actions: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    '& > * + *': {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction BulkOperations({\n  className,\n  onDelete,\n  onMarkPaid,\n  onMarkUnpaid,\n  open,\n  selected,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      anchor=\"bottom\"\n      open={open}\n      PaperProps={{ elevation: 1 }}\n      variant=\"persistent\"\n    >\n      <div\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          spacing={2}\n        >\n          <Hidden smDown>\n            <Grid\n              item\n              md={3}\n            >\n              <Typography\n                color=\"textSecondary\"\n                variant=\"subtitle1\"\n              >\n                {selected.length}\n                {' '}\n                selected\n              </Typography>\n            </Grid>\n          </Hidden>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <div className={classes.actions}>\n              <Button onClick={onMarkPaid}>\n                <SvgIcon\n                  fontSize=\"small\"\n                  className={classes.actionIcon}\n                >\n                  <CheckIcon />\n                </SvgIcon>\n                Mark Paid\n              </Button>\n              <Button onClick={onMarkUnpaid}>\n                <SvgIcon\n                  fontSize=\"small\"\n                  className={classes.actionIcon}\n                >\n                  <XIcon />\n                </SvgIcon>\n                Mark Unpaid\n              </Button>\n              <Button onClick={onDelete}>\n                <SvgIcon\n                  fontSize=\"small\"\n                  className={classes.actionIcon}\n                >\n                  <TrashIcon />\n                </SvgIcon>\n                Delete\n              </Button>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    </Drawer>\n  );\n}\n\nBulkOperations.propTypes = {\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n  onMarkPaid: PropTypes.func,\n  onMarkUnpaid: PropTypes.func,\n  open: PropTypes.bool,\n  selected: PropTypes.array.isRequired\n};\n\nBulkOperations.defaultProps = {\n  className: '',\n  onDelete: () => {},\n  onMarkPaid: () => {},\n  onMarkUnpaid: () => {},\n  open: false\n};\n\nexport default BulkOperations;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Checkbox,\n  Divider,\n  IconButton,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon\n} from 'react-feather';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport BulkOperations from './BulkOperations';\n\nfunction applyPagination(orders, page, limit) {\n  return orders.slice(page * limit, page * limit + limit);\n}\n\nconst paymentStatusColors = {\n  canceled: 'error',\n  pending: 'warning',\n  completed: 'success',\n  rejected: 'error'\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Results({ className, orders, ...rest }) {\n  const classes = useStyles();\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n\n  const handleSelectAllOrders = (event) => {\n    setSelectedOrders(event.target.checked\n      ? orders.map((order) => order.id)\n      : []);\n  };\n\n  const handleSelectOneOrder = (event, orderId) => {\n    if (!selectedOrders.includes(orderId)) {\n      setSelectedOrders((prevSelected) => [...prevSelected, orderId]);\n    } else {\n      setSelectedOrders((prevSelected) => prevSelected.filter((id) => id !== orderId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const paginatedOrders = applyPagination(orders, page, limit);\n  const enableBulkOperations = selectedOrders.length > 0;\n  const selectedSomeOrders = selectedOrders.length > 0 && selectedOrders.length < orders.length;\n  const selectedAllOrders = selectedOrders.length === orders.length;\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length}\n        {' '}\n        Records found. Page\n        {' '}\n        {page + 1}\n        {' '}\n        of\n        {' '}\n        {Math.ceil(orders.length / limit)}\n      </Typography>\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"Orders\"\n        />\n        <Divider />\n        <PerfectScrollbar>\n          <Box minWidth={1150}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedAllOrders}\n                      indeterminate={selectedSomeOrders}\n                      onChange={handleSelectAllOrders}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    Ref\n                  </TableCell>\n                  <TableCell>\n                    Customer\n                  </TableCell>\n                  <TableCell>\n                    Method\n                  </TableCell>\n                  <TableCell>\n                    Total\n                  </TableCell>\n                  <TableCell>\n                    Status\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    Actions\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {paginatedOrders.map((order) => {\n                  const isOrderSelected = selectedOrders.includes(order.id);\n\n                  return (\n                    <TableRow\n                      key={order.id}\n                      selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isOrderSelected}\n                          onChange={(event) => handleSelectOneOrder(event, order.id)}\n                          value={isOrderSelected}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {order.payment.ref}\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          {moment(order.createdAt).format(\n                            'DD MMM YYYY | hh:mm'\n                          )}\n                        </Typography>\n                      </TableCell>\n\n                      <TableCell>{order.customer.name}</TableCell>\n                      <TableCell>{order.payment.method}</TableCell>\n                      <TableCell>\n                        {order.payment.currency}\n                        {order.payment.total}\n                      </TableCell>\n                      <TableCell>\n                        <Label color={paymentStatusColors[order.payment.status]}>\n                          {order.payment.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <IconButton>\n                          <SvgIcon fontSize=\"small\">\n                            <EditIcon />\n                          </SvgIcon>\n                        </IconButton>\n                        <IconButton\n                          component={RouterLink}\n                          to=\"/app/management/orders/1\"\n                        >\n                          <SvgIcon fontSize=\"small\">\n                            <ArrowRightIcon />\n                          </SvgIcon>\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </Box>\n        </PerfectScrollbar>\n        <TablePagination\n          component=\"div\"\n          count={orders.length}\n          onChangePage={handlePageChange}\n          onChangeRowsPerPage={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25]}\n        />\n      </Card>\n      <BulkOperations\n        open={enableBulkOperations}\n        selected={selectedOrders}\n      />\n    </div>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Results from './Results';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction OrderListView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [orders, setOrders] = useState(null);\n\n  const getOrders = useCallback(() => {\n    axios\n      .get('/api/management/orders')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setOrders(response.data.orders);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getOrders();\n  }, [getOrders]);\n\n  if (!orders) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Orders  List\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n        <Box mt={3}>\n          <Results orders={orders} />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default OrderListView;\n"],"sourceRoot":""}