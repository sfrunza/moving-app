{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","views/pages/AccountView/Header.js","views/pages/AccountView/General/ProfileDetails.js","views/pages/AccountView/General/GeneralSettings.js","views/pages/AccountView/General/index.js","views/pages/AccountView/Subscription.js","views/pages/AccountView/Notifications.js","views/pages/AccountView/Security.js","views/pages/AccountView/index.js"],"names":["createSvgIcon","React","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","other","_objectWithoutProperties","SwitchBase","_extends","type","root","clsx","concat","capitalize","checked","disabled","fontSize","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","name","CardActions","_props$disableSpacing","disableSpacing","className","spacing","display","alignItems","padding","marginLeft","useStyles","makeStyles","Header","rest","Breadcrumbs","separator","aria-label","Link","to","component","RouterLink","Typography","variant","marginTop","avatar","height","width","ProfileDetails","user","Card","CardContent","Box","flexDirection","textAlign","Avatar","src","gutterBottom","firstName","lastName","state","country","timezone","Button","fullWidth","stateOptions","GeneralSettings","dispatch","useDispatch","enqueueSnackbar","useSnackbar","enableReinitialize","initialValues","canHire","email","isPublic","phone","validationSchema","Yup","shape","max","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","updateProfile","success","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","CardHeader","title","Divider","Grid","container","item","md","xs","TextField","error","Boolean","helperText","label","onBlur","onChange","value","select","SelectProps","native","map","key","Switch","edge","mt","FormHelperText","p","justifyContent","General","useSelector","account","lg","xl","overview","flexWrap","breakpoints","down","productImage","marginRight","details","Subscription","isMountedRef","useIsMountedRef","useState","subscription","setSubscription","getSubscription","useCallback","axios","get","then","response","current","data","useEffect","Paper","currency","price","alt","proposalsLeft","templatesLeft","invitesLeft","adsLeft","hasAnalytics","hasEmailAlerts","Notifications","event","preventDefault","wait","wrap","sm","FormControlLabel","control","defaultChecked","Security","password","passwordConfirm","min","oneOf","background","dark","minHeight","paddingTop","paddingBottom","AccountView","currentTab","setCurrentTab","Page","Container","maxWidth","Tabs","scrollButtons","textColor","tabs","tab","Tab"],"mappings":"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","file":"static/js/36.630043cf.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Typography,\n  Breadcrumbs,\n  Link,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link color=\"inherit\" to=\"/app\" component={RouterLink}>\n          Dashboard\n        </Link>\n        <Typography color=\"textPrimary\">\n          Account\n        </Typography>\n      </Breadcrumbs>\n      <Typography\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Settings\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nfunction ProfileDetails({ user, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n          textAlign=\"center\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Typography\n            className={classes.name}\n            gutterBottom\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {`${user.firstName} ${user.lastName}`}\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body1\"\n          >\n            {`${user.state}, ${user.country}`}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            {user.timezone}\n          </Typography>\n        </Box>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"text\"\n        >\n          Remove picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nProfileDetails.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { updateProfile } from 'src/actions/accountActions';\n\nconst stateOptions = ['Alabama', 'New York', 'San Francisco'];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction GeneralSettings({ user, className, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{\n        canHire: user.canHire,\n        country: user.country,\n        email: user.email,\n        firstName: user.firstName,\n        isPublic: user.isPublic,\n        lastName: user.lastName,\n        phone: user.phone,\n        state: user.state,\n      }}\n      validationSchema={Yup.object().shape({\n        country: Yup.string().max(255).required('Country is required'),\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        firstName: Yup.string().max(255).required('First name is required'),\n        lastName: Yup.string().max(255).required('Last name is required')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          await dispatch(updateProfile(values));\n          resetForm();\n          setStatus({ success: true });\n          enqueueSnackbar('Profile updated', {\n            variant: 'success'\n          });\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n        } finally {\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <CardHeader title=\"Profile\" />\n            <Divider />\n            <CardContent>\n              <Grid\n                container\n                spacing={4}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.firstName && errors.firstName)}\n                    fullWidth\n                    helperText={touched.firstName && errors.firstName}\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"firstName\"\n                    value={values.firstName}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.lastName && errors.lastName)}\n                    fullWidth\n                    helperText={touched.lastName && errors.lastName}\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"lastName\"\n                    value={values.lastName}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email ? errors.email : 'We will use this email to contact you'}\n                    label=\"Email Address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.phone && errors.phone)}\n                    fullWidth\n                    helperText={touched.phone && errors.phone}\n                    label=\"Phone Number\"\n                    name=\"phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    fullWidth\n                    label=\"Select State\"\n                    name=\"state\"\n                    onChange={handleChange}\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.state}\n                    variant=\"outlined\"\n                  >\n                    {stateOptions.map((state) => (\n                      <option\n                        key={state}\n                        value={state}\n                      >\n                        {state}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.country && errors.country)}\n                    fullWidth\n                    helperText={touched.country && errors.country}\n                    label=\"Country\"\n                    name=\"country\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"country\"\n                    value={values.country}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                  >\n                    Make Contact Info Public\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    Means that anyone viewing your profile will be able to see your\n                    contacts details\n                  </Typography>\n                  <Switch\n                    checked={values.isPublic}\n                    edge=\"start\"\n                    name=\"isPublic\"\n                    onChange={handleChange}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                  >\n                    Available to hire\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    Toggling this will let your teammates know that you are available\n                    for acquiring new projects\n                  </Typography>\n                  <Switch\n                    checked={values.canHire}\n                    edge=\"start\"\n                    name=\"canHire\"\n                    onChange={handleChange}\n                  />\n                </Grid>\n              </Grid>\n              {errors.submit && (\n                <Box mt={3}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n            </CardContent>\n            <Divider />\n            <Box\n              p={2}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n            >\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Save Changes\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nGeneralSettings.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default GeneralSettings;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport ProfileDetails from './ProfileDetails';\nimport GeneralSettings from './GeneralSettings';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction General({ className, ...rest }) {\n  const classes = useStyles();\n  const { user } = useSelector((state) => state.account);\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <ProfileDetails user={user} />\n      </Grid>\n      <Grid\n        item\n        lg={8}\n        md={6}\n        xl={9}\n        xs={12}\n      >\n        <GeneralSettings user={user} />\n      </Grid>\n    </Grid>\n  );\n}\n\nGeneral.propTypes = {\n  className: PropTypes.string\n};\n\nexport default General;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Link,\n  Paper,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  overview: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column-reverse',\n      alignItems: 'flex-start'\n    }\n  },\n  productImage: {\n    marginRight: theme.spacing(1),\n    height: 48,\n    width: 48\n  },\n  details: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    }\n  }\n}));\n\nfunction Subscription({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [subscription, setSubscription] = useState(null);\n\n  const getSubscription = useCallback(() => {\n    axios\n      .get('/api/account/subscription')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setSubscription(response.data.subscription);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getSubscription();\n  }, [getSubscription]);\n\n  if (!subscription) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Manage your subscription\" />\n      <Divider />\n      <CardContent>\n        <Paper variant=\"outlined\">\n          <Box className={classes.overview}>\n            <div>\n              <Typography\n                display=\"inline\"\n                variant=\"h4\"\n                color=\"textPrimary\"\n              >\n                {subscription.currency}\n                {subscription.price}\n              </Typography>\n              <Typography\n                display=\"inline\"\n                variant=\"subtitle1\"\n              >\n                /mo\n              </Typography>\n            </div>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <img\n                alt=\"Product\"\n                className={classes.productImage}\n                src=\"/static/images/products/product_freelancer.svg\"\n              />\n              <Typography\n                variant=\"overline\"\n                color=\"textSecondary\"\n              >\n                {subscription.name}\n              </Typography>\n            </Box>\n          </Box>\n          <Divider />\n          <Box className={classes.details}>\n            <div>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.proposalsLeft} proposals left`}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.templatesLeft} templates`}\n              </Typography>\n            </div>\n            <div>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.invitesLeft} invites left`}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.adsLeft} ads left`}\n              </Typography>\n            </div>\n            <div>\n              {subscription.hasAnalytics && (\n                <Typography\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  Analytics dashboard\n                </Typography>\n              )}\n              {subscription.hasEmailAlerts && (\n                <Typography\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  Email alerts\n                </Typography>\n              )}\n            </div>\n          </Box>\n        </Paper>\n        <Box\n          mt={2}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n        >\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            Upgrade plan\n          </Button>\n        </Box>\n        <Box mt={2}>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            The refunds don&apos;t work once you have the subscription, but you can\n            always\n            {' '}\n            <Link\n              color=\"secondary\"\n              component={RouterLink}\n              to=\"#\"\n            >\n              Cancel your subscription\n            </Link>\n            .\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nSubscription.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Subscription;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport wait from 'src/utils/wait';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Notifications({ className, ...rest }) {\n  const classes = useStyles();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // Make API request\n    await wait(500);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Card\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <CardHeader title=\"Notifications\" />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                System\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Email alerts\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Push Notifications\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Text message\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label={(\n                    <>\n                      <Typography\n                        variant=\"body1\"\n                        color=\"textPrimary\"\n                      >\n                        Phone calls\n                      </Typography>\n                      <Typography variant=\"caption\">\n                        Short voice phone updating you\n                      </Typography>\n                    </>\n                  )}\n                />\n              </div>\n            </Grid>\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                Chat App\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Email\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Push notifications\"\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          p={2}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n        >\n          <Button\n            color=\"secondary\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Save Settings\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n}\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport wait from 'src/utils/wait';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Security({ className, ...rest }) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        password: '',\n        passwordConfirm: ''\n      }}\n      validationSchema={Yup.object().shape({\n        password: Yup.string()\n          .min(7, 'Must be at least 7 characters')\n          .max(255)\n          .required('Required'),\n        passwordConfirm: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Required')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // Make API request\n          await wait(500);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Password updated', {\n            variant: 'success'\n          });\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <CardHeader title=\"Change Password\" />\n            <Divider />\n            <CardContent>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={4}\n                  sm={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={4}\n                  sm={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\n                    fullWidth\n                    helperText={touched.passwordConfirm && errors.passwordConfirm}\n                    label=\"Password Confirmation\"\n                    name=\"passwordConfirm\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.passwordConfirm}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n              {errors.submit && (\n                <Box mt={3}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n            </CardContent>\n            <Divider />\n            <Box\n              p={2}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n            >\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Change Password\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nSecurity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Security;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tab,\n  Tabs,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport General from './General';\nimport Subscription from './Subscription';\nimport Notifications from './Notifications';\nimport Security from './Security';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction AccountView() {\n  const classes = useStyles();\n  const [currentTab, setCurrentTab] = useState('general');\n  const tabs = [\n    { value: 'general', label: 'General' },\n    { value: 'subscription', label: 'Subscription' },\n    { value: 'notifications', label: 'Notifications' },\n    { value: 'security', label: 'Security' }\n  ];\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            variant=\"scrollable\"\n            textColor=\"secondary\"\n            className={classes.tabs}\n          >\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.value}\n                label={tab.label}\n                value={tab.value}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box mt={3}>\n          {currentTab === 'general' && <General />}\n          {currentTab === 'subscription' && <Subscription />}\n          {currentTab === 'notifications' && <Notifications />}\n          {currentTab === 'security' && <Security />}\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default AccountView;\n"],"sourceRoot":""}