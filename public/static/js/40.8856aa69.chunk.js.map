{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","hooks/useIsMountedRef.js","../node_modules/@material-ui/icons/NavigateNext.js","utils/wait.js","views/management/CustomerEditView/CustomerEditForm.js","views/management/CustomerEditView/Header.js","views/management/CustomerEditView/index.js"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","createSvgIcon","d","theme","display","marginLeft","spacing","marginRight","backgroundColor","palette","grey","color","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","ButtonBase","focusRipple","MoreHorizIcon","Breadcrumbs","children","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","Typography","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","margin","listStyle","userSelect","useIsMountedRef","isMounted","useRef","useEffect","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","wait","time","Promise","res","setTimeout","useStyles","makeStyles","CustomerEditForm","customer","rest","enqueueSnackbar","useSnackbar","initialValues","address1","address2","country","discountedPrices","email","fullName","phone","state","verified","validationSchema","Yup","shape","max","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","success","variant","action","Button","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Grid","container","item","md","xs","TextField","error","Boolean","fullWidth","helperText","label","onBlur","onChange","Switch","checked","edge","Box","mt","type","disabled","Header","fontSize","aria-label","Link","to","RouterLink","background","dark","minHeight","paddingTop","CustomerEditView","isMountedRef","useState","setCustomer","getCustomer","useCallback","axios","get","then","response","data","Page","title","Container","maxWidth"],"mappings":"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","file":"static/js/40.8856aa69.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","export const wait = (time) => new Promise((res) => setTimeout(res, time));\n\nexport default wait;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport wait from 'src/utils/wait';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction CustomerEditForm({\n  className,\n  customer,\n  ...rest\n}) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        address1: customer.address1 || '',\n        address2: customer.address2 || '',\n        country: customer.country || '',\n        discountedPrices: customer.discountedPrices || false,\n        email: customer.email || '',\n        fullName: customer.fullName || '',\n        phone: customer.phone || '',\n        state: customer.state || '',\n        verified: customer.verified || false\n      }}\n      validationSchema={Yup.object().shape({\n        address1: Yup.string().max(255),\n        address2: Yup.string().max(255),\n        country: Yup.string().max(255),\n        discountedPrices: Yup.bool(),\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        fullName: Yup.string().max(255).required('Name is required'),\n        phone: Yup.string().max(15),\n        state: Yup.string().max(255),\n        verified: Yup.bool()\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // Make API request\n          await wait(500);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Customer updated', {\n            variant: 'success',\n            action: <Button>See all</Button>\n          });\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n\n          <Card>\n            <CardContent>\n\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.fullName && errors.fullName)}\n                    fullWidth\n                    helperText={touched.fullName && errors.fullName}\n                    label=\"Full name\"\n                    name=\"fullName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.fullName}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.phone && errors.phone)}\n                    fullWidth\n                    helperText={touched.phone && errors.phone}\n                    label=\"Phone number\"\n                    name=\"phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.state && errors.state)}\n                    fullWidth\n                    helperText={touched.state && errors.state}\n                    label=\"State/Region\"\n                    name=\"state\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.state}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.country && errors.country)}\n                    fullWidth\n                    helperText={touched.country && errors.country}\n                    label=\"Country\"\n                    name=\"country\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.country}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.address1 && errors.address1)}\n                    fullWidth\n                    helperText={touched.address1 && errors.address1}\n                    label=\"Address 1\"\n                    name=\"address1\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.address1}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.address2 && errors.address2)}\n                    fullWidth\n                    helperText={touched.address2 && errors.address2}\n                    label=\"Address 2\"\n                    name=\"address2\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.address2}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item />\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    variant=\"h5\"\n                    color=\"textPrimary\"\n                  >\n                    Email Verified\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    Disabling this will automatically send the user a verification\n                    email\n                  </Typography>\n                  <Switch\n                    checked={values.verified}\n                    color=\"secondary\"\n                    edge=\"start\"\n                    name=\"verified\"\n                    onChange={handleChange}\n                    value={values.verified}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    variant=\"h5\"\n                    color=\"textPrimary\"\n                  >\n                    Discounted Prices\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    This will give the user discountedprices for all products\n                  </Typography>\n                  <Switch\n                    checked={values.discountedPrices}\n                    color=\"secondary\"\n                    edge=\"start\"\n                    name=\"discountedPrices\"\n                    onChange={handleChange}\n                    value={values.discountedPrices}\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Update Customer\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nCustomerEditForm.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default CustomerEditForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/app\"\n          component={RouterLink}\n        >\n          Dashboard\n        </Link>\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/app/management\"\n          component={RouterLink}\n        >\n          Management\n        </Link>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n        >\n          Customers\n        </Typography>\n      </Breadcrumbs>\n      <Typography\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Edit Customer\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport CustomerEditForm from './CustomerEditForm';\nimport Header from './Header';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction CustomerEditView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [customer, setCustomer] = useState();\n\n  const getCustomer = useCallback(() => {\n    axios\n      .get('/api/management/customers/1')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setCustomer(response.data.customer);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getCustomer();\n  }, [getCustomer]);\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customer Edit\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <CustomerEditForm customer={customer} />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default CustomerEditView;\n"],"sourceRoot":""}