{"version":3,"sources":["views/pages/BookView/BookNew/ReviewMove2.js","views/pages/BookView/BookNew/MovingForm.js","views/pages/BookView/BookNew/CustomerForm.js","views/pages/BookView/BookNew/index.js"],"names":["useStyles","makeStyles","theme","root","cell","borderBottom","boxItem","padding","name","fontWeight","ResultNew","className","onBack","onSubmit","formState","setFormState","jobType","typeFrom","typeTo","movingSize","origin","destination","classes","useState","crewSize","setCrewSize","travelTime","setTravelTime","google","window","setDistance","setAddresses","timeBetweenPionts","setTimeBetweenPionts","minutes","setMinutes","quote","setQuote","rate","times","estimate","useEffect","apartment","fromFloor","toFloor","apt","etaj","arr","nr","i","length","j","k","push","handleResult","console","log","maps","DirectionsService","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","time","Math","round","routes","legs","duration","value","distance","text","DistanceMatrixService","getDistanceMatrix","origins","destinations","unitSystem","UnitSystem","IMPERIAL","avoidHighways","avoidTolls","response","alert","timeTo","timeFrom","results","rows","elements","destinationAddresses","hours","rhours","floor","lowQuote","highQuote","values","job","travel_time","crew_size","job_rate","estimated_time","estimated_quote","quoteFunction","clsx","Box","mt","mb","display","flexDirection","user","first_name","last_name","email","phoneNumberString","match","replace","formatPhoneNumber","phone","Table","TableBody","TableRow","TableCell","style","pick_up_date","delivery_date","Button","address","component","ml","apt_number","job_type","job_size","color","deepPurple","fontSize","fontStyle","size","variant","onClick","scrollTo","flexGrow","movingTypeOptions","key","movingSizeOptions","houseTypeOptions","disabled","addTab","marginLeft","spacing","datePicker","editor","height","flexConatiner","justifyContent","breakpoints","down","flexItem","flex","flexItemFirst","flexItemSecond","itemsContainerApt","itemsContainerType","addressContainer","typeContainer","itemsContainer","backgroundColor","marginTop","dateMtop","icon","position","top","clearBrush","width","MovingForm","onNext","rest","houseTypeOptionsSelect","map","item","index","MenuItem","handleAddressChange","form","search","setFieldValue","renderPlacesAutocomplete","field","noOrigin","bgColor","onChange","getInputProps","getSuggestionItemProps","suggestions","autocompleteInputProps","TextField","label","placeholder","error","getIn","errors","touched","suggestion","active","cursor","alignItems","formattedSuggestion","mainText","secondaryText","float","src","renderDestinationAutocomplete","noDestination","SelectDate","other","touch","DatePicker","autoOk","disableToolbar","required","inputVariant","format","date","moment","maxDate","Date","setMonth","getMonth","disablePast","validateDate","validateAddress","initialValues","job_status","user_id","job_id","validationSchema","Yup","shape","validateOnChange","a","setErrors","setStatus","setSubmitting","err","submit","message","success","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldTouched","setFieldError","resetForm","backgroundColorDestination","backgroundColorOrigin","Object","assign","Typography","FormControl","InputLabel","Select","id","validate","defaultValue","marginRight","textTransform","type","tag","CustomerForm","customer","additional_info","min","max","matches","password","password_confirmation","fullWidth","onBlur","helperText","multiline","steps","TruckIcon","UserIcon","ClipboardIcon","useCustomStepIconStyles","withStyles","horizontal","margin","line","borderColor","palette","divider","borderBottomStyle","borderBottomWidth","StepConnector","secondary","main","boxShadow","shadows","completed","CustomStepIcon","Icon","Avatar","backgroundImage","backgroundSize","minHeight","paddingMobile","marginBottom","avatar","colors","red","alignContent","maxWidth","borderRadius","stepper","ProjectCreateView","useIsMountedRef","activeStep","setActiveStep","setCompleted","isMovingDetailsValid","isCustomerDetailsValid","React","handleNext","prevActiveStep","handleBack","Page","title","Container","Card","CardContent","mx","align","Alert","severity","RouterLink","to","Paper","Grid","container","xs","md","Stepper","orientation","bgcolor","step","Step","StepLabel","StepIconComponent","p","ReviewMove2","axios","post","withCredentials","then","userId","data","jobId","catch"],"mappings":"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","file":"static/js/28.85e0b574.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport {\n  Container,\n  Typography,\n  makeStyles,\n  Grid,\n  Paper,\n  Divider,\n  Button,\n  Box,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n} from '@material-ui/core';\nimport { deepPurple, amber, deepOrange } from '@material-ui/core/colors'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  cell: {\n    borderBottom: 'none'\n  },\n  boxItem: {\n    padding: '3px 15px'\n  },\n  name: {\n    fontWeight: 600,\n  }\n}));\n\nfunction ResultNew({ className, onBack, onSubmit, formState, setFormState, jobType, typeFrom, typeTo, movingSize, origin, destination, }) {\n  const classes = useStyles();\n  const [crewSize, setCrewSize] = useState(0)\n  const [travelTime, setTravelTime] = useState([])\n  const officeHome = \"02446\";\n  const google = window.google = window.google ? window.google : {}\n  const [distance, setDistance] = useState()\n  const [addresses, setAddresses] = useState([])\n  const [timeBetweenPionts, setTimeBetweenPionts] = useState(0)\n  const [minutes, setMinutes] = useState('')\n  const [quote, setQuote] = useState('')\n  const rate = {\n    '2': 90,\n    '3': 120,\n    '4': 160,\n  }\n  let estimate = 60\n  let times = {}\n\n\n  if(jobType === \"Moving\" || jobType === \"Moving with Storage\") {\n    times = {\n      'Room or less (partial move)': estimate,\n      'Studio apartment': estimate * 2,\n      '1 Bedroom apartment': estimate * 3,\n      '2 Bedroom apartment': estimate * 4,\n      '2 Bedroom House/Townhouse': estimate * 5,\n      '3+ Bedroom apartment': estimate * 6,\n      '3 Bedroom House/Townhouse': estimate * 7,\n      '4+ Bedroom House/Townhouse': estimate * 10,\n      'Office / Commercial space': estimate * 5,\n    }\n  } else {\n    times = {\n      'Room or less (partial move)': estimate / 2,\n      'Studio apartment': (estimate * 2) / 2,\n      '1 Bedroom apartment': (estimate * 3) / 2,\n      '2 Bedroom apartment': (estimate * 4) / 2,\n      '2 Bedroom House/Townhouse': (estimate * 5) / 2,\n      '3+ Bedroom apartment': (estimate *6) / 2,\n      '3 Bedroom House/Townhouse': (estimate * 7) / 2,\n      '4+ Bedroom House/Townhouse': (estimate * 10) / 2,\n      'Office / Commercial space': (estimate * 5) / 2,\n    }\n  }\n\n  const formatPhoneNumber = (phoneNumberString) => {\n    let cleaned = ('' + phoneNumberString).replace(/\\D/g, '')\n    let match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\n    if (match) {\n      return '(' + match[1] + ') ' + match[2] + '-' + match[3]\n    }\n    return null\n  }\n\n  const handleResult = (apartment, fromFloor, toFloor) => {\n    let apt = ['Room or less (partial move)', 'Studio apartment', '1 Bedroom apartment', '2 Bedroom apartment', '2 Bedroom House/Townhouse', '3+ Bedroom apartment', '3 Bedroom House/Townhouse', '4+ Bedroom House/Townhouse', 'Office / Commercial space']\n    let etaj = ['elevator building', '1st/Ground floor', '2nd floor', 'private house', 'storage unit', '3rd floor', '4th floor']\n\n    let arr = []\n    let nr = 2;\n    for (let i=0; i<apt.length; i++) {\n\n      if(apt[i]===apartment) {\n\n        for (let j=0; j<etaj.length; j++) {\n          if(etaj[j] === fromFloor) {\n            for (let k=0; k<etaj.length; k++) {\n                arr.push([apt[i], etaj[j], etaj[k]])\n                if (i >= 3 && (k > 4 || j > 4)) nr = 4;\n                if ((i >= 1 && i < 4) && (k <= 5 || j <= 5)) nr = 3;\n                if (i < 3 && (k < 5 || j < 5)) nr = 2;\n                if (i > 4) nr = 4;\n                arr[apartment, fromFloor, toFloor] = nr\n            }\n          }\n        }\n      }\n    }\n    return arr[apartment, fromFloor, toFloor]\n  }\n\n  useEffect(()=> {\n    setCrewSize(handleResult(movingSize, typeFrom, typeTo));\n    console.log('crewSize effect');\n    return () => {\n        setCrewSize(0)\n    }\n  },[movingSize, typeFrom, typeTo])\n\n  const DirectionsService = () => {\n    const DirServ = new google.maps.DirectionsService();\n      DirServ.route({\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING,\n      }, (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          let time = Math.round((result.routes[0].legs[0].duration.value / 60) / 10) * 10\n          setDistance(result.routes[0].legs[0].distance.text)\n          setTimeBetweenPionts(time)\n          return null\n        }\n    });\n    return null\n  }\n\n  useEffect(()=> {\n    DirectionsService();\n    console.log('timebetween effect');\n    return () => {\n        setTimeBetweenPionts(0)\n    }\n  },[origin, destination])\n\n  const findTravelTime = () => {\n    const TravelTime = new google.maps.DistanceMatrixService();\n    TravelTime.getDistanceMatrix({\n      origins: [officeHome],\n      destinations: [origin, destination],\n      travelMode: 'DRIVING',\n      unitSystem: google.maps.UnitSystem.IMPERIAL,\n      avoidHighways: false,\n      avoidTolls: false\n    }, function(response, status) {\n      if (status !== 'OK') {\n        alert('Error was: ' + status);\n      } else {\n        let timeTo = ''\n        let timeFrom = ''\n        let results = response.rows[0].elements;\n        setAddresses(response.destinationAddresses)\n\n        if(response.rows[0].elements[0].status !== \"ZERO_RESULTS\" && response.rows[0].elements[1].status !== \"ZERO_RESULTS\"){\n          if(results[0].distance.value < 20000 ){\n            timeTo = 20\n          } else {\n            timeTo = Math.round((results[0].duration.value / 60) / 10) * 10 ;\n          }\n          if(results[1].distance.value < 20000 ){\n            timeFrom = 20\n          } else {\n              timeFrom = Math.round((results[1].duration.value / 60) / 10) * 10;\n          }\n          setTravelTime([timeTo, timeFrom])\n          return null\n        }\n      }\n    });\n  }\n\n  useEffect(()=> {\n    findTravelTime()\n    console.log('traveltime effect');\n    return () => {\n        setAddresses([])\n    }\n  },[origin, destination])\n\n  const quoteFunction = () => {\n    let totalMinutes = travelTime[0] + travelTime[1] + timeBetweenPionts + times[movingSize]\n    let hours = (totalMinutes / 60);\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours) * 60;\n    let rminutes = Math.round(minutes);\n    if(rminutes > 30) {\n      rhours +=1\n    }\n    let lowQuote = rhours * rate[crewSize]\n    let highQuote = 0;\n    if(jobType === \"Moving\" || jobType === \"Moving with Storage\") {\n      setMinutes(`${rhours} - ${rhours+2}`);\n      highQuote = (rhours + 2) * rate[crewSize]\n    }\n    else {\n      setMinutes(`${rhours} - ${rhours+1}`);\n      highQuote = (rhours + 1) * rate[crewSize]\n    }\n    setQuote(`$${lowQuote} - $${highQuote}`)\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        job: {\n            ...formState.values.job,\n          travel_time: `${travelTime[0]} / ${travelTime[1]}`,\n          crew_size: crewSize,\n          job_rate: rate[crewSize],\n          estimated_time: `${rhours} - ${rhours+2}`,\n          estimated_quote: `$${lowQuote} - $${highQuote}`,\n\n        }\n      }\n    }))\n  }\n\n  useEffect(()=> {\n    quoteFunction()\n  },[travelTime])\n\n  return (\n    <div className={clsx(classes.root, className)}>\n      <Box\n        mt={3}\n        mb={3}\n        display=\"flex\"\n        flexDirection='column'\n      >\n        <Box className={clsx(classes.boxItem, classes.name)}>\n          {formState.values.user.first_name + \" \" + formState.values.user.last_name}\n        </Box>\n        <Box className={classes.boxItem}>\n          {formState.values.user.email}\n        </Box>\n        <Box className={classes.boxItem}>\n          {formatPhoneNumber(formState.values.user.phone)}\n        </Box>\n      </Box>\n\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>Moving Date: </TableCell>\n            <TableCell style={{fontWeight: 'bold'}} >\n              {formState.values.job.pick_up_date}\n            </TableCell>\n          </TableRow>\n          {\n            (formState.values.job.delivery_date === null )\n            ?\n            null\n            :\n              <TableRow>\n                <TableCell>Delivery Date: </TableCell>\n                <TableCell style={{fontWeight: 'bold'}}>\n                  {formState.values.job.delivery_date}\n                </TableCell>\n              </TableRow>\n          }\n          <TableRow>\n            <TableCell className={classes.cell}>Moving From: </TableCell>\n            <TableCell className={classes.cell}>\n              <Box>\n                <Button\n                  style={{padding: '3px'}}\n                >\n                  {formState.values.origin.address}\n                </Button>\n              </Box>\n              <Box component=\"div\" display=\"inline\" style={{fontWeight: 'bold'}}>*{formState.values.origin.floor}</Box>\n              <Box component=\"div\" display=\"inline\" ml={2}>Apt#{(formState.values.origin.apt_number === \"\") ? ' unknown' : \" \"+formState.values.origin.apt_number}</Box>\n            </TableCell>\n          </TableRow>\n          <TableRow >\n            <TableCell>Moving To:</TableCell>\n            <TableCell>\n              <Box>\n                <Button\n                  style={{padding: '3px'}}\n                >\n                  {formState.values.destination.address}\n                </Button>\n              </Box>\n              <Box component=\"div\" display=\"inline\" style={{fontWeight: 'bold'}}>*{formState.values.destination.floor}</Box>\n              <Box component=\"div\" display=\"inline\" ml={2}>Apt#{(formState.values.destination.apt_number === \"\") ? ' unknown' : \" \"+formState.values.destination.apt_number}</Box>\n            </TableCell>\n          </TableRow>\n\n          <TableRow >\n            <TableCell className={classes.cell}>Moving Type:</TableCell>\n            <TableCell className={classes.cell}>\n              {formState.values.job.job_type}\n            </TableCell>\n          </TableRow>\n          <TableRow >\n            <TableCell>Moving Size:</TableCell>\n            <TableCell style={{fontWeight: 600}}>\n              {formState.values.job.job_size}\n            </TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell className={classes.cell} >Crew:</TableCell>\n            <TableCell className={classes.cell} style={{fontWeight: 600}}>\n              {crewSize} Movers\n            </TableCell>\n          </TableRow>\n\n          <TableRow >\n            <TableCell className={classes.cell}>Rate:</TableCell>\n            <TableCell className={classes.cell} style={{color: deepPurple['A200'], fontSize: '18px', fontWeight: 'bold'}}>\n              <label >$ {rate[crewSize]}</label> / hr <label style={{color: 'grey', fontSize: '12px', fontStyle: 'italic', fontWeight: 'normal'}}> - billed in 15 minutes increment</label>\n            </TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell className={classes.cell} >Estimated Time:</TableCell>\n            <TableCell className={classes.cell} style={{color: '#FD7013', fontSize: '18px', fontWeight: 'bold'}}>\n              <label>{minutes}</label> hours*\n            </TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell className={classes.cell} >Travel Time:</TableCell>\n            <TableCell className={classes.cell}className={classes.cell}>\n              <label>{`${travelTime[0]}min/${travelTime[1]}min`}{\" \"}(from/to HQ)</label>\n            </TableCell>\n          </TableRow>\n\n          <TableRow >\n            <TableCell className={classes.cell} >Estimated Quote:</TableCell>\n            <TableCell className={classes.cell} style={{fontWeight: 600, fontSize: '18px', color: '#FD7013'}}>\n              <label>{quote}</label>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n\n      <Box\n        mt={3}\n        display=\"flex\"\n      >\n        {onBack && (\n          <Button\n            size=\"large\"\n            variant=\"outlined\"\n            onClick={() => {\n              window.scrollTo(0, 0);\n              onBack()\n            }}\n          >\n            Previous\n          </Button>\n        )}\n        <Box flexGrow={1} />\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          size=\"large\"\n          onClick={() => {\n            window.scrollTo(0, 0);\n            onSubmit()\n          }}\n        >\n          Sumbit\n        </Button>\n      </Box>\n\n    </div>\n  );\n}\n\nexport default ResultNew;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik, Field, getIn } from 'formik';\nimport moment from 'moment';\nimport wait from 'src/utils/wait';\nimport {\n  Box,\n  Button,\n  TextField,\n  Typography,\n  makeStyles,\n  MenuItem,\n  FormControl,\n  Select,\n  InputLabel\n} from '@material-ui/core';\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport BrushRoundedIcon from '@material-ui/icons/BrushRounded';\n\nconst movingTypeOptions = [\n  { key: '6', text: 'Moving', value: 'Moving' },\n  { key: '1', text: 'Moving with Storage', value: 'Moving with Storage' },\n  { key: '2', text: 'Loading Help', value: 'Loading Help' },\n  { key: '3', text: 'Unloading Help', value: 'Unloading Help' },\n  { key: '4', text: 'Packing Only', value: 'Packing Only' },\n  { key: '5', text: 'Inside Move', value: 'Inside Move' },\n]\nconst movingSizeOptions = [\n  { key: 'room', text: 'One Room or less (<1000 lbs)', value: 'Room or less (partial move)' },\n  { key: 'studio', text: 'Studio Apt.', value: 'Studio apartment' },\n  { key: 'onebed', text: '1 Bedroom Apt.', value: '1 Bedroom apartment' },\n  { key: 'twobed', text: '2 Bedroom Apt.', value: '2 Bedroom apartment' },\n  { key: 'threebed', text: '3+ Bedroom Apt.', value: '3+ Bedroom apartment' },\n  { key: 'twohouse', text: '2 Bedroom House/Townhouse', value: '2 Bedroom House/Townhouse' },\n  { key: 'threehouse', text: '3 Bedroom House/Townhouse', value: '3 Bedroom House/Townhouse' },\n  { key: 'fourhouse', text: '4+ Bedroom House/Townhouse', value: '4+ Bedroom House/Townhouse' },\n  { key: 'commercial', text: 'Office / Commercial Moving', value: 'Office / Commercial space' },\n]\nconst houseTypeOptions = [\n  { key: 'elv', text: 'Elevator Bldg.', value: 'elevator building' },\n  { key: 'grfloor', text: 'No Stairs - Ground Floor', value: '1st/Ground floor' },\n  { key: '2floor', text: 'Stairs - 2nd Floor', value: '2nd floor' },\n  { key: '3floor', text: 'Stairs - 3rd Floor', value: '3rd floor' },\n  { key: '4floor', text: 'Stairs - 4th Floor', value: '4th floor' },\n  { key: '5floor', text: 'Stairs 5th or Higher - N/A', value: 'Stairs 5th or Higher - N/A', disabled: true },\n  { key: 'private', text: 'Private House', value: 'private house' },\n  { key: 'storage', text: 'Storage Unit', value: 'storage unit' },\n]\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  addTab: {\n    marginLeft: theme.spacing(2)\n  },\n  datePicker: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  editor: {\n    '& .ql-editor': {\n      height: 200\n    }\n  },\n  flexConatiner: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column'\n    },\n  },\n  flexItem: {\n    flex: '0 0 47%'\n  },\n  flexItemFirst: {\n    flex: '0 0 65%',\n    [theme.breakpoints.down('xs')]: {\n      flex: '0 0 100%'\n    },\n  },\n  flexItemSecond: {\n    flex: '0 0 33%',\n  },\n  itemsContainerApt: {\n    flex: '0 0 30%',\n    [theme.breakpoints.down('xs')]: {\n      flex: '0 0 27%'\n    }\n  },\n  itemsContainerType: {\n    flex: '0 0 65%',\n    [theme.breakpoints.down('xs')]: {\n      flex: '0 0 70%'\n    }\n  },\n  addressContainer: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  typeContainer: {\n    flex: '0 0 48%',\n    justifyContent: 'space-evenly',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  itemsContainer: {\n    justifyContent: 'space-between',\n    display: 'flex',\n  },\n  disabled: {\n    backgroundColor: '#efefef',\n  },\n  destination: {\n    [theme.breakpoints.down('xs')]: {\n      marginTop: '32px'\n    },\n  },\n  dateMtop: {\n    [theme.breakpoints.down('xs')]: {\n      marginTop: '32px'\n    },\n  },\n  icon: {\n    position: 'relative',\n    top: '3px'\n  },\n  clearBrush: {\n    width: 16,\n    height: 16,\n  }\n}));\n\nfunction MovingForm({\n  className,\n  onNext,\n  formState,\n  setFormState,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  const movingSizeOptionsSelect = () => {\n    let moveSize = movingSizeOptions.map((item, index) => {\n        return (\n            <MenuItem key={item.key} value={item.value}>{item.text}</MenuItem>\n        )\n    })\n    return moveSize\n  }\n\n  const movingTypeOptionsSelect = () => {\n    let moveType = movingTypeOptions.map((item, index) => {\n        return (\n            <MenuItem key={item.key} value={item.value}>{item.text}</MenuItem>\n        )\n    })\n    return moveType\n  }\n\n  const houseTypeOptionsSelect = () => {\n    let houseType = houseTypeOptions.map((item, index) => {\n        if(item.value === \"Stairs 5th or Higher - N/A\"){\n          return (\n              <MenuItem key={item.key} value={item.value} disabled>{item.text}</MenuItem>\n          )\n        } else {\n          return (\n              <MenuItem key={item.key} value={item.value}>{item.text}</MenuItem>\n          )\n        }\n    })\n    return houseType\n  }\n\n\n  const handleAddressChange = ({ name, form, search }) => {\n   form.setFieldValue(name, search);\n  }\n\n  const renderPlacesAutocomplete = ({ field, form }) => {\n\n    const name = field.name\n    let noOrigin = false;\n    let bgColor = '#fff';\n\n    if(form.values.job.job_type === \"Loading Help\" || form.values.job.job_type === \"Packing Only\" || form.values.job.job_type === \"Inside Move\" || form.values.job.job_type === \"Moving\" || form.values.job.job_type === \"Moving with Storage\"){\n      noOrigin = false\n    } else {\n      noOrigin = true;\n      bgColor = \"#efefef\";\n    }\n\n      return (\n\n        <PlacesAutocomplete\n          value={field.value}\n          onChange={search => {\n            handleAddressChange({ name: field.name, form, search });\n          }}\n        >\n          {({ getInputProps, getSuggestionItemProps, suggestions }) => {\n            const additionalProps = {\n              name: field.name,\n              className: 'form-input__field',\n            };\n            const text = () => { return(<span>powered by </span>)}\n            const icon = () => { return(<img src=\"https://cdn.worldvectorlogo.com/logos/google-2015.svg\" style={{width: '17%', marginLeft: '5px'}}/>)}\n\n            const autocompleteInputProps = getInputProps(additionalProps);\n            return (\n\n              <div className=\"autocomplete-root\">\n                  <TextField\n                    {...autocompleteInputProps}\n                    label=\"Origin Address *\"\n                    variant=\"outlined\"\n                    placeholder=\"Type Full Address\"\n                    style={{width: '100%', backgroundColor: bgColor}}\n                    error={getIn(form.errors, name) && getIn(form.touched, name)\n                      ? true\n                      : false}\n                    disabled={noOrigin}\n                  />\n                  <div className=\"autocomplete-dropdown-container\">\n                    {suggestions.map((suggestion, i) => {\n                       const style = {\n                        backgroundColor: suggestion.active ? '#e0e0e0' : '#fff',\n                        cursor: 'pointer',\n                        padding: '10px',\n                        fontSize: '14px',\n                        borderBottom: '1px solid #b7b7b7',\n                        alignItems: 'center',\n                        display: 'flex'\n                      }\n                      return (\n                          <div {...getSuggestionItemProps(suggestion, { style })} key={i}>\n                            <LocationOnIcon className={classes.icon} key={i}/><span >{suggestion.formattedSuggestion.mainText}</span>,{\" \"}{suggestion.formattedSuggestion.secondaryText}\n                          </div>\n\n                      )\n                    })}\n                  </div>\n                  {\n                    suggestions.length != 0 ?<div style={{display: 'flex', alignItems: 'center', float: 'right', justifyContent: 'flex-end', marginTop: '5px'}}>{text()} {icon()}</div> : null\n                  }\n              </div>\n            );\n          }}\n        </PlacesAutocomplete>\n\n      );\n  }\n\n  const renderDestinationAutocomplete = ({ field, form }) => {\n\n    const name = field.name\n    let noDestination = false;\n    let bgColor = '#fff'\n\n    if(form.values.job.job_type === \"Unloading Help\" || form.values.job.job_type === \"Moving\" || form.values.job.job_type === \"Moving with Storage\"){\n      noDestination = false\n    } else {\n      noDestination = true\n      bgColor = '#efefef'\n    }\n\n      return (\n\n        <PlacesAutocomplete\n          value={field.value}\n          onChange={search => {\n            handleAddressChange({ name: field.name, form, search });\n          }}\n        >\n          {({ getInputProps, getSuggestionItemProps, suggestions }) => {\n            const additionalProps = {\n              name: field.name,\n              className: 'form-input__field',\n            };\n\n            const text = () => { return(<span>powered by </span>)}\n            const icon = () => { return(<img src=\"https://cdn.worldvectorlogo.com/logos/google-2015.svg\" style={{width: '17%', marginLeft: '5px'}}/>)}\n\n            const autocompleteInputProps = getInputProps(additionalProps);\n            return (\n\n              <div className=\"autocomplete-root\">\n                  <TextField\n                    {...autocompleteInputProps}\n                    label=\"Destination Address *\"\n                    variant=\"outlined\"\n                    placeholder=\"Type Full Address\"\n                    style={{width: '100%', backgroundColor: bgColor}}\n                    error={getIn(form.errors, name) && getIn(form.touched, name)\n                      ? true\n                      : false}\n                    disabled={noDestination}\n                  />\n                  <div className=\"autocomplete-dropdown-container\">\n                    {suggestions.map((suggestion, i) => {\n                       const style = {\n                        backgroundColor: suggestion.active ? '#e0e0e0' : '#fff',\n                        cursor: 'pointer',\n                        padding: '10px',\n                        fontSize: '14px',\n                        borderBottom: '1px solid #b7b7b7',\n                        alignItems: 'center',\n                        display: 'flex',\n                      }\n                      return (\n                        <div {...getSuggestionItemProps(suggestion, { style })} key={i}>\n                          <LocationOnIcon className={classes.icon} key={i}/><span>{suggestion.formattedSuggestion.mainText}</span>,{\" \"}{suggestion.formattedSuggestion.secondaryText}\n                        </div>\n                      )\n                    })}\n                  </div>\n                  {\n                    suggestions.length != 0 ?<div style={{display: 'flex', alignItems: 'center', float: 'right', justifyContent: 'flex-end', marginTop: '5px'}}>{text()} {icon()}</div> : null\n                  }\n              </div>\n            );\n          }}\n        </PlacesAutocomplete>\n\n      );\n  }\n\n  const SelectDate = ({ field, form, ...other}) => {\n    let touch = form.touched;\n    let error = form.errors;\n    let name = field.name\n    let label = '';\n    if (name === \"job.pick_up_date\") {\n      label = 'Move Date'\n    } else {\n      label = 'Delivery Date'\n    }\n\n    return (\n      <DatePicker\n        autoOk\n        disableToolbar\n        required\n        variant=\"inline\"\n        inputVariant=\"outlined\"\n        label={label}\n        format=\"MMM DD YYYY\"\n        error={getIn(error, name) && getIn(touch, name)}\n        onChange={date => form.setFieldValue(field.name, moment(date).format('MM/DD/YYYY'), true)}\n        {...other}\n        maxDate={new Date().setMonth(new Date().getMonth()+3)}\n        disablePast\n        style={{width: '100%'}}\n      />\n\n    );\n  };\n\n  function validateDate(value) {\n    let error;\n    if (value === 'Invalid date' || value === null) {\n      error = 'Required';\n    }\n    return error;\n  }\n  function validateAddress(value) {\n    let error;\n    if (value === '') {\n      error = 'Required';\n    }\n    return error;\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        job: !formState.values.job ? {\n          job_size: '',\n          pick_up_date: null,\n          delivery_date: null,\n          job_type: 'Moving',\n          job_status: 'Needs Attention',\n          user_id: null,\n        } : formState.values.job,\n        origin: !formState.values.origin ? {\n          address: '',\n          floor: '',\n          apt_number: '',\n          job_id: null,\n        } : formState.values.origin,\n        destination: !formState.values.destination ? {\n          address: '',\n          floor: '',\n          apt_number: '',\n          job_id: null,\n        } : formState.values.destination,\n      }}\n      validationSchema={Yup.object().shape({\n\n        job: Yup.object().shape({\n          job_size: Yup.string().required('Required'),\n          job_type: Yup.string().required('Required'),\n\n        }),\n        origin: Yup.object().shape({\n          floor: Yup.string().required('Required'),\n          address: Yup.string().required('Required')\n\n        }),\n        destination: Yup.object().shape({\n          floor: Yup.string().required('Required'),\n          address: Yup.string().required('Required')\n        })\n      })}\n      validateOnChange={true}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n\n          setFormState({\n            ...formState,\n            values: {\n              ...formState.values,\n              job: values.job,\n              origin: values.origin,\n              destination: values.destination\n            }\n          })\n\n          // await wait(1000);\n          window.scrollTo(0, 0);\n          onNext();\n\n\n        } catch (err) {\n          setErrors({ submit: err.message });\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        setFieldTouched,\n        setFieldError,\n        touched,\n        resetForm,\n        values,\n      }) => {\n        let noOrigin = false;\n        let noDestination = false;\n        let backgroundColorDestination = '#fff'\n        let backgroundColorOrigin = '#fff'\n\n        if(values.job.job_type === \"Loading Help\" || values.job.job_type === \"Packing Only\" || values.job.job_type === \"Inside Move\"){\n          noDestination = true;\n          backgroundColorDestination = \"#efefef\";\n          values.destination = Object.assign(values.destination, values.origin);\n          delete errors.destination\n        }\n        if(values.job.job_type === \"Unloading Help\"){\n          noOrigin = true;\n          backgroundColorOrigin = \"#efefef\";\n          values.origin = Object.assign(values.origin, values.destination);\n          delete errors.origin;\n        }\n\n        return (\n        <form\n          onSubmit={handleSubmit}\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            Lets get started. Step 1 of 3.\n          </Typography>\n          <Box mt={2}>\n            <Typography\n              variant=\"subtitle1\"\n              color=\"textSecondary\"\n            >\n              Request your move fast and free — no commitments or credit card required.\n            </Typography>\n          </Box>\n          <Box mt={4} className={classes.flexConatiner}>\n            <Box className={classes.flexItemFirst}>\n              <FormControl variant=\"outlined\" style={{width: '100%'}} error={getIn(errors, 'job.job_size') && getIn(touched, 'job.job_size')}>\n                <InputLabel>Size of Move</InputLabel>\n                <Select\n                  id=\"job_size\"\n                  label=\"Size of Move\"\n                  variant=\"outlined\"\n                  name=\"job.job_size\"\n                  value={values.job.job_size}\n                  onChange={handleChange}\n                >\n                  {movingSizeOptionsSelect()}\n                </Select>\n              </FormControl>\n            </Box>\n            <Box className={clsx(classes.flexItemSecond, classes.dateMtop)}>\n              <Field name='job.pick_up_date' component={SelectDate} value={values.job.pick_up_date} validate={validateDate}/>\n            </Box>\n          </Box>\n          <Box mt={4} className={classes.flexConatiner}>\n            <Box className={classes.flexItemSecond}>\n              <FormControl variant=\"outlined\" style={{width: '100%'}} error={getIn(errors, 'job.job_type') && getIn(touched, 'job.job_type')}>\n                <InputLabel>Type of Service</InputLabel>\n                <Select\n                  id=\"job_type\"\n                  label=\"Type of Service\"\n                  variant=\"outlined\"\n                  name=\"job.job_type\"\n                  value={values.job.job_type}\n                  onChange={handleChange}\n                >\n                  {movingTypeOptionsSelect()}\n                </Select>\n              </FormControl>\n            </Box>\n            <Box className={classes.flexItemSecond}>\n            {\n\n              (values.job.job_type === \"Moving\" || values.job.job_type === \"Loading Help\" || values.job.job_type === \"Unloading Help\" || values.job.job_type === \"Packing Only\" || values.job.job_type === \"Inside Move\") ?\n              (\n                  <div></div>\n              ) : (\n                <Field name='job.delivery_date' component={SelectDate} value={values.job.delivery_date} validate={validateDate} className={classes.dateMtop}/>\n              )\n            }\n            </Box>\n          </Box>\n\n\n          <Box mt={4} className={classes.flexConatiner}>\n\n            <Box className={classes.typeContainer}>\n              <Box>\n                <Field\n                    name=\"origin.address\"\n                    value={values.origin.address}\n                    handleBlur={handleBlur}\n                    component={renderPlacesAutocomplete}\n                    disabled={noOrigin}\n                    validate={validateAddress}\n\n                />\n              </Box>\n              <Box className={classes.itemsContainer} mt={4}>\n                <Box className={classes.itemsContainerApt}>\n                  <TextField\n                    id=\"origin.apt_number\"\n                    label=\"Apt #\"\n                    defaultValue=\"\"\n                    variant=\"outlined\"\n                    name='origin.apt_number'\n                    onChange={handleChange}\n                    disabled={noOrigin}\n                    style={{width: '100%', backgroundColor: backgroundColorOrigin}}\n                  />\n                </Box>\n                <Box className={classes.itemsContainerType} style={{width: '100%'}}>\n                  <FormControl variant=\"outlined\" style={{width: '100%'}} error={getIn(errors, 'origin.floor') && getIn(touched, 'origin.floor')\n                    ? true\n                    : false}>\n                    <InputLabel>Select elevator/stairs...</InputLabel>\n                    <Select\n                      id=\"origin.floor\"\n                      defaultValue=\"\"\n                      label=\"Select elevator/stairs...\"\n                      variant=\"outlined\"\n                      name=\"origin.floor\"\n                      value={values.origin.floor}\n                      onChange={handleChange}\n                      disabled={noOrigin}\n                      style={{backgroundColor: backgroundColorOrigin}}\n                    >\n                      {houseTypeOptionsSelect()}\n                    </Select>\n                  </FormControl>\n                </Box>\n              </Box>\n            </Box>\n\n            <Box className={clsx(classes.destination, classes.typeContainer)}>\n              <Box>\n                <Field\n                    name=\"destination.address\"\n                    value={values.destination.address}\n                    handleBlur={handleBlur}\n                    component={renderDestinationAutocomplete}\n                    validate={validateAddress}\n                />\n              </Box>\n              <Box className={classes.itemsContainer} mt={4}>\n                <Box className={classes.itemsContainerApt}>\n                  <TextField\n                    id=\"destination.apt_number\"\n                    label=\"Apt #\"\n                    defaultValue=\"\"\n                    variant=\"outlined\"\n                    name='destination.apt_number'\n                    onChange={handleChange}\n                    disabled={noDestination}\n                    style={{width: '100%', backgroundColor: backgroundColorDestination}}\n                  />\n                </Box>\n                <Box style={{width: '100%'}} className={classes.itemsContainerType}>\n                  <FormControl variant=\"outlined\" style={{width: '100%'}} error={getIn(errors, 'destination.floor') && getIn(touched, 'destination.floor')\n                    ? true\n                    : false}>\n                    <InputLabel>Select elevator/stairs...</InputLabel>\n                    <Select\n\n                      id=\"destination.floor\"\n                      defaultValue=\"\"\n                      label=\"Select elevator/stairs...\"\n                      variant=\"outlined\"\n                      name=\"destination.floor\"\n                      value={values.destination.floor}\n                      onChange={handleChange}\n                      disabled={noDestination}\n                      style={{backgroundColor: backgroundColorDestination}}\n\n                    >\n                      {houseTypeOptionsSelect()}\n                    </Select>\n                  </FormControl>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n          <Typography\n            variant=\"body2\"\n            style={{fontSize: '12px'}}\n          >\n            *Please provide us with exact floor if stairs are involved.\n          </Typography>\n          <Box\n            mt={6}\n            display=\"flex\"\n            alignItems='center'\n          >\n\n            <Box flexGrow={1} />\n            <Box style={{marginRight: '25px'}}>\n              <Button\n                size=\"small\"\n                onClick={()=> resetForm()}\n                style={{textTransform: 'none'}}\n              >\n                <BrushRoundedIcon className={classes.clearBrush}/>\n                Clear Form\n              </Button>\n            </Box>\n            <Box>\n              <Button\n                color=\"secondary\"\n                type=\"submit\"\n                variant=\"contained\"\n                size=\"large\"\n              >\n                Next\n              </Button>\n            </Box>\n          </Box>\n          <div>\n          </div>\n        </form>\n      )}\n    }\n\n    </Formik>\n  );\n\n}\n\nMovingForm.propTypes = {\n  className: PropTypes.string,\n  onNext: PropTypes.func,\n  onBack: PropTypes.func\n};\n\nexport default MovingForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik, getIn } from 'formik';\nimport BrushRoundedIcon from '@material-ui/icons/BrushRounded';\nimport {\n  Box,\n  Button,\n  TextField,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  addTab: {\n    marginLeft: theme.spacing(2)\n  },\n  tag: {\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  datePicker: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  editor: {\n    '& .ql-editor': {\n      height: 200\n    }\n  },\n  flexConatiner: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column'\n    },\n\n  },\n  flexItem: {\n    flex: '0 0 47%',\n  },\n  flexItemSecond: {\n    flex: '0 0 47%',\n    [theme.breakpoints.down('xs')]: {\n      marginTop: '32px'\n    },\n  },\n  clearBrush: {\n    width: 16,\n    height: 16,\n  }\n}));\n\nfunction CustomerForm({\n  className,\n  onBack,\n  onNext,\n  setFormState,\n  formState,\n  ...rest\n}) {\n  const classes = useStyles();\n  const phoneRegExp = /^(\\d{3})(\\d{3})(\\d{4})$/\n\n  const handlePhoneChange = (event) => {\n    let value = event.target.value;\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        user: {\n            ...formState.values.user,\n          phone: value,\n          password: value,\n          password_confirmation: value,\n        }\n      }\n    }))\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        user: !formState.values.user ? {\n          first_name: '',\n          last_name: '',\n          email: '',\n          phone: '',\n          customer: true,\n        } : formState.values.user,\n        job: !formState.values.job.additional_info ? {\n          additional_info: '',\n        } : !formState.values.job.additional_info\n      }}\n      validationSchema={Yup.object().shape({\n        user: Yup.object().shape({\n          first_name: Yup.string().min(3, 'Must be at least 3 characters').max(255).required('Required'),\n          last_name: Yup.string().min(3, 'Must be at least 3 characters').max(255).required('Required'),\n          email: Yup.string().email('Invalid email').required('Required'),\n          phone: Yup.string().matches(phoneRegExp, 'Invalid phone number').required('Required')\n        }),\n\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n\n          setFormState({\n            ...formState,\n            values: {\n              ...formState.values,\n              user: {\n                ...values.user,\n                password: values.user.phone,\n                password_confirmation: values.user.phone,\n                customer: true,\n              },\n              job: {\n                ...formState.values.job,\n                additional_info: values.job.additional_info\n              }\n            }\n          })\n\n          window.scrollTo(0, 0);\n          onNext();\n\n          setStatus({ success: true });\n          setSubmitting(false);\n\n        } catch (err) {\n          setErrors({ submit: err.message });\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        setFieldTouched,\n        touched,\n        values,\n        resetForm\n      }) => (\n\n        <form\n          onSubmit={handleSubmit}\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            Contact Information.\n          </Typography>\n          <Box mt={4} className={classes.flexConatiner}>\n            <Box className={classes.flexItem}>\n              <TextField\n                error={getIn(errors, 'user.first_name') && getIn(touched, 'user.first_name')}\n                fullWidth\n                label=\"First Name*\"\n                name=\"user.first_name\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.user.first_name}\n                variant=\"outlined\"\n              />\n            </Box>\n            <Box className={classes.flexItemSecond}>\n              <TextField\n                error={getIn(errors, 'user.last_name') && getIn(touched, 'user.last_name')}\n                fullWidth\n                label=\"Last Name*\"\n                name=\"user.last_name\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.user.last_name}\n                variant=\"outlined\"\n              />\n            </Box>\n          </Box>\n          <Box mt={4} className={classes.flexConatiner}>\n            <Box className={classes.flexItem}>\n              <TextField\n                error={getIn(errors, 'user.email') && getIn(touched, 'user.email')}\n                fullWidth\n                helperText={touched.email && errors.email}\n                label=\"Email*\"\n                name=\"user.email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.user.email}\n                variant=\"outlined\"\n              />\n            </Box>\n            <Box className={classes.flexItemSecond}>\n              <TextField\n                error={getIn(errors, 'user.phone') && getIn(touched, 'user.phone')}\n                fullWidth\n                helperText={touched.phone && errors.phone}\n                label=\"Phone*\"\n                name=\"user.phone\"\n                type=\"number\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.user.phone}\n                variant=\"outlined\"\n              />\n            </Box>\n          </Box>\n          <Box mt={4}>\n            <TextField\n              id=\"additional_info\"\n              label=\"Additional Comments/Requests\"\n              variant=\"outlined\"\n              name='job.additional_info'\n              placeholder=\"Please include information on heavy, oversized or fragile items, narrow stairways or halls, long walk ways, extra stops, or anything else that may affect the moving time.\"\n              onChange={handleChange}\n              value={values.job.additional_info}\n              style={{width: '100%'}}\n              multiline\n              rows={4}\n            />\n          </Box>\n\n          <Box\n            mt={6}\n            display=\"flex\"\n            alignItems='center'\n          >\n            {onBack && (\n              <Button\n                onClick={onBack}\n                size=\"large\"\n                variant=\"outlined\"\n              >\n                Previous\n              </Button>\n            )}\n            <Box flexGrow={1} />\n            <Box style={{marginRight: '2%'}}>\n              <Button\n                size=\"small\"\n                onClick={()=> resetForm()}\n                style={{textTransform: 'none'}}\n              >\n                <BrushRoundedIcon className={classes.clearBrush}/>\n                Clear Form\n              </Button>\n            </Box>\n            <Box>\n              <Button\n                color=\"secondary\"\n                type=\"submit\"\n                variant=\"contained\"\n                size=\"large\"\n              >\n                Next\n              </Button>\n            </Box>\n          </Box>\n        </form>\n      )}\n    </Formik>\n\n  );\n}\n\nCustomerForm.propTypes = {\n  className: PropTypes.string,\n  onComplete: PropTypes.func,\n  onBack: PropTypes.func\n};\n\nexport default CustomerForm;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\nimport LoadingScreen from 'src/components/LoadingScreen';\nimport axios from 'axios';\nimport validate from 'validate.js';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Container,\n  Grid,\n  Paper,\n  Step,\n  StepConnector,\n  StepLabel,\n  Stepper,\n  Typography,\n  makeStyles,\n  withStyles,\n  colors\n} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport {\n  User as UserIcon,\n  Clipboard as ClipboardIcon,\n  Star as StarIcon,\n  Truck as TruckIcon\n} from 'react-feather';\nimport Page from 'src/components/Page';\nimport ReviewMove2 from './ReviewMove2'\nimport MovingForm from './MovingForm'\nimport CustomerForm from './CustomerForm'\n\nconst steps = [\n  {\n    label: 'Moving Details',\n    icon: TruckIcon\n  },\n  {\n    label: 'Contact Information',\n    icon: UserIcon\n  },\n  {\n    label: 'Review Details',\n    icon: ClipboardIcon\n  }\n];\n\nconst CustomStepConnector = withStyles((theme) => ({\n  horizontal: {\n    margin: '0px 2em',\n    padding: 0,\n  },\n  line: {\n    borderColor: theme.palette.divider,\n    borderBottomStyle: 'solid',\n    borderBottomWidth: '1px'\n  }\n}))(StepConnector);\n\nconst useCustomStepIconStyles = makeStyles((theme) => ({\n  root: {},\n  active: {\n    backgroundColor: theme.palette.secondary.main,\n    boxShadow: theme.shadows[10]\n  },\n  completed: {\n    backgroundColor: theme.palette.secondary.main,\n  }\n}));\n\n\n\nfunction CustomStepIcon({ active, completed, icon }) {\n  const classes = useCustomStepIconStyles();\n\n  const Icon = steps[icon - 1].icon;\n\n  return (\n    <Avatar\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n    >\n      <Icon size=\"20\" />\n    </Avatar>\n  );\n}\n\nCustomStepIcon.propTypes = {\n  active: PropTypes.bool,\n  completed: PropTypes.bool,\n  icon: PropTypes.number\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundImage: 'linear-gradient(to bottom, #7c4dff, #7c4dff96), url(https://images.unsplash.com/photo-1570129042283-dbebdfd894de?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2100&q=80)',\n    backgroundSize: 'cover',\n    minHeight: '100vh',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  paddingMobile: {\n    [theme.breakpoints.down('xs')]: {\n      padding: '0 5px',\n      marginTop: '2em',\n      marginBottom: '3em',\n    },\n  },\n  avatar: {\n    backgroundColor: colors.red[600]\n  },\n  itemsContainer: {\n    flexDirection: 'column',\n    alignContent: 'center',\n    maxWidth: '747px',\n    margin: 'auto',\n    padding: '2em 0em',\n  },\n  item:{\n    width: '100%',\n    maxWidth: '100%'\n  },\n  alert: {\n    fontSize: '16px',\n  },\n  borderRadius: {\n    borderRadius: theme.spacing(1),\n  },\n  stepper: {\n    [theme.breakpoints.down('sm')]: {\n      padding: \"24px 0px\",\n    },\n  }\n}));\n\n\nfunction ProjectCreateView() {\n  const isMountedRef = useIsMountedRef();\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const [progress, setProgress] = useState(10)\n  const [formState, setFormState] = useState({\n    values: {},\n    touched: {},\n    isMovingDetailsValid: false,\n    isCustomerDetailsValid: false,\n    errors: {},\n  });\n\n\n  React.useEffect(() => {\n\n    setFormState(formState => ({\n      ...formState,\n    }));\n  }, [formState.values]);\n\n  const handleSubmit = () => {\n    setCompleted(true)\n    //User POST\n    var user = formState.values.user\n    axios.post('api/v1/users', {user}, {withCredentials: true})\n      .then(response => {\n        let userId = response.data.user.id;\n        var job = formState.values.job\n        job.user_id = userId;\n        axios.post('api/v1/jobs', {job} )\n          .then(response => {\n            let jobId = response.data.job.id;\n            var origin = formState.values.origin;\n            var destination = formState.values.destination;\n            origin.job_id = jobId;\n            destination.job_id = jobId;\n            axios.post(`api/v1/jobs/${jobId}/origins`, {origin} )\n            axios.post(`api/v1/jobs/${jobId}/destinations`, {destination} )\n        })\n        .catch(error => console.log('api errors:', error))\n    })\n    .catch(error => console.log('api errors:', error))\n\n  }\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1)\n  }\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\n  };\n\n  const handleComplete = () => {\n    setCompleted(true);\n  };\n\n  const hasError = field =>\n    { return formState.touched[field] && formState.errors[field] ? true : false }\n\n    console.log(formState.values);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Book\"\n    >\n      <Container maxWidth=\"md\" className={classes.paddingMobile}>\n        <Box mb={5}>\n        </Box>\n        {!completed ? (\n          <Paper className={classes.borderRadius}>\n            <Grid container className={classes.itemsContainer}>\n              <Grid\n                item\n                xs={12}\n                md={3}\n                className={classes.item}\n              >\n                <Stepper\n                  activeStep={activeStep}\n                  orientation=\"horizontal\"\n                  component={Box}\n                  bgcolor=\"transparent\"\n                  className={classes.stepper}\n                >\n                  {steps.map((step) => (\n                    <Step key={step.label}>\n                      <StepLabel StepIconComponent={CustomStepIcon} >\n                        {step.label}\n                      </StepLabel>\n                    </Step>\n                  ))}\n                </Stepper>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                md={9}\n                className={classes.item}\n              >\n                <Box p={3}>\n                  {activeStep === 0 && (\n                    <MovingForm\n                      onNext={handleNext}\n                      setFormState={setFormState}\n                      formState={formState}\n                    />\n                  )}\n                  {activeStep === 1 && (\n                    <CustomerForm\n                      onBack={handleBack}\n                      onNext={handleNext}\n                      setFormState={setFormState}\n                      formState={formState}\n                    />\n                  )}\n                  {activeStep === 2 && (\n                    <ReviewMove2\n                      origin={formState.values.origin.address}\n                      destination={formState.values.destination.address}\n                      movingSize={formState.values.job.job_size}\n                      typeFrom={formState.values.origin.floor}\n                      typeTo={formState.values.destination.floor}\n                      jobType={formState.values.job.job_type}\n                      onBack={handleBack}\n                      onSubmit={handleSubmit}\n                      setFormState={setFormState}\n                      formState={formState}\n                    />\n                  )}\n\n                </Box>\n              </Grid>\n            </Grid>\n          </Paper>\n        ) : (\n          <Card>\n            <CardContent>\n              <Box\n                maxWidth={450}\n                mx=\"auto\"\n              >\n                <Box\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                >\n                  <Avatar className={classes.avatar}>\n                    <StarIcon />\n                  </Avatar>\n                </Box>\n                <Box mt={2}>\n                  <Typography\n                    variant=\"h3\"\n                    color=\"textPrimary\"\n                    align=\"center\"\n                  >\n                    You are all done!\n                  </Typography>\n                </Box>\n                <Box mt={2}>\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"textSecondary\"\n                    align=\"center\"\n                  >\n                    <Alert severity=\"info\" className={classes.alert}>An email has been sent to you with Login and Password to view your Moving Details!</Alert>\n                  </Typography>\n                </Box>\n                <Box\n                  mt={2}\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    component={RouterLink}\n                    to=\"/login\"\n                  >\n                    View your Moving Details\n                  </Button>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        )}\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProjectCreateView;\n"],"sourceRoot":""}