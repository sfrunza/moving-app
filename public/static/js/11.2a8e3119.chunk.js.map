{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDownward.js","../node_modules/@material-ui/core/esm/TableSortLabel/TableSortLabel.js","../node_modules/@material-ui/icons/NavigateNext.js","components/GenericMoreButton.js","utils/getInitials.js","../node_modules/@material-ui/icons/GetApp.js","../node_modules/@material-ui/icons/MoreVert.js","../node_modules/@material-ui/icons/PictureAsPdf.js","../node_modules/@material-ui/icons/ArchiveOutlined.js","views/reports/DashboardAlternativeView/CustomerActivity.js","views/reports/DashboardAlternativeView/EarningsSegmentation/index.js","views/reports/DashboardAlternativeView/FinancialStats/Chart.js","views/reports/DashboardAlternativeView/FinancialStats/index.js","views/reports/DashboardAlternativeView/Header.js","views/reports/DashboardAlternativeView/LatestOrders.js","views/reports/DashboardAlternativeView/MostProfitableProducts/CircularProgress.js","views/reports/DashboardAlternativeView/MostProfitableProducts/index.js","views/reports/DashboardAlternativeView/Overview.js","views/reports/DashboardAlternativeView/TopReferrals.js","views/reports/DashboardAlternativeView/index.js"],"names":["createSvgIcon","React","d","withStyles","theme","root","display","marginLeft","spacing","marginRight","backgroundColor","palette","grey","color","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","name","props","classes","other","_objectWithoutProperties","ButtonBase","_extends","component","className","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect","tablelvl2","variant","TableHead","Tablelvl2Context","Provider","value","role","TableSortLabel","_props$active","active","_props$direction","direction","_props$hideSortIcon","hideSortIcon","_props$IconComponent","IconComponent","ArrowDownwardIcon","disableRipple","capitalize","justifyContent","flexDirection","text","secondary","opacity","primary","fontSize","transition","transitions","create","duration","shorter","iconDirectionDesc","transform","iconDirectionAsc","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","useStyles","makeStyles","menu","maxWidth","memo","moreRef","useRef","useState","openMenu","setOpenMenu","title","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","replace","split","v","toUpperCase","join","item","flexGrow","borderRight","divider","badge","CustomerActivity","users","rest","useIsMountedRef","total","setTotal","online","setOnline","useEffect","user","customer","Card","CardHeader","action","GenericMoreButton","Divider","Box","align","gutterBottom","List","disablePadding","i","ListItem","id","ListItemAvatar","Avatar","alt","RouterLink","src","avatar","to","getInitials","first_name","last_name","ListItemText","disableTypography","Link","underline","Badge","textAlign","EarningsSegmentation","position","chart","FinancialStats","timeRanges","actionIcon","Header","actionRef","isMenuOpen","setMenuOpen","timeRange","setTimeRange","Grid","container","justify","aria-label","Button","SvgIcon","Menu","getContentAnchorEl","t","MenuItem","defaultProps","navigateNextIcon","LatestOrders","jobs","minWidth","Table","TableRow","TableCell","sortDirection","Tooltip","enterDelay","TableBody","job","lol","user_id","hover","job_size","status","Label","getInventoryLabel","job_status","moment","pick_up_date","format","p","size","circle1","stroke","type","fill","strokeWidth","circle2","main","animation","strokeDasharray","image","flexShrink","subscriptions","fontWeight","typography","fontWeightMedium","colors","green","MostProfitableProducts","breakpoints","up","down","borderBottom","valueContainer","label","Overview","overview","md","sm","xs","fontWeightBold","common","white","TopReferrals","background","dark","minHeight","paddingTop","paddingBottom","paddingLeft","paddingRight","DashboardAlternativeView","isMountedRef","setJob","setUsers","getJobs","useCallback","axios","get","then","response","data","getUsers","Page","Container","lg"],"mappings":"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","file":"static/js/11.2a8e3119.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      cursor: 'pointer',\n      display: 'inline-flex',\n      justifyContent: 'flex-start',\n      flexDirection: 'inherit',\n      alignItems: 'center',\n      '&:focus': {\n        color: theme.palette.text.secondary\n      },\n      '&:hover': {\n        color: theme.palette.text.secondary,\n        '& $icon': {\n          opacity: 0.5\n        }\n      },\n      '&$active': {\n        color: theme.palette.text.primary,\n        // && instead of & is a workaround for https://github.com/cssinjs/jss/issues/1045\n        '&& $icon': {\n          opacity: 1,\n          color: theme.palette.text.secondary\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Styles applied to the icon component. */\n    icon: {\n      fontSize: 18,\n      marginRight: 4,\n      marginLeft: 4,\n      opacity: 0,\n      transition: theme.transitions.create(['opacity', 'transform'], {\n        duration: theme.transitions.duration.shorter\n      }),\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the icon component if `direction=\"desc\"`. */\n    iconDirectionDesc: {\n      transform: 'rotate(0deg)'\n    },\n\n    /* Styles applied to the icon component if `direction=\"asc\"`. */\n    iconDirectionAsc: {\n      transform: 'rotate(180deg)'\n    }\n  };\n};\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\n\nvar TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'asc' : _props$direction,\n      _props$hideSortIcon = props.hideSortIcon,\n      hideSortIcon = _props$hideSortIcon === void 0 ? false : _props$hideSortIcon,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? ArrowDownwardIcon : _props$IconComponent,\n      other = _objectWithoutProperties(props, [\"active\", \"children\", \"classes\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, active && classes.active),\n    component: \"span\",\n    disableRipple: true,\n    ref: ref\n  }, other), children, hideSortIcon && !active ? null : /*#__PURE__*/React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[\"iconDirection\".concat(capitalize(direction))])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes = {\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current sort direction.\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Hide sort icon when active is false.\n   */\n  hideSortIcon: PropTypes.bool,\n\n  /**\n   * Sort icon to use.\n   */\n  IconComponent: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableSortLabel'\n})(TableSortLabel);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import React, {\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport AchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nfunction GenericMoreButton(props) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          {...props}\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <AchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Achive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nGenericMoreButton.propTypes = {\n  className: PropTypes.string\n};\n\nexport default memo(GenericMoreButton);\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5v3zm4-3H19v1h1.5V11H19v2h-1.5V7h3v1.5zM9 9.5h1v-1H9v1zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm10 5.5h1v-3h-1v3z\"\n}), 'PictureAsPdf');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM6.24 5h11.52l.81.97H5.44l.8-.97zM5 19V8h14v11H5zm8.45-9h-2.9v3H8l4 4 4-4h-2.55z\"\n}), 'ArchiveOutlined');\n\nexports.default = _default;","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  makeStyles,\n  Badge,\n} from '@material-ui/core';\nimport axios from 'axios';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  },\n  badge: {\n    '& span': {\n      backgroundColor: 'green'\n    }\n  }\n}));\n\nfunction CustomerActivity({ className, users, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [total, setTotal] = useState(0);\n  const [online, setOnline] = useState(0);\n\n\n  useEffect(() => {\n    let total = 0\n    let active = 0\n    users.map(user => {\n      if (user.customer){\n        total += 1\n      }\n      if (user.active){\n        active += 1\n      }\n    })\n    setTotal(total);\n    setOnline(active)\n  }, [total, online]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Customer Activity\"\n        action={<GenericMoreButton />}\n      />\n      <Divider />\n      <Box display=\"flex\">\n        <div className={classes.item}>\n          <Typography\n            align=\"center\"\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {total}\n          </Typography>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Registered\n          </Typography>\n        </div>\n        <Divider />\n        <div className={classes.item}>\n          <Typography\n            align=\"center\"\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {online}\n          </Typography>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Online\n          </Typography>\n        </div>\n      </Box>\n      <Divider />\n      <List disablePadding>\n        {users.map((user, i) => {\n          if(user.active){\n            return (\n              <ListItem\n                divider={i < users.length - 1}\n                key={user.id}\n              >\n                <ListItemAvatar>\n                  <Avatar\n                    alt=\"Customer\"\n                    component={RouterLink}\n                    src={user.customer.avatar}\n                    to=\"#\"\n                  >\n                    {getInitials(user.first_name + \" \" + user.last_name)}\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  disableTypography\n                  primary={(\n                    <Link\n                      color=\"textPrimary\"\n                      component={RouterLink}\n                      to={`/app/customers/${user.id}`}\n                      underline=\"none\"\n                      variant=\"h6\"\n                    >\n                      {user.first_name + \" \" +user.last_name}\n                    </Link>\n                  )}\n                />\n                <Badge variant=\"dot\" className={classes.badge}>\n\n                </Badge>\n              </ListItem>\n            )\n          }\n        }\n      )}\n      </List>\n    </Card>\n  );\n}\n\nCustomerActivity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CustomerActivity;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction EarningsSegmentation({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [earnings, setEarnings] = useState(null);\n\n  const getEarnings = useCallback(() => {\n    axios\n      .get('/api/reports/earnings')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setEarnings(response.data.earnings);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEarnings();\n  }, [getEarnings]);\n\n  if (!earnings) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Earnings Segmentation\"\n      />\n      <Divider />\n      <Box\n        p={3}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <Chart data={earnings} />\n      </Box>\n      <Divider />\n      <Box display=\"flex\">\n        {earnings.labels.map((label, i) => (\n          <div\n            key={label}\n            className={classes.item}\n          >\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n            >\n              {earnings.datasets[0].data[i]}\n              %\n            </Typography>\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              {label}\n            </Typography>\n          </div>\n        ))}\n      </Box>\n    </Card>\n  );\n}\n\nEarningsSegmentation.propTypes = {\n  className: PropTypes.string\n};\n\nexport default EarningsSegmentation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  fade,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nfunction Chart({\n  data: dataProp,\n  labels,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        label: 'This year',\n        backgroundColor: theme.palette.secondary.main,\n        data: dataProp.thisYear,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      },\n      {\n        label: 'Last year',\n        backgroundColor: fade(theme.palette.secondary.main, 0.25),\n        data: dataProp.lastYear,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cornerRadius: 20,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 5,\n            callback: (value) => (value > 0 ? `${value}K` : value)\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem) => {\n          let label = `Sales: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Bar\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chart: {\n    height: 400\n  }\n}));\n\nfunction FinancialStats({ className, ...rest }) {\n  const classes = useStyles();\n  const stats = {\n    thisYear: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20],\n    lastYear: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13]\n  };\n  const labels = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ];\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Financial Stats\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box\n          minWidth={700}\n          pt={4}\n          pr={2}\n          pl={2}\n        >\n          <Chart\n            className={classes.chart}\n            data={stats}\n            labels={labels}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n}\n\nFinancialStats.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FinancialStats;\n","import React, { useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Calendar as CalendarIcon } from 'react-feather';\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today'\n  },\n  {\n    value: 'yesterday',\n    text: 'Yesterday'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Last 30 days'\n  },\n  {\n    value: 'last_year',\n    text: 'Last year'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const [timeRange, setTimeRange] = useState(timeRanges[2].text);\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Reports\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Finance Overview\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <CalendarIcon />\n          </SvgIcon>\n          {timeRange}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          PaperProps={{ className: classes.menu }}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map((t) => (\n            <MenuItem\n              key={t.value}\n              onClick={() => setTimeRange(t.text)}\n            >\n              {t.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\n\nfunction getInventoryLabel(status) {\n  const map = {\n    \"Completed\": {\n      text: 'Completed',\n      color: 'secondary'\n    },\n    \"Canceled\": {\n      text: 'Canceled',\n      color: 'error'\n    },\n    \"Needs Attention\" : {\n      text: 'Needs Attention',\n      color: 'warning'\n    },\n    \"Confirmed\" : {\n      text: 'Confirmed',\n      color: 'success'\n    }\n  };\n\n  const { text, color } = map[status];\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction LatestOrders({ className, users, jobs, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Latest Jobs\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Job ID\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell>\n                  Size\n                </TableCell>\n\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell align=\"right\">\n                  Date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {jobs.map((job) => {\n                let lol = job.user_id\n                let customer = ''\n                users.map(user => {\n                  if (lol === user.id){\n                    customer = user.first_name + \" \" +user.last_name\n                  }\n                })\n\n                return (\n                  <TableRow\n                    hover\n                    key={job.id}\n                  >\n                    <TableCell># {job.id}</TableCell>\n                    <TableCell>{customer}</TableCell>\n                    <TableCell>{job.job_size}</TableCell>\n\n                    <TableCell>\n                      {getInventoryLabel(job.job_status)}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {moment(job.pick_up_date).format('MMM DD, YYYY')}\n                    </TableCell>\n                  </TableRow>\n                )\n              }\n            )}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"/app/jobs\"\n        >\n          See all\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 56,\n    height: 56\n  },\n  circle1: {\n    stroke: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\n    fill: 'none',\n    strokeWidth: 4\n  },\n  circle2: {\n    stroke: theme.palette.secondary.main,\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  '@keyframes progress': {\n    '0%': {\n      strokeDasharray: '0 100'\n    }\n  }\n}));\n\nfunction CircularProgress({ value, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <svg viewBox=\"0 0 36 36\">\n        <path\n          className={classes.circle1}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray=\"100, 100\"\n        />\n        <path\n          className={classes.circle2}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray={`${value}, 100`}\n        />\n      </svg>\n    </div>\n  );\n}\n\nCircularProgress.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport CircularProgress from './CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  image: {\n    flexShrink: 0,\n    height: 56,\n    width: 56\n  },\n  subscriptions: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  value: {\n    color: colors.green[600],\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction MostProfitableProducts({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [products, setProducts] = useState(null);\n\n  const getProducts = useCallback(() => {\n    axios\n      .get('/api/reports/profitable-products')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setProducts(response.data.products);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  if (!products) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Most Profitable Products\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableBody>\n              {products.map((product) => (\n                <TableRow\n                  hover\n                  key={product.id}\n                >\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                    >\n                      <img\n                        alt=\"Product\"\n                        className={classes.image}\n                        src={product.image}\n                      />\n                      <Box ml={2}>\n                        <Typography\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          {product.name}\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          <span className={classes.subscriptions}>\n                            {product.subscriptions}\n                          </span>\n                          {' '}\n                          Active\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                    >\n                      Price\n                    </Typography>\n                    <Typography\n                      noWrap\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                    >\n                      <span className={classes.value}>\n                        {product.currency}\n                        {product.price}\n                      </span>\n                      {' '}\n                      monthly\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"flex-end\"\n                    >\n                      <Box mr={2}>\n                        <Typography\n                          align=\"right\"\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          {product.progress}\n                          %\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          Conversion Rate\n                        </Typography>\n                      </Box>\n                      <CircularProgress value={product.progress} />\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n        >\n          See all\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nMostProfitableProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default MostProfitableProducts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Card,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction Overview({ className, ...rest }) {\n  const classes = useStyles();\n  const overview = {\n    income: '854,355.00',\n    expanses: '373,250.50',\n    profit: '123,532.00',\n    subscriptions: '26,000'\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n      >\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Income\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              $\n              {overview.income}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"success\"\n            >\n              +25%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Expanses\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              $\n              {overview.expanses}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"success\"\n            >\n              +12%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Net Profit\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              {overview.profit}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"error\"\n            >\n              -20%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Active Subscriptions\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              {overview.subscriptions}\n            </Typography>\n          </div>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\nOverview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Overview;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  avatar: {\n    fontSize: 14,\n    fontWeight: theme.typography.fontWeightBold,\n    color: theme.palette.common.white\n  }\n}));\n\nfunction TopReferrals({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [referrals, setReferrals] = useState(null);\n\n  const getReferrals = useCallback(() => {\n    axios\n      .get('/api/reports/top-referrals')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setReferrals(response.data.referrals);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getReferrals();\n  }, [getReferrals]);\n\n  if (!referrals) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Top Referrals\"\n      />\n      <Divider />\n      <List disablePadding>\n        {referrals.map((referral, i) => (\n          <ListItem\n            divider={i < referrals.length - 1}\n            key={referral.name}\n          >\n            <ListItemAvatar>\n              <Avatar\n                className={classes.avatar}\n                size=\"small\"\n                style={{ backgroundColor: referral.color }}\n              >\n                {referral.initials}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={referral.name}\n              primaryTypographyProps={{ variant: 'h6' }}\n            />\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              {referral.value}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nTopReferrals.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopReferrals;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport CustomerActivity from './CustomerActivity';\nimport EarningsSegmentation from './EarningsSegmentation';\nimport FinancialStats from './FinancialStats';\nimport Header from './Header';\nimport LatestOrders from './LatestOrders';\nimport MostProfitableProducts from './MostProfitableProducts';\nimport Overview from './Overview';\nimport TopReferrals from './TopReferrals';\nimport axios from 'axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  container: {\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 64,\n      paddingRight: 64\n    }\n  }\n}));\n\nfunction DashboardAlternativeView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [jobs, setJob] = useState(null);\n  const [users, setUsers] = useState(null);\n\n  const getJobs = useCallback(() => {\n    axios\n      .get('/api/v1/jobs.json')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setJob(response.data.slice(0, 6));\n        }\n      });\n  }, [isMountedRef]);\n\n  const getUsers = useCallback(() => {\n    axios\n      .get('/api/v1/users.json')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setUsers(response.data.users);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getJobs();\n    getUsers();\n  }, [getJobs, getUsers]);\n\n  if (!jobs || !users) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard Alternative\"\n    >\n      <Container\n        maxWidth={false}\n        className={classes.container}\n      >\n        <Header />\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            xs={12}\n          >\n            <Overview />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            xs={12}\n          >\n            <LatestOrders users={users} jobs={jobs}/>\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <CustomerActivity users={users}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n\nexport default DashboardAlternativeView;\n"],"sourceRoot":""}