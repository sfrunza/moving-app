{"version":3,"sources":["views/userCalendar/JobDetailsView/Header.js","views/userCalendar/JobDetailsView/CustomerDetails.js","views/userCalendar/JobDetailsView/Gallery.js","views/userCalendar/JobDetailsView/Uploader.js","views/userCalendar/JobDetailsView/MovingDetails.js","views/userCalendar/JobDetailsView/OtherActions.js","views/userCalendar/JobDetailsView/index.js"],"names":["useStyles","makeStyles","theme","root","marginTop","toolbar","marginLeft","spacing","deleteButton","color","palette","common","white","backgroundColor","colors","red","openDeleteButton","border","deleteIcon","marginRight","Header","handleDelete","job","className","rest","classes","undefined","clsx","Grid","alignItems","container","justify","item","Typography","variant","id","CustomerDetails","userId","useState","user","setUser","status","job_status","formatPhoneNumber","phoneNumberString","match","replace","statusColors","orange","blue","green","content","padding","borderBottom","heading","textAlign","borderRadius","margin","display","actions","flexDirection","name","grey","fontSize","fontWeight","textDecoration","emailButton","phoneButton","purple","buttonIcon","infoField","useEffect","mounted","axios","get","then","response","data","Card","CardHeader","style","title","Divider","CardContent","Table","TableBody","TableRow","TableCell","Avatar","src","height","width","marginBottom","Box","first_name","last_name","mt","href","phone","length","add_phone","email","imageStyle","withWidth","images","currentImage","setCurrentImage","arr","map","image","push","photo","url","indexOf","enableLightbox","enableImageSelection","rowHeight","currentImageWillChange","card","boxShadow","buttonCamera","Uploader","jobId","setImages","enqueueSnackbar","useHistory","useSnackbar","initialValues","job_id","validationSchema","Yup","shape","onSubmit","values","a","setErrors","setStatus","setSubmitting","resetForm","formData","FormData","append","fetch","method","body","json","concat","catch","error","console","log","success","err","submit","message","errors","handleSubmit","handleBlur","handleChange","setFieldValue","isSubmitting","touched","FilesDropzone","text","FormHelperText","headerDistance","addInfoContainer","addInfoTitle","deepPurple","textTransform","addInfoSubTitle","wordWrap","MovingDetails","google","window","distance","setDistance","fullJob","setFullJob","origin","address","destination","MapWithADirectionsRenderer","compose","withProps","googleMapURL","loadingElement","containerElement","mapElement","withGoogleMap","lifecycle","componentDidMount","maps","DirectionsService","route","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","setState","directions","routes","legs","props","defaultZoom","defaultCenter","LatLng","initMap","delivery_date","moment","pick_up_date","format","Button","onClick","open","component","floor","ml","apt_number","job_type","job_size","crew_size","job_rate","fontStyle","estimated_time","travel_time","estimated_quote","additional_info","deleteAction","main","dark","actionIcon","cardHeader","button","justifyContent","arrow","menuBox","menuBoxActive","statusBox","topInfo","OtherActions","history","ref","useRef","isOpen","setOpen","jobs","setJobs","origins","setOrigins","destinations","setDestinations","currentJob","getCity","string","split","splice","join","ButtonBase","Menu","onClose","anchorOrigin","vertical","horizontal","keepMounted","getContentAnchorEl","anchorEl","current","PaperProps","maxHeight","ITEM_HEIGHT","popover","i","newOrigin","newDestination","MenuItem","key","Label","getInventoryLabel","mb","background","paddingTop","paddingBottom","grid","otherActions","JobDetails","jobPath","params","jobDetails","setJobDetails","Page","Container","maxWidth","md","xl","xs","user_id"],"mappings":"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","file":"static/js/31.cffd235e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Typography,\n  Grid,\n  colors,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '4rem',\n  },\n  toolbar: {\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  deleteButton: {\n    color: theme.palette.common.white,\n    backgroundColor: colors.red[600],\n    '&:hover': {\n      backgroundColor: colors.red[900]\n    }\n  },\n  openDeleteButton: {\n    color: colors.red[600],\n    border: `1px solid ${colors.red[500]}`,\n    '&:hover': {\n      backgroundColor: colors.red[50],\n    }\n  },\n  deleteIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ handleDelete, job, className, ...rest }) {\n  const classes = useStyles();\n\n  if(job === undefined){\n    return null\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n      <Grid item>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Request ID: {job.id}\n        </Typography>\n      </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport LoadingScreen from 'src/components/LoadingScreen';\nimport axios from 'axios';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors,\n  Box,\n  Avatar\n} from '@material-ui/core';\nimport purple from '@material-ui/core/colors/deepPurple';\nimport {\n  Phone as PhoneIcon,\n  Mail as EmailIcon,\n} from 'react-feather';\n\nfunction CustomerDetails({ userId, job, className, ...rest }) {\n  const [user, setUser] = useState();\n  const status = job.job_status;\n\n  const formatPhoneNumber = (phoneNumberString) => {\n    let cleaned = ('' + phoneNumberString).replace(/\\D/g, '')\n    let match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\n    if (match) {\n      return '(' + match[1] + ') ' + match[2] + '-' + match[3]\n    }\n    return null\n  }\n  const statusColors = {\n    \"Needs Attention\": colors.orange[600],\n    \"Canceled\": colors.red[600],\n    \"Completed\": colors.blue[600],\n    \"Confirmed\": colors.green[600]\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    root: {},\n    content: {\n      padding: 0,\n      '& .MuiTableCell-root': {\n        borderBottom: 'none'\n      }\n    },\n    heading: {\n      textAlign: 'center',\n      color: statusColors[status],\n      border: `1px solid`,\n      borderRadius: '3px',\n      margin: 'auto',\n      display: 'inline-block',\n      padding: '5px 5px',\n    },\n    actions: {\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      '& > * + *': {\n        marginLeft: 0\n      }\n    },\n    name: {\n      color: colors.grey[900],\n      fontSize: '16px',\n      fontWeight: 'bold',\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'none'\n      }\n    },\n    emailButton: {\n      color: colors.grey[700],\n      display: 'flex',\n      alignItems: 'center',\n      textDecoration: 'none',\n    },\n    phoneButton: {\n      fontSize: '16px',\n      color: colors.grey[700],\n      display: 'flex',\n      alignItems: 'center',\n      textDecoration: 'none',\n      '&:hover': {\n        color: purple[500],\n        textDecoration: 'none'\n      }\n    },\n    buttonIcon: {\n      marginRight: theme.spacing(1)\n    },\n    infoField: {\n      display :'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    }\n  }));\n  const classes = useStyles();\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchUser = () => {\n      axios.get(`/api/v1/users/${userId}`).then((response) => {\n        if (mounted) {\n          setUser(response.data.user);\n        }\n      });\n    };\n    fetchUser();\n\n    return () => {\n      mounted = false;\n    };\n  }, [userId]);\n\n\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader style={{ textAlign: 'center'}} classes={{\n          title: classes.heading,\n        }} title={job.job_status} />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody style={{display: 'flex', flexDirection: 'column'}}>\n            <TableRow>\n              <TableCell className={classes.infoField}>\n                <Avatar src=\"https://toppng.com/uploads/preview/roger-berry-avatar-placeholder-11562991561rbrfzlng6h.png\" style={{height: '70px', width: '70px', marginBottom: '1em'}}/>\n                <Box className={classes.name}>\n                  {user.first_name} {user.last_name}\n                </Box>\n                <Box mt={1}>\n                  <a className={classes.phoneButton} href={`tel:${user.phone}`}><PhoneIcon style={{height: '15px'}}/>{user.phone.length === 10 ? formatPhoneNumber(user.phone) : user.phone}</a>\n                </Box>\n                {user.add_phone ?\n                  <Box mt={1}>\n                    <a className={classes.phoneButton} href={`tel:${user.add_phone}`}><PhoneIcon style={{height: '15px'}}/>{user.add_phone.length === 10 ? formatPhoneNumber(user.add_phone) : user.add_phone}</a>\n                  </Box> : null}\n                <Box mt={1} className={classes.emailButton}>\n                  <EmailIcon style={{height: '15px'}}/>{user.email}\n                </Box>\n\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n}\n\nCustomerDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default CustomerDetails;\n","import React, {\n  useCallback,\n  useState,\n  useRef,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  makeStyles,\n  Button,\n} from '@material-ui/core';\nimport Gallery from 'react-grid-gallery';\nimport withWidth from '@material-ui/core/withWidth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // padding: theme.spacing(5, 0),\n    // // maxWidth: '900px',\n    // margin: 'auto'\n  },\n  imageStyle: {\n    // padding: '2px',\n    // transition: 'transform .2s',\n    // [theme.breakpoints.down('sm')]: {\n    //   padding: '2px'\n    // },\n\n  }\n\n}));\n\nfunction Galleryy({ className, images, ...rest }) {\n  const classes = useStyles();\n  const [currentImage, setCurrentImage] = useState(0)\n  let arr = []\n  images.map((image) => {\n    arr.push({ \"src\" : image.photo.url,'thumbnailWidth': 3, 'thumbnailHeight': 2, 'thumbnail': image.photo.url, \"id\": image.id })\n  })\n\n  const handleScreen = () => {\n    let number = false\n    if (rest.width === 'sm' || rest.width === 'xs'){\n      number = false\n    } else number = true\n    return number\n  };\n  const onCurrentImageChange = (id) => {\n        setCurrentImage(id);\n    }\n\n  const numOfImagesPerRow = {\n    xs: 4,\n    s: 5,\n    m: 6,\n    l: 7,\n    xl: 7,\n    xxl: 7,\n  };\n\n  let id = 0\n  arr.map(image => {\n    if(currentImage == arr.indexOf(image)){\n      id = image.id\n    }\n  })\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box mt={2}>\n        <Gallery\n          images={arr}\n          enableLightbox\n          enableImageSelection={false}\n          rowHeight={50}\n          currentImageWillChange={onCurrentImageChange}\n        />\n      </Box>\n    </div>\n  );\n}\n\nGalleryy.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withWidth()(Galleryy);;\n","import React, {useState, useCallback} from 'react';\nimport { useHistory } from 'react-router';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  Paper,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport QuillEditor from 'src/components/QuillEditor';\nimport FilesDropzone from 'src/components/FilesDropzone';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n\n  },\n  card: {\n    backgroundColor: 'transparent',\n    boxShadow: 'none',\n  },\n  buttonCamera: {\n    width: '100%',\n  }\n}));\n\nfunction Uploader({ className, jobId, setImages, images, ...rest }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n\n\n\n  return (\n    <Formik\n      initialValues={{\n        photo: null,\n        image: '',\n        job_id: jobId\n      }}\n      validationSchema={Yup.object().shape({\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting,\n        resetForm\n      }) => {\n        try {\n          const formData = new FormData();\n          formData.append('image', values.image);\n          formData.append('job_id', values.job_id);\n          formData.append('photo', values.photo);\n\n          fetch('/api/v1/images.json', {\n            method: 'POST',\n            body: formData\n          })\n          .then(response => {\n            return response.json();\n          })\n          .then(data => {\n            setImages(images.concat(data))\n          })\n          .catch(error=>console.log(error));\n\n          resetForm({})\n\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Image Added', {\n            variant: 'success'\n          });\n        } catch (err) {\n          setErrors({ submit: err.message });\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values,\n      }) => {\n\n        return(\n        <form\n          onSubmit={handleSubmit}\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <Grid\n            className={classes.buttonCamera}\n          >\n            <Card className={classes.card}>\n              <CardContent>\n                <FilesDropzone setFieldValue={setFieldValue}  handleSubmit={handleSubmit} text=\"Add Photo to Inventory\"/>\n              </CardContent>\n            </Card>\n          </Grid>\n          {errors.submit && (\n            <Box mt={3}>\n              <FormHelperText error>\n                {errors.submit}\n              </FormHelperText>\n            </Box>\n          )}\n        </form>\n      )}\n    }\n    </Formik>\n  );\n}\n\nUploader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Uploader;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/styles';\nimport moment from 'moment';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Box,\n  Link,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Button,\n} from '@material-ui/core';\nimport {\n  withGoogleMap,\n  GoogleMap,\n  DirectionsRenderer,\n} from \"react-google-maps\";\nimport { compose, withProps, lifecycle } from \"recompose\";\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport LoadingScreen from 'src/components/LoadingScreen';\nimport Gallery from './Gallery'\nimport Uploader from './Uploader'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n  },\n  content: {\n    padding: 0,\n    '& .MuiTableCell-root': {\n      borderBottom: 'none'\n    }\n  },\n  headerDistance: {\n    textAlign: 'center',\n    padding: '10px 0em',\n  },\n  addInfoContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '0px 15px',\n  },\n  addInfoTitle: {\n    fontSize: '14px',\n    color: deepPurple['A200'],\n    textTransform: 'uppercase',\n    fontWeight: 'bold'\n  },\n  addInfoSubTitle: {\n    backgroundColor: '#f7f7f7',\n    padding: '15px',\n    wordWrap: 'break-word',\n    display: 'flex',\n    flexDirection: 'column',\n  }\n}));\n\nfunction MovingDetails({ job, className, images, setImages, ...rest }) {\n  const submitted = true\n  const classes = useStyles();\n  const apiKey = 'AIzaSyADEDKabHN5FBcOroOU1W7BzUam0Az8gGQ'\n  const google = window.google = window.google ? window.google : {}\n  const [distance, setDistance] = useState()\n  const [fullJob, setFullJob] = useState()\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchJobs = () => {\n      axios.get(`/api/v1/jobs/${job.id}`).then((response) => {\n        if (mounted) {\n          setFullJob(response.data);\n        }\n      });\n    }\n    fetchJobs();\n\n    return () => {\n      mounted = false;\n    };\n  }, [job.id]);\n\n  const initMap = () => {\n      let origin = fullJob.origin.address\n      let destination = fullJob.destination.address\n      const MapWithADirectionsRenderer = compose(\n        withProps({\n          googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${apiKey}&v=3.exp&libraries=geometry,drawing,places`,\n          loadingElement: <div style={{ height: `100%` }} />,\n          containerElement: <div style={{ height: `200px`, width: `95%`, margin: `auto` }} />,\n          mapElement: <div style={{ height: `100%` }} />,\n        }),\n        withGoogleMap,\n        lifecycle({\n          componentDidMount() {\n            const officeHome = \"Boston, MA\";\n\n            //map with direction from pickup to delivery\n            const DirectionsService = new google.maps.DirectionsService();\n            DirectionsService.route({\n              origin: origin,\n              destination: destination,\n              travelMode: google.maps.TravelMode.DRIVING,\n            }, (result, status) => {\n              if (status === google.maps.DirectionsStatus.OK) {\n                this.setState({\n                  directions: result,\n                });\n                setDistance(result.routes[0].legs[0].distance.text)\n              }\n            });\n          }\n        })\n      )(props =>\n        <GoogleMap\n          defaultZoom={7}\n          defaultCenter={new google.maps.LatLng(42.5659907, -72.2317007)}\n        >\n          {props.directions && <DirectionsRenderer directions={props.directions} />}\n        </GoogleMap>\n      );\n      return(\n        <MapWithADirectionsRenderer google={google}/>\n      )\n  }\n\n  if(!fullJob){\n    return null\n  }\n  const showInMapClickedOrigin = () => {\n      window.open(`https://maps.google.com?q=${fullJob.origin.address}`);\n    };\n\n    const showInMapClickedDestination = () => {\n      window.open(`https://maps.google.com?q=${fullJob.destination.address}`);\n    };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Move Overview\" />\n      {!fullJob ? null : initMap()}\n\n      <CardContent className={classes.content}>\n        <Box className={classes.headerDistance}>{distance}</Box>\n        <Divider />\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Moving Date: </TableCell>\n              <TableCell style={{fontWeight: 'bold'}}>\n                {fullJob.job.delivery_date ? <Box>{moment(fullJob.job.pick_up_date, 'MM/DD/YYYY').format(\"MMM DD, YYYY\")} <span style={{fontSize: '12px', marginLeft: '10px', fontWeight: 300}}>to storage</span></Box> : moment(fullJob.job.pick_up_date, 'MM/DD/YYYY').format(\"MMM DD, YYYY\") }\n              </TableCell>\n            </TableRow>\n            {\n              (fullJob.job.delivery_date === null )\n              ?\n              null\n              :\n                <TableRow>\n                  <TableCell>Delivery Date: </TableCell>\n                  <TableCell style={{fontWeight: 'bold'}}>\n                    {moment(fullJob.job.delivery_date, 'MM/DD/YYYY').format(\"MMM DD, YYYY\")}\n                  </TableCell>\n                </TableRow>\n            }\n            <TableRow>\n              <TableCell>Moving From: </TableCell>\n              <TableCell>\n                <Box>\n                  <Button\n                    style={{padding: '0px'}}\n                    onClick={showInMapClickedOrigin}\n                  >\n                    {fullJob.origin.address}\n                  </Button>\n                </Box>\n                <Box component=\"div\" display=\"inline\" style={{fontWeight: 'bold'}}>*{fullJob.origin.floor}</Box>\n                <Box component=\"div\" display=\"inline\" ml={2}>Apt# {fullJob.origin.apt_number}</Box>\n              </TableCell>\n            </TableRow>\n            <TableRow >\n              <TableCell>Moving To:</TableCell>\n              <TableCell>\n                <Box>\n                  <Button\n                    style={{padding: '0px'}}\n                    onClick={showInMapClickedDestination}\n                  >\n                    {fullJob.destination.address}\n                  </Button>\n                </Box>\n                <Box component=\"div\" display=\"inline\" style={{fontWeight: 'bold'}}>*{fullJob.destination.floor}</Box>\n                <Box component=\"div\" display=\"inline\" ml={2}>Apt# {fullJob.destination.apt_number}</Box>\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell style={{padding: '0px'}}><Divider /></TableCell>\n              <TableCell style={{padding: '0px'}}><Divider /></TableCell>\n            </TableRow>\n\n            <TableRow >\n              <TableCell>Moving Type:</TableCell>\n              <TableCell>\n                {fullJob.job.job_type}\n              </TableCell>\n            </TableRow>\n            <TableRow >\n              <TableCell>Moving Size:</TableCell>\n              <TableCell style={{fontWeight: 600}}>\n                {fullJob.job.job_size}\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell style={{padding: '0px'}}><Divider /></TableCell>\n              <TableCell style={{padding: '0px'}}><Divider /></TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell >Crew:</TableCell>\n              <TableCell style={{fontWeight: 600}}>\n                {fullJob.job.crew_size} Movers\n              </TableCell>\n            </TableRow>\n\n            <TableRow >\n              <TableCell >Rate:</TableCell>\n              <TableCell style={{color: deepPurple['A200'], fontSize: '18px', fontWeight: 'bold'}}>\n                <label >$ {fullJob.job.job_rate}</label> / hr <label style={{color: 'grey', fontSize: '12px', fontStyle: 'italic', fontWeight: 'normal'}}> - billed in 15 minutes increment</label>\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell >Estimated Time:</TableCell>\n              <TableCell style={{color: '#FD7013', fontSize: '18px', fontWeight: 'bold'}}>\n                <label>{fullJob.job.estimated_time}</label> hours*\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell >Travel Time:</TableCell>\n              <TableCell>\n                <label>{fullJob.job.travel_time} (from/to HQ)</label>\n              </TableCell>\n            </TableRow>\n\n            <TableRow >\n              <TableCell >Estimated Quote:</TableCell>\n              <TableCell style={{fontWeight: 600, fontSize: '18px'}}>\n                <label>{fullJob.job.estimated_quote}</label>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n        <Box mt={2} className={classes.addInfoContainer}>\n          <Box className={classes.addInfoTitle}>\n            Additional Information:\n          </Box>\n          <Box mt={2} className={classes.addInfoSubTitle}>\n            {fullJob.job.additional_info}\n            <Gallery images={images}/>\n            <Uploader jobId={fullJob.job.id} images={images} setImages={setImages}/>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nMovingDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default MovingDetails;\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Typography,\n  makeStyles,\n  ButtonBase,\n  Menu,\n  MenuItem,\n  colors\n} from '@material-ui/core';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport Label from 'src/components/Label';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport HistoryIcon from '@material-ui/icons/History';\nimport LoadingScreen from 'src/components/LoadingScreen';\nimport moment from 'moment';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  deleteAction: {\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: theme.palette.error.dark\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  },\n  cardHeader: {\n    textAlign: 'center',\n  },\n  button: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'flex-start',\n  },\n  arrow: {\n    marginLeft: 'auto'\n  },\n  menuBox: {\n    flexDirection: 'column',\n    width: '100%',\n  },\n  menuBoxActive: {\n    backgroundColor: '#0000000a',\n  },\n  statusBox: {\n    marginTop: '-10px',\n    '& span ': {\n      fontSize: '10px',\n      backgroundColor: 'transparent',\n    },\n  },\n  topInfo: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  // popover: {\n  //   minWidth: 400,\n  // }\n}));\n\nfunction getInventoryLabel(status) {\n  const map = {\n    \"Completed\": {\n      text: 'Completed',\n      color: 'secondary'\n    },\n    \"Canceled\": {\n      text: 'Canceled',\n      color: 'error'\n    },\n    \"Needs Attention\" : {\n      text: 'Needs Attention',\n      color: 'warning'\n    },\n    \"Confirmed\" : {\n      text: 'Confirmed',\n      color: 'success'\n    }\n  };\n\n  const { text, color } = map[status];\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n}\n\nfunction OtherActions({ className, userId, history, job, ...rest }) {\n  const classes = useStyles();\n  const ref = useRef(null);\n  const [isOpen, setOpen] = useState(false);\n  const [jobs, setJobs] = useState();\n  const [origins, setOrigins] = useState();\n  const [destinations, setDestinations] = useState();\n  const ITEM_HEIGHT = 48;\n  const currentJob = job.id\n\n  useEffect(() => {\n    let mounted = true;\n\n\n    const fetchJobs = () => {\n\n      axios.get(`/api/v1/users/${userId}`).then((response) => {\n        if (mounted) {\n          setJobs(response.data.jobs);\n          setOrigins(response.data.origins);\n          setDestinations(response.data.destinations);\n        }\n      });\n    };\n    fetchJobs();\n\n    return () => {\n      mounted = false;\n    };\n  }, [userId]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  if (!jobs || !origins || !destinations) {\n    return null;\n  }\n\n  const getCity = (string) => {\n    var arr = string.split(\",\");\n    var fst = arr.splice(1,2).join(\",\");\n    return fst\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"HELPFUL LINKS\" className={classes.cardHeader}/>\n      <Divider />\n      <CardContent>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"flex-start\"\n        >\n          <Button\n            className={classes.button}\n            component={ButtonBase}\n            onClick={handleOpen}\n            ref={ref}\n          >\n            <HistoryIcon className={classes.actionIcon} />\n              My Moves History ({jobs.length})\n              <ArrowForwardIosIcon className={clsx(classes.actionIcon, classes.arrow)} />\n          </Button>\n\n            <Menu\n              onClose={handleClose}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center'\n              }}\n              keepMounted\n              getContentAnchorEl={null}\n              anchorEl={ref.current}\n              open={isOpen}\n              PaperProps={{\n                style: {\n                  maxHeight: ITEM_HEIGHT * 6,\n                },\n                className: classes.popover\n              }}\n            >\n              {\n                jobs.map((job, i) => {\n                  var newOrigin = ''\n                  var newDestination = ''\n                  origins.map(origin => {\n                    if(origin.job_id === job.id) {\n                      newOrigin = origin.address\n                    }\n                  })\n                  destinations.map(destination => {\n                    if(destination.job_id === job.id) {\n                      newDestination = destination.address\n                    }\n                  })\n                  return(\n                    <MenuItem\n                      key={i}\n                      open={isOpen}\n                      className={job.id === currentJob ? classes.menuBoxActive : null\n                      }\n                      onClick={() => {\n                        history.push(`/calendar/${job.id}`)\n                      }}\n                    >\n                      <Box\n                        display=\"flex\"\n                        className={classes.menuBox}\n                      >\n                        <Box className={classes.topInfo}>\n                          <Box>\n                            {moment(job.pick_up_date, 'MM/DD/YYYY').format(\"MMM DD, YYYY\")}\n                          </Box>\n                          <Box>\n                            {getCity(newOrigin)}\n                          </Box>\n                          <Box>\n                            <ArrowRightAltIcon />\n                          </Box>\n                          <Box>\n                            {getCity(newDestination)}\n                          </Box>\n\n                        </Box>\n                        <Box\n                          className={classes.statusBox}\n                        >\n                          {getInventoryLabel(job.job_status)}\n                        </Box>\n                        <Divider />\n                      </Box>\n\n                    </MenuItem>\n                  )\n                })\n              }\n            </Menu>\n\n          <Button className={classes.button}>\n            <BeachAccessIcon className={classes.actionIcon} />\n              Certificate of Insurance\n            <ArrowForwardIosIcon className={clsx(classes.actionIcon, classes.arrow)} />\n          </Button>\n          <Button className={classes.button}>\n            <FileCopyIcon className={classes.actionIcon} />\n              Bill of Lading\n            <ArrowForwardIosIcon className={clsx(classes.actionIcon, classes.arrow)} />\n          </Button>\n        </Box>\n        <Box\n          mt={1}\n          mb={2}\n        >\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            Remove this customer’s data if he requested that, if not please\n            be aware that what has been deleted can never brough back\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nOtherActions.propTypes = {\n  className: PropTypes.string\n};\n\nexport default OtherActions;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Container, Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport CustomerDetails from './CustomerDetails';\nimport MovingDetails from './MovingDetails';\nimport OtherActions from './OtherActions'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  grid: {\n    marginTop: theme.spacing(2)\n  },\n  otherActions: {\n    marginTop: '2em'\n  }\n}));\n\nfunction JobDetails({ match, history }) {\n  const classes = useStyles();\n  const jobPath = match.params.jobId;\n  const [jobDetails, setJobDetails] = useState();\n  const [images, setImages] = useState();\n\n  useEffect(() => {\n    let mounted = true;\n\n\n    const fetchJob = () => {\n      axios.get(`/api/v1/jobs/${jobPath}`).then((response) => {\n        if (mounted) {\n          setJobDetails(response.data.job);\n          setImages(response.data.images)\n        }\n      })\n      .catch(error => {history.push('/calendar')})\n    };\n\n    fetchJob();\n\n    return () => {\n      mounted = false;\n    };\n  }, [jobPath]);\n\n  if (!jobDetails) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Job Details\"\n    >\n      <Container maxWidth={false}>\n        <Header job={jobDetails}/>\n        <Grid\n          className={classes.grid}\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            md={4}\n            xl={3}\n            xs={12}\n          >\n            <Grid item>\n              <CustomerDetails\n                userId={jobDetails.user_id}\n                job={jobDetails}\n              />\n              <OtherActions\n                job={jobDetails}\n                userId={jobDetails.user_id}\n                className={classes.otherActions}\n                history={history}\n              />\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            md={8}\n            xl={9}\n            xs={12}\n          >\n            <MovingDetails job={jobDetails} images={images} setImages={setImages}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n\nexport default JobDetails;\n"],"sourceRoot":""}