{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","hooks/useIsMountedRef.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","views/management/OrderDetailsView/Header.js","views/management/OrderDetailsView/OrderInfo.js","views/management/OrderDetailsView/OrderItems.js","views/management/OrderDetailsView/index.js"],"names":["CardHeader","React","props","ref","action","avatar","classes","className","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","other","_objectWithoutProperties","type","Typography","_extends","variant","display","color","clsx","root","content","withStyles","alignItems","padding","flex","marginRight","alignSelf","marginTop","name","CardActions","_props$disableSpacing","disableSpacing","spacing","marginLeft","useIsMountedRef","isMounted","useRef","useEffect","current","createSvgIcon","d","useStyles","makeStyles","theme","actionIcon","Header","order","rest","Grid","container","justify","item","Breadcrumbs","separator","fontSize","aria-label","Link","to","RouterLink","Button","SvgIcon","statusOptions","OrderInfo","useState","status","setStatus","Card","Divider","Table","TableBody","TableRow","TableCell","customer","address","city","country","id","split","shift","moment","createdAt","format","promoCode","currency","value","TextField","fullWidth","onChange","event","persist","target","select","SelectProps","native","map","option","key","OrderItems","Box","minWidth","TableHead","items","cuantity","billing","TablePagination","count","length","onChangePage","onChangeRowsPerPage","page","rowsPerPage","rowsPerPageOptions","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","OrderDetailsView","isMountedRef","setOrder","getOrder","useCallback","axios","get","then","response","data","Page","Container","maxWidth","mt","md","xl","xs"],"mappings":"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","file":"static/js/41.f1b31fbc.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Edit as EditIcon } from 'react-feather';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ order, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app/management\"\n            component={RouterLink}\n          >\n            Management\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Orders\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Order Details\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <EditIcon />\n          </SvgIcon>\n          Edit\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardHeader,\n  Divider,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport ReceiptIcon from '@material-ui/icons/ReceiptOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst statusOptions = ['Canceled', 'Completed', 'Rejected'];\n\nfunction OrderInfo({ order, className, ...rest }) {\n  const classes = useStyles();\n  const [status, setStatus] = useState(statusOptions[0]);\n\n  const handleChange = (event) => {\n    event.persist();\n    setStatus(event.target.value);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>Customer</TableCell>\n            <TableCell>\n              <Link\n                component={RouterLink}\n                to=\"/app/management/customers/1\"\n              >\n                {order.customer.name}\n              </Link>\n              <div>{order.customer.address}</div>\n              <div>{order.customer.city}</div>\n              <div>{order.customer.country}</div>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              ID\n            </TableCell>\n            <TableCell>\n              #\n              {order.id.split('-').shift()}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Ref</TableCell>\n            <TableCell>{order.ref}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>\n              {moment(order.createdAt).format('DD/MM/YYYY HH:MM')}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Promotion Code</TableCell>\n            <TableCell>{order.promoCode ? order.promoCode : 'N/A'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Amount</TableCell>\n            <TableCell>\n              {order.currency}\n              {order.value}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Status</TableCell>\n            <TableCell>\n              <TextField\n                fullWidth\n                name=\"option\"\n                onChange={handleChange}\n                select\n                SelectProps={{ native: true }}\n                value={status}\n                variant=\"outlined\"\n              >\n                {statusOptions.map((option) => (\n                  <option\n                    key={option}\n                    value={option}\n                  >\n                    {option}\n                  </option>\n                ))}\n              </TextField>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n      <CardActions>\n        <Button>\n          <ReceiptIcon className={classes.actionIcon} />\n          Resend invoice\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nOrderInfo.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction OrderItems({ order, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Description\n                </TableCell>\n                <TableCell>\n                  Billing Cycle\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell>\n                  Amount\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {order.items.map((item) => (\n                <TableRow key={item.id}>\n                  <TableCell>\n                    {item.name}\n                    {' '}\n                    x\n                    {' '}\n                    {item.cuantity}\n                  </TableCell>\n                  <TableCell>{item.billing}</TableCell>\n                  <TableCell>{item.status}</TableCell>\n                  <TableCell>\n                    {item.currency}\n                    {item.value}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={order.items.length}\n        onChangePage={() => {}}\n        onChangeRowsPerPage={() => {}}\n        page={0}\n        rowsPerPage={5}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n}\n\nOrderItems.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderItems;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport OrderInfo from './OrderInfo';\nimport OrderItems from './OrderItems';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction OrderDetailsView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [order, setOrder] = useState(null);\n\n  const getOrder = useCallback(() => {\n    axios\n      .get('/api/management/orders/1')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setOrder(response.data.order);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getOrder();\n  }, [getOrder]);\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Order Details\"\n    >\n      <Container maxWidth={false}>\n        <Header order={order} />\n        <Box mt={2}>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={4}\n              xl={3}\n              xs={12}\n            >\n              <OrderInfo order={order} />\n            </Grid>\n            <Grid\n              item\n              md={8}\n              xl={9}\n              xs={12}\n            >\n              <OrderItems order={order} />\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default OrderDetailsView;\n"],"sourceRoot":""}