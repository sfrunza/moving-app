{"version":3,"sources":["utils/getInitials.js","components/Label.js","views/management/InvoiceListView/Header.js","views/management/InvoiceListView/Results.js","views/management/InvoiceListView/index.js"],"names":["name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","defaultProps","action","marginBottom","marginLeft","actionIcon","marginRight","Header","Grid","container","justify","item","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","Box","mt","Button","SvgIcon","statusOptions","id","sortOptions","value","label","queryField","width","statusField","flexBasis","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","zIndex","background","default","bulkAction","avatar","colors","red","common","white","Results","invoices","useState","selectedInvoices","setSelectedInvoices","page","setPage","limit","setLimit","query","setQuery","sort","setSort","status","filters","setFilters","handleSelectAllInvoices","event","target","checked","invoice","filteredInvoices","filter","matches","containsQuery","forEach","property","customer","toLowerCase","includes","applyFilters","paginatedInvoices","customers","applyPagination","enableBulkOperations","length","selectedSomeInvoices","selectedAllInvoices","Card","p","TextField","InputProps","startAdornment","InputAdornment","onChange","persist","placeholder","select","SelectProps","native","option","key","prevFilters","statusOption","Checkbox","indeterminate","Table","TableHead","TableRow","TableCell","align","TableBody","isInvoiceSelected","hover","selected","invoiceId","prevSelected","Avatar","getInitials","ml","underline","email","inventoryType","paid","text","pending","canceled","getStatusLabel","currency","amount","toFixed","moment","createdAt","format","IconButton","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","dark","minHeight","paddingTop","paddingBottom","InvoiceListView","isMountedRef","useIsMountedRef","setInvoices","getInvoices","useCallback","axios","get","then","response","current","data","useEffect","Page","title","Container","maxWidth"],"mappings":"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","file":"static/js/30.86ca361b.chunk.js","sourcesContent":["export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  fade,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase',\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nfunction Label({\n  className,\n  color,\n  children,\n  style,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nLabel.defaultProps = {\n  className: '',\n  color: 'secondary'\n};\n\nexport default Label;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  PlusCircle as PlusCircleIcon,\n  Download as DownloadIcon,\n  Upload as UploadIcon\n} from 'react-feather';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app/management\"\n            component={RouterLink}\n          >\n            Management\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Invoices\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          All Invoices\n        </Typography>\n        <Box mt={2}>\n          <Button className={classes.action}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.actionIcon}\n            >\n              <UploadIcon />\n            </SvgIcon>\n            Import\n          </Button>\n          <Button className={classes.action}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.actionIcon}\n            >\n              <DownloadIcon />\n            </SvgIcon>\n            Export\n          </Button>\n        </Box>\n      </Grid>\n      <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          className={classes.action}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <PlusCircleIcon />\n          </SvgIcon>\n          New Invoice\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  InputAdornment,\n  IconButton,\n  Link,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon\n} from 'react-feather';\nimport Label from 'src/components/Label';\nimport getInitials from 'src/utils/getInitials';\n\nconst statusOptions = [\n  {\n    id: 'all',\n    name: 'All'\n  },\n  {\n    id: 'paid',\n    name: 'Paid'\n  },\n  {\n    id: 'pending',\n    name: 'Pending'\n  },\n  {\n    id: 'canceled',\n    name: 'Canceled'\n  }\n];\n\nconst sortOptions = [\n  {\n    value: 'createdAt|desc',\n    label: 'Newest first'\n  },\n  {\n    value: 'createdAt|asc',\n    label: 'Oldest first'\n  }\n];\n\nfunction getStatusLabel(inventoryType) {\n  const map = {\n    paid: {\n      text: 'Paid',\n      color: 'success'\n    },\n    pending: {\n      text: 'Pending',\n      color: 'warning'\n    },\n    canceled: {\n      text: 'Canceled',\n      color: 'error'\n    }\n  };\n\n  const { text, color } = map[inventoryType];\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n}\n\nfunction applyFilters(invoices, query, filters) {\n  return invoices.filter((invoice) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['name', 'email'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (invoice.customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    if (filters.status && invoice.status !== filters.status) {\n      matches = false;\n    }\n\n    return matches;\n  });\n}\n\nfunction applyPagination(customers, page, limit) {\n  return customers.slice(page * limit, page * limit + limit);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  queryField: {\n    width: 500\n  },\n  statusField: {\n    flexBasis: 200\n  },\n  bulkOperations: {\n    position: 'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2)\n  },\n  avatar: {\n    backgroundColor: colors.red[500],\n    color: colors.common.white\n  }\n}));\n\nfunction Results({ className, invoices, ...rest }) {\n  const classes = useStyles();\n  const [selectedInvoices, setSelectedInvoices] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    status: null\n  });\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handleStatusChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      status: value\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllInvoices = (event) => {\n    setSelectedInvoices(event.target.checked\n      ? invoices.map((invoice) => invoice.id)\n      : []);\n  };\n\n  const handleSelectOneInvoice = (event, invoiceId) => {\n    if (!selectedInvoices.includes(invoiceId)) {\n      setSelectedInvoices((prevSelected) => [...prevSelected, invoiceId]);\n    } else {\n      setSelectedInvoices((prevSelected) => prevSelected.filter((id) => id !== invoiceId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredInvoices = applyFilters(invoices, query, filters);\n  const paginatedInvoices = applyPagination(filteredInvoices, page, limit);\n  const enableBulkOperations = selectedInvoices.length > 0;\n  const selectedSomeInvoices = selectedInvoices.length > 0 && selectedInvoices.length < invoices.length;\n  const selectedAllInvoices = selectedInvoices.length === invoices.length;\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={2}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <TextField\n            className={classes.queryField}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SvgIcon\n                    fontSize=\"small\"\n                    color=\"action\"\n                  >\n                    <SearchIcon />\n                  </SvgIcon>\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search invoices by customer\"\n            value={query}\n            variant=\"outlined\"\n          />\n          <Box flexGrow={1} />\n          <TextField\n            label=\"Sort By\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <TextField\n            className={classes.statusField}\n            label=\"Status\"\n            name=\"status\"\n            onChange={handleStatusChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.status || 'all'}\n            variant=\"outlined\"\n          >\n            {statusOptions.map((statusOption) => (\n              <option\n                key={statusOption.id}\n                value={statusOption.id}\n              >\n                {statusOption.name}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n      </Box>\n      {enableBulkOperations && (\n        <div className={classes.bulkOperations}>\n          <div className={classes.bulkActions}>\n            <Checkbox\n              checked={selectedAllInvoices}\n              indeterminate={selectedSomeInvoices}\n              onChange={handleSelectAllInvoices}\n            />\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Delete\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Edit\n            </Button>\n          </div>\n        </div>\n      )}\n      <PerfectScrollbar>\n        <Box minWidth={1200}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllInvoices}\n                    indeterminate={selectedSomeInvoices}\n                    onChange={handleSelectAllInvoices}\n                  />\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell>\n                  Amount\n                </TableCell>\n                <TableCell>\n                  ID\n                </TableCell>\n                <TableCell>\n                  Date\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedInvoices.map((invoice) => {\n                const isInvoiceSelected = selectedInvoices.includes(invoice.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={invoice.id}\n                    selected={isInvoiceSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isInvoiceSelected}\n                        onChange={(event) => handleSelectOneInvoice(event, invoice.id)}\n                        value={isInvoiceSelected}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        display=\"flex\"\n                        alignItems=\"center\"\n                      >\n                        <Avatar className={classes.avatar}>\n                          {getInitials(invoice.customer.name)}\n                        </Avatar>\n                        <Box ml={2}>\n                          <Link\n                            variant=\"subtitle2\"\n                            color=\"textPrimary\"\n                            component={RouterLink}\n                            underline=\"none\"\n                            to=\"#\"\n                          >\n                            {invoice.customer.name}\n                          </Link>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                          >\n                            {invoice.customer.email}\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {getStatusLabel(invoice.status)}\n                    </TableCell>\n                    <TableCell>\n                      {invoice.currency}\n                      {invoice.amount.toFixed(2)}\n                    </TableCell>\n                    <TableCell>\n                      {invoice.id}\n                    </TableCell>\n                    <TableCell>\n                      {moment(invoice.createdAt).format('DD/MM/YYYY')}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        component={RouterLink}\n                        to=\"#\"\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <EditIcon />\n                        </SvgIcon>\n                      </IconButton>\n                      <IconButton\n                        component={RouterLink}\n                        to=\"/app/management/invoices/1\"\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <ArrowRightIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredInvoices.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  invoices: PropTypes.array\n};\n\nResults.defaultProps = {\n  invoices: []\n};\n\nexport default Results;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Header from './Header';\nimport Results from './Results';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: 100\n  }\n}));\n\nfunction InvoiceListView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [invoices, setInvoices] = useState(null);\n\n  const getInvoices = useCallback(() => {\n    axios\n      .get('/api/management/invoices')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setInvoices(response.data.invoices);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getInvoices();\n  }, [getInvoices]);\n\n  if (!invoices) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Invoice List\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n        {invoices && (\n          <Box mt={3}>\n            <Results invoices={invoices} />\n          </Box>\n        )}\n      </Container>\n    </Page>\n  );\n}\n\nexport default InvoiceListView;\n"],"sourceRoot":""}