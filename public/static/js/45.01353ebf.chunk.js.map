{"version":3,"sources":["utils/wait.js","views/extra/forms/ReduxFormView/BasicForm.js","views/extra/forms/ReduxFormView/index.js"],"names":["wait","time","Promise","res","setTimeout","validationSchema","Yup","shape","email","required","firstName","lastName","password","min","max","policy","oneOf","submit","a","SubmissionError","_error","renderTextField","input","label","meta","touched","invalid","error","rest","TextField","fullWidth","helperText","variant","renderCheckbox","Box","alignItems","display","ml","Checkbox","checked","value","onChange","Boolean","FormHelperText","reduxForm","form","validate","values","formErrors","validateSync","abortEarly","errors","inner","forEach","path","message","initialValues","handleSubmit","submitting","useState","isAlertVisible","setAlertVisible","onSubmit","Card","CardHeader","title","Divider","CardContent","mb","Alert","onClose","severity","justifyContent","my","CircularProgress","Grid","container","spacing","item","md","xs","Field","name","component","mt","type","Typography","color","Link","href","Button","disabled","size","useStyles","makeStyles","theme","root","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","ReduxFormView","classes","Page","className","Container","maxWidth","Breadcrumbs","separator","fontSize","aria-label","to","RouterLink"],"mappings":"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","file":"static/js/45.01353ebf.chunk.js","sourcesContent":["export const wait = (time) => new Promise((res) => setTimeout(res, time));\n\nexport default wait;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Field, SubmissionError, reduxForm } from 'redux-form';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormHelperText,\n  Grid,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport wait from 'src/utils/wait';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email().required('Required'),\n  firstName: Yup.string().required('Required'),\n  lastName: Yup.string().required('Required'),\n  password: Yup.string().min(7, 'Must be at least 7 characters').max(255).required('Required'),\n  policy: Yup.boolean().oneOf([true], 'This field must be checked')\n});\n\nfunction validate(values) {\n  const formErrors = {};\n\n  try {\n    validationSchema.validateSync(values, { abortEarly: false });\n  } catch (errors) {\n    errors.inner.forEach((error) => {\n      formErrors[error.path] = error.message;\n    });\n  }\n\n  return formErrors;\n}\n\nasync function submit() {\n  try {\n    // Make API request\n    await wait(1000);\n  } catch (error) {\n    throw new SubmissionError({\n      _error: 'Login failed!'\n    });\n  }\n}\n\nfunction renderTextField({\n  input,\n  label,\n  meta: { touched, invalid, error },\n  ...rest\n}) {\n  return (\n    <TextField\n      error={touched && invalid}\n      fullWidth\n      helperText={touched && error}\n      label={label}\n      variant=\"outlined\"\n      {...input}\n      {...rest}\n    />\n  );\n}\n\nfunction renderCheckbox({\n  input,\n  label,\n  meta: { touched, invalid, error },\n  ...rest\n}) {\n  return (\n    <div>\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n        ml={-1}\n      >\n        <Checkbox\n          checked={!!input.value}\n          onChange={input.onChange}\n          {...input}\n          {...rest}\n        />\n        {label}\n      </Box>\n      {Boolean(touched && invalid) && (\n        <FormHelperText error>\n          {error}\n        </FormHelperText>\n      )}\n    </div>\n  );\n}\n\nfunction BasicForm({ handleSubmit, submitting }) {\n  const [isAlertVisible, setAlertVisible] = useState(true);\n\n  return (\n    <form onSubmit={handleSubmit(submit)}>\n      <Card>\n        <CardHeader title=\"Basic Form\" />\n        <Divider />\n        <CardContent>\n          {isAlertVisible && (\n            <Box mb={3}>\n              <Alert\n                onClose={() => setAlertVisible(false)}\n                severity=\"info\"\n              >\n                This is an info alert - check it out!\n              </Alert>\n            </Box>\n          )}\n          {(submitting) ? (\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n              my={5}\n            >\n              <CircularProgress />\n            </Box>\n          ) : (\n            <>\n              <Grid\n                container\n                spacing={2}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Field\n                    name=\"firstName\"\n                    label=\"First Name\"\n                    component={renderTextField}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Field\n                    name=\"lastName\"\n                    label=\"Last Name\"\n                    component={renderTextField}\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Field\n                  name=\"email\"\n                  label=\"Email Address\"\n                  type=\"email\"\n                  component={renderTextField}\n                />\n              </Box>\n              <Box mt={2}>\n                <Field\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  component={renderTextField}\n                />\n              </Box>\n              <Box mt={2}>\n                <Field\n                  name=\"policy\"\n                  label={(\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                    >\n                      I have read the\n                      {' '}\n                      <Link\n                        component=\"a\"\n                        href=\"#\"\n                        color=\"secondary\"\n                      >\n                        Terms and Conditions\n                      </Link>\n                    </Typography>\n                )}\n                  component={renderCheckbox}\n                />\n              </Box>\n              <Box mt={2}>\n                <Button\n                  color=\"secondary\"\n                  disabled={submitting}\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Sign up\n                </Button>\n              </Box>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    </form>\n  );\n}\n\nBasicForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired\n};\n\nexport default reduxForm({\n  form: 'BasicForm',\n  validate,\n  initialValues: {\n    email: 'johnnydoe@yahoo.com',\n    firstName: 'John',\n    lastName: 'Doe',\n    password: 'thisisasecuredpassword',\n    policy: false\n  }\n})(BasicForm);\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Breadcrumbs,\n  Container,\n  Grid,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Page from 'src/components/Page';\nimport BasicForm from './BasicForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction ReduxFormView() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Formik Form\"\n    >\n      <Container maxWidth=\"lg\">\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Forms\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Redux Form\n        </Typography>\n        <Box mt={3}>\n          <Grid container>\n            <Grid\n              item\n              xs={12}\n              md={6}\n            >\n              <BasicForm />\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ReduxFormView;\n"],"sourceRoot":""}