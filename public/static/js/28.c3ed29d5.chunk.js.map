{"version":3,"sources":["../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","views/management/OrderDetailsView/Header.js","views/management/OrderDetailsView/OrderInfo.js","views/management/OrderDetailsView/OrderItems.js","views/management/OrderDetailsView/index.js"],"names":["tablelvl2","variant","TableHead","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","Tablelvl2Context","Provider","value","_extends","clsx","root","role","withStyles","display","name","CardActions","_props$disableSpacing","disableSpacing","spacing","alignItems","padding","marginLeft","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","backIconButtonProps","count","nextIconButtonProps","onChangePage","page","rowsPerPage","theme","useTheme","IconButton","onClick","event","disabled","color","direction","Math","ceil","defaultLabelDisplayedRows","from","to","concat","defaultRowsPerPageOptions","TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","MenuItemComponent","native","MenuItem","Toolbar","toolbar","spacer","length","Typography","caption","Select","select","icon","selectIcon","input","InputBase","selectRoot","onChange","inputProps","map","rowsPerPageOption","menuItem","key","label","min","actions","title","palette","text","primary","fontSize","typography","pxToRem","overflow","minHeight","paddingRight","flex","flexShrink","marginRight","paddingLeft","textAlign","textAlignLast","useStyles","makeStyles","actionIcon","Header","order","rest","Grid","container","justify","item","Breadcrumbs","separator","aria-label","Link","RouterLink","Button","SvgIcon","statusOptions","OrderInfo","useState","status","setStatus","Card","CardHeader","Divider","Table","TableBody","TableRow","customer","address","city","country","id","split","shift","moment","createdAt","format","promoCode","currency","TextField","fullWidth","persist","target","option","OrderItems","Box","minWidth","items","cuantity","billing","backgroundColor","background","dark","paddingTop","paddingBottom","OrderDetailsView","isMountedRef","useIsMountedRef","setOrder","getOrder","useCallback","axios","get","then","response","current","data","useEffect","Page","Container","maxWidth","mt","md","xl","xs"],"mappings":"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","file":"static/js/28.c3ed29d5.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    inputProps: {\n      'aria-label': labelRowsPerPage\n    }\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.string,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Edit as EditIcon } from 'react-feather';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ order, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app/management\"\n            component={RouterLink}\n          >\n            Management\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Orders\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Order Details\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <EditIcon />\n          </SvgIcon>\n          Edit\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardHeader,\n  Divider,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport ReceiptIcon from '@material-ui/icons/ReceiptOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst statusOptions = ['Canceled', 'Completed', 'Rejected'];\n\nfunction OrderInfo({ order, className, ...rest }) {\n  const classes = useStyles();\n  const [status, setStatus] = useState(statusOptions[0]);\n\n  const handleChange = (event) => {\n    event.persist();\n    setStatus(event.target.value);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>Customer</TableCell>\n            <TableCell>\n              <Link\n                component={RouterLink}\n                to=\"/app/management/customers/1\"\n              >\n                {order.customer.name}\n              </Link>\n              <div>{order.customer.address}</div>\n              <div>{order.customer.city}</div>\n              <div>{order.customer.country}</div>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              ID\n            </TableCell>\n            <TableCell>\n              #\n              {order.id.split('-').shift()}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Ref</TableCell>\n            <TableCell>{order.ref}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>\n              {moment(order.createdAt).format('DD/MM/YYYY HH:MM')}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Promotion Code</TableCell>\n            <TableCell>{order.promoCode ? order.promoCode : 'N/A'}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Amount</TableCell>\n            <TableCell>\n              {order.currency}\n              {order.value}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Status</TableCell>\n            <TableCell>\n              <TextField\n                fullWidth\n                name=\"option\"\n                onChange={handleChange}\n                select\n                SelectProps={{ native: true }}\n                value={status}\n                variant=\"outlined\"\n              >\n                {statusOptions.map((option) => (\n                  <option\n                    key={option}\n                    value={option}\n                  >\n                    {option}\n                  </option>\n                ))}\n              </TextField>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n      <CardActions>\n        <Button>\n          <ReceiptIcon className={classes.actionIcon} />\n          Resend invoice\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nOrderInfo.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction OrderItems({ order, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Description\n                </TableCell>\n                <TableCell>\n                  Billing Cycle\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell>\n                  Amount\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {order.items.map((item) => (\n                <TableRow key={item.id}>\n                  <TableCell>\n                    {item.name}\n                    {' '}\n                    x\n                    {' '}\n                    {item.cuantity}\n                  </TableCell>\n                  <TableCell>{item.billing}</TableCell>\n                  <TableCell>{item.status}</TableCell>\n                  <TableCell>\n                    {item.currency}\n                    {item.value}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={order.items.length}\n        onChangePage={() => {}}\n        onChangeRowsPerPage={() => {}}\n        page={0}\n        rowsPerPage={5}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n}\n\nOrderItems.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderItems;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport OrderInfo from './OrderInfo';\nimport OrderItems from './OrderItems';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction OrderDetailsView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [order, setOrder] = useState(null);\n\n  const getOrder = useCallback(() => {\n    axios\n      .get('/api/management/orders/1')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setOrder(response.data.order);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getOrder();\n  }, [getOrder]);\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Order Details\"\n    >\n      <Container maxWidth={false}>\n        <Header order={order} />\n        <Box mt={2}>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={4}\n              xl={3}\n              xs={12}\n            >\n              <OrderInfo order={order} />\n            </Grid>\n            <Grid\n              item\n              md={8}\n              xl={9}\n              xs={12}\n            >\n              <OrderItems order={order} />\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default OrderDetailsView;\n"],"sourceRoot":""}